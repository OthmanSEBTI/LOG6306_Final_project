sha,message,html_url,repository_id,repository_full_name,repository_private,repository_fork
a29f2022d5e6bda1f005dac002e997318c8709ed,"New model (#2625)//* Start of significant pipeline redesign for improved API-driven use.////* Resolve test breaks.////* All tests pass.////* More test fixes.////* Start providing facility for tracking skipped files in artifact provider.////* Ongoing architectural and test updates for new pipeline model.////* Formatting updates.////* More work for unit-testing.////* Remove instance data from analyze command base////* Update logger dispose pattern to be driven by context dispose.////* Eliminate single-threaded analysis command base.////* Update release history and move location.////* Update release history for single threaded engine removal.////* Restore build after converting various URL dereferences to call GetFileName/Path extenson method.////* Clean up dispose pattern for validation command.////* Update package build for release history move.////* Update various references to moved release history markdown file.////* Formatting changes.////* Code clean-up in support of broader driver functionality.////* All tests pass after recent pipeline updates (to flow context, mostly).////* Continue converging functionality on the context object.////* All tests pass with ongoing pipeline redesign.////* Formatting.////* Updates for upstream consumers for build.////* Add rich return code to context.////* Collapse new pipeline model into single method with options and context.////* Add explicit return error for command-line processing issue.////* Allow null context to LogUnhandedEngineException.////* Correct exit reason on analysis cancellation.////* Restore tests.////* Resolve merge conflict passing incorrect context object.////* All tests pass.////* Ready for new model mvp.////* Update release notes.////* Add new set classes.////* Update release notes.////* Fix test breaks.////* All tests pass.////* Small updates after code review.////* Make traces test windows only.////* Disable misbehaving test.",https://github.com/microsoft/sarif-sdk/commit/a29f2022d5e6bda1f005dac002e997318c8709ed,45640472,microsoft/sarif-sdk,False,False
266039f238653df676863fc8d7dcbbb1a7579a79,"Performance pipeline using artifacts built by previous pipelines (#12778)//This PR allows us to reuse artifacts that are created in the pipeline//that builds our client packages to run the memory and runtime//performance tests on.////There are some changes that we've had to make the repo structure in//order for this to function. I have written them down here://**Execution Time Profiling Tests**////1. For both `experimental-tree` and `tree`: The packed `dist/test`//folder does not have the json files necessary to run the benchmark tests//so we have to change the postpack script to copy over the .ts files from//`src/test` and publish them as `test_files`, and in the pipeline, we//have to run a separate `npm build:test` to build the test files before//running the benchmark tests. See: microsoft/FluidFramework@996ba23//2. `experimental-tree` does not have a `buidl:test` command so we faked//it and introduced `build:test : npm run build` to the package.json so//that it could follow the same pattern at the others. See//microsoft/FluidFramework@f0642e790d407657bc8209f6ef5b4d00477c3679////Because of number 1 above, we didn't have to make the following changes,//but I am recording those changes here so we know about them:////**Memory Profiling Tests**////- For all the three packages (map, sequence and matrix), the packed//`dist/test` folder does not have the .mocharc.js file necessary to run//the test, so we need to move the `.mocharc.js` file from `src/test/`//files up to the root directory of the package in order to run the npm//command memory commands to work. See://microsoft/FluidFramework@f4af0671d7cf3c95acf4aa1396981f3b970d3caa////Currently, the runs take about 24 minutes, which is longer than the//pipeline that builds everything from scratch (generally 21 minutes) as//there is no parallelization in this current approach.////Co-authored-by: Alex Villarreal <716334+alexvy86@users.noreply.github.com>",https://github.com/microsoft/FluidFramework/commit/266039f238653df676863fc8d7dcbbb1a7579a79,203843667,microsoft/FluidFramework,False,False
a55313314fb4732070b515237470e94627e9f332,"chore(deps-dev): Bump rimraf from 4.1.3 to 4.2.0 (#1574)//Bumps [rimraf](https://github.com/isaacs/rimraf) from 4.1.3 to 4.2.0.//<details>//<summary>Changelog</summary>//<p><em>Sourced from <a//href=""https://github.com/isaacs/rimraf/blob/main/CHANGELOG.md"">rimraf's//changelog</a>.</em></p>//<blockquote>//<h1>v4.2</h1>//<ul>//<li>Brought back <code>glob</code> support, using the new and improved//glob v9</li>//</ul>//<h1>v4.1</h1>//<ul>//<li>Improved hybrid module with no need to look at the//<code>.default</code>//dangly bit. <code>.default</code> preserved as a reference to//<code>rimraf</code>//for compatibility with anyone who came to rely on it in v4.0.</li>//<li>Accept and ignore <code>-rf</code> and <code>-fr</code> arguments to//the bin.</li>//</ul>//<h1>v4.0</h1>//<ul>//<li>Remove <code>glob</code> dependency entirely. This library now only//accepts actual file and folder names to delete.</li>//<li>Accept array of paths or single path.</li>//<li>Windows performance and reliability improved.</li>//<li>All strategies separated into explicitly exported methods.</li>//<li>Drop support for Node.js below version 14</li>//<li>rewrite in TypeScript</li>//<li>ship CJS/ESM hybrid module</li>//<li>Error on unknown arguments to the bin. (Previously they were//silently ignored.)</li>//</ul>//<h1>v3.0</h1>//<ul>//<li>Add <code>--preserve-root</code> option to executable (default//true)</li>//<li>Drop support for Node.js below version 6</li>//</ul>//<h1>v2.7</h1>//<ul>//<li>Make <code>glob</code> an optional dependency</li>//</ul>//<h1>2.6</h1>//<ul>//<li>Retry on EBUSY on non-windows platforms as well</li>//<li>Make <code>rimraf.sync</code> 10000% more reliable on Windows</li>//</ul>//<h1>2.5</h1>//<ul>//<li>Handle Windows EPERM when lstat-ing read-only dirs</li>//<li>Add glob option to pass options to glob</li>//</ul>//<h1>2.4</h1>//<ul>//<li>Add EPERM to delay/retry loop</li>//<li>Add <code>disableGlob</code> option</li>//</ul>//<h1>2.3</h1>//<!-- raw HTML omitted -->//</blockquote>//<p>... (truncated)</p>//</details>//<details>//<summary>Commits</summary>//<ul>//<li><a//href=""https://github.com/isaacs/rimraf/commit/80aef8b8a1f49a68c7fc8db3cb8d281ecf2bdfaf""><code>80aef8b</code></a>//4.2.0</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/0d19a99c30eb341d67f9e572a4e603361714d7e3""><code>0d19a99</code></a>//changelog 420</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/f768f26d6a67e7b482340712bc285f5a1bb6e670""><code>f768f26</code></a>//treat paths as glob patterns when glob option set</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/5760716a45786d1d75f48d1fffca78d04a9f0f71""><code>5760716</code></a>//make rimraf cancelable with AbortSignals</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/417cdc7184b8f80bf1414aca599f543a6e8ffb76""><code>417cdc7</code></a>//4.1.4</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/bdfa60c7dc37ee795bfd5c04f56a3270962ef416""><code>bdfa60c</code></a>//update deps, export types properly for cjs module</li>//<li><a//href=""https://github.com/isaacs/rimraf/commit/20e37999eb78fe9122c1201832ea4a76476663b6""><code>20e3799</code></a>//use NodeJS.ErrnoException instead of FsError</li>//<li>See full diff in <a//href=""https://github.com/isaacs/rimraf/compare/v4.1.3...v4.2.0"">compare//view</a></li>//</ul>//</details>//<br />//////[![Dependabot compatibility//score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rimraf&package-manager=npm_and_yarn&previous-version=4.1.3&new-version=4.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)////Dependabot will resolve any conflicts with this PR as long as you don't//alter it yourself. You can also trigger a rebase manually by commenting//`@dependabot rebase`.////[//]: # (dependabot-automerge-start)//[//]: # (dependabot-automerge-end)////---////<details>//<summary>Dependabot commands and options</summary>//<br />////You can trigger Dependabot actions by commenting on this PR://- `@dependabot rebase` will rebase this PR//- `@dependabot recreate` will recreate this PR, overwriting any edits//that have been made to it//- `@dependabot merge` will merge this PR after your CI passes on it//- `@dependabot squash and merge` will squash and merge this PR after//your CI passes on it//- `@dependabot cancel merge` will cancel a previously requested merge//and block automerging//- `@dependabot reopen` will reopen this PR if it is closed//- `@dependabot close` will close this PR and stop Dependabot recreating//it. You can achieve the same result by closing it manually//- `@dependabot ignore this major version` will close this PR and stop//Dependabot creating any more for this major version (unless you reopen//the PR or upgrade to it yourself)//- `@dependabot ignore this minor version` will close this PR and stop//Dependabot creating any more for this minor version (unless you reopen//the PR or upgrade to it yourself)//- `@dependabot ignore this dependency` will close this PR and stop//Dependabot creating any more for this dependency (unless you reopen the//PR or upgrade to it yourself)//////</details>////Signed-off-by: dependabot[bot] <support@github.com>//Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",https://github.com/microsoft/accessibility-insights-action/commit/a55313314fb4732070b515237470e94627e9f332,238042767,microsoft/accessibility-insights-action,False,False
70b39a3b68060875833cfdaf5fa04c5f962fe848,Converted task command extension to new pattern (#2579)//* Converted task command extension to new pattern////* Fixed typo,https://github.com/microsoft/azure-pipelines-agent/commit/70b39a3b68060875833cfdaf5fa04c5f962fe848,53052789,microsoft/azure-pipelines-agent,False,False
7f9a43a39eae321af6a769006aeecc091cb1b3af,Converted plugin internal commands to use new pattern (#2573)//* Converted plugin internal commands to use new pattern////* Added back missing 'sealed',https://github.com/microsoft/azure-pipelines-agent/commit/7f9a43a39eae321af6a769006aeecc091cb1b3af,53052789,microsoft/azure-pipelines-agent,False,False
1be616802d32670607dd0888b5be022cceef0e38,Convert build commands to new pattern (#2568)//* Converted TelemetryCommandExtension to new pattern////* Missed one strings file////* Converted build commands to new pattern////* Added stack trace to flaky test to help debug it////* Fixed bad merge,https://github.com/microsoft/azure-pipelines-agent/commit/1be616802d32670607dd0888b5be022cceef0e38,53052789,microsoft/azure-pipelines-agent,False,False
45bf96f54193d40a82f0cbaf3a13f6a24789457e,Converted code coverage commands to new pattern (#2584),https://github.com/microsoft/azure-pipelines-agent/commit/45bf96f54193d40a82f0cbaf3a13f6a24789457e,53052789,microsoft/azure-pipelines-agent,False,False
b2620d6dfd586a957b2bf79ac1c7f82c83b954fb,Merge pull request #649 from cristianossd/deprecated-patterns//Remove deprecated list patterns command,https://github.com/microsoft/botbuilder-tools/commit/b2620d6dfd586a957b2bf79ac1c7f82c83b954fb,121688576,microsoft/botbuilder-tools,False,False
ec95b2701d244501068690ad2c43d184413ffc85,iwlwifi: fw api: document WoWLAN patterns command//Document the WoWLAN patterns command structure.//Signed-off-by: Johannes Berg <johannes.berg@intel.com>/Signed-off-by: Luca Coelho <luciano.coelho@intel.com>,https://github.com/microsoft/WSL2-Linux-Kernel/commit/ec95b2701d244501068690ad2c43d184413ffc85,187922067,microsoft/WSL2-Linux-Kernel,False,False
69a6b60cab2a7e5c8b71ca31827827a7312dbf9a,ADL prettier plugin and `adl format` command (#511)//Added a new package prettier-plugin-adl providing adl support to prettier. Just installing the plugin next to prettier will automatically enable it for .adl files.////Added new adl format command.////Usage:////adl format **/*.adl////This will format all the files matching the pattern.,https://github.com/microsoft/typespec/commit/69a6b60cab2a7e5c8b71ca31827827a7312dbf9a,381857226,microsoft/typespec,False,False
922003f8fbcd4af4d378cb372ba17f7544d5fb31,Remove deprecated list patterns command. It fixed #628,https://github.com/microsoft/botbuilder-tools/commit/922003f8fbcd4af4d378cb372ba17f7544d5fb31,121688576,microsoft/botbuilder-tools,False,False
c096e635209500dc99bdf25607b3992e00e56e0b,ShowVariableWindowCommand follows package command pattern//- register to package's menu command,https://github.com/microsoft/RTVS/commit/c096e635209500dc99bdf25607b3992e00e56e0b,38640473,microsoft/RTVS,False,False
171ee8989a561c43cf099d1dd41d2de0c1a1654e,Scale - use the ls-files command to search a pattern in git rather than filter with node (#315)//* Making beachball getPackageInfos scale much better with a different git command////* Change files,https://github.com/microsoft/beachball/commit/171ee8989a561c43cf099d1dd41d2de0c1a1654e,193793350,microsoft/beachball,False,False
0a7880c4b37e9764a79b508baa611176c9b5210e,Removed ComVisible pattern which can be a false positive for code being a COM object.  Restores clarity to x509Certificate tag that was lost at some point earlier.  Adds additional patterns for web.service identification; misc pattern improvement.  Fixes issue with TagDiff and TagTest commands.,https://github.com/microsoft/ApplicationInspector/commit/0a7880c4b37e9764a79b508baa611176c9b5210e,213480514,microsoft/ApplicationInspector,False,False
33ee58bd26469eca0b4ed21978ecaba6ff4eca80,Changed singleton pattern of botProjectFileWatcher to be more testable with command service dependency.,https://github.com/microsoft/BotFramework-Emulator/commit/33ee58bd26469eca0b4ed21978ecaba6ff4eca80,73518607,microsoft/BotFramework-Emulator,False,False
14f6b2c0351bf432169f7bf473aae75a5264492f,Modernize the Args access pattern in a few more commands.//llvm-svn: 289164,https://github.com/microsoft/checkedc-clang/commit/14f6b2c0351bf432169f7bf473aae75a5264492f,60645050,microsoft/checkedc-clang,False,False
36825110946219494c2a6bf0819b9330093291b5,"Implement patterned events, make Subscribe()/Unsubscribe() block until command is written",https://github.com/microsoft/redutil/commit/36825110946219494c2a6bf0819b9330093291b5,33559555,microsoft/redutil,False,False
968db6e7a12f080c24e021955c97758766eb7481,"Added Models, Parser Logic, Console App, Tests. (#12)//* Added Console App Conditions////* Added TB7 and TM7 models////* Removed test code////* Project name fix////* Fixed reference////* Implemented strategy pattern for parser////* Deleted unused project////* Added commands to command line tool////* Added arguments for console app////* Added models and test cases////* Added GetData Method////* Removed Unused Nuget Packages////* Added Models////* Added TM7 Models////* Added null check////* Handled Exception in Console Application////* Replaced preprocessing with regular expression////* Updated .net version////* Updated dependencies////* Handled case sensitivity////* Modified tm7 models////* Handled xxe attacks////Co-authored-by: Chaitanya Babu M G <chmg@microsoft.com>",https://github.com/microsoft/tm-file-parser/commit/968db6e7a12f080c24e021955c97758766eb7481,337742691,microsoft/tm-file-parser,False,False
654c759b3ef2538220508ca390bf0e94c12e4d24,Added models and read logic (#10)//* Added Console App Conditions////* Added TB7 and TM7 models////* Removed test code////* Project name fix////* Fixed reference////* Implemented strategy pattern for parser////* Deleted unused project////* Added commands to command line tool////* Added arguments for console app////* Added models and test cases////* Added GetData Method////* Removed Unused Nuget Packages////* Added Models////* Added TM7 Models////* Added null check////* Handled Exception in Console Application////* Replaced preprocessing with regular expression////* Updated .net version////* Updated dependencies////* Handled case sensitivity////* Modified tm7 models////* Handled xxe attacks////Co-authored-by: Chaitanya Babu M G <chmg@microsoft.com>,https://github.com/microsoft/tm-file-parser/commit/654c759b3ef2538220508ca390bf0e94c12e4d24,337742691,microsoft/tm-file-parser,False,False
9da93f590414ae3b7be20061d8a97695b263482e,"[HIP] Improve check patterns to avoid test failures in case string ""opt"", etc. happens to be in the command path.//Similarly to D82046.//Differential Revision: https://reviews.llvm.org/D82586",https://github.com/microsoft/checkedc-clang/commit/9da93f590414ae3b7be20061d8a97695b263482e,60645050,microsoft/checkedc-clang,False,False
cf43f179b15f9db43b0ce32994cea2bd8be0f272,[ELF] make KEEP command recognize file patterns//Differential revision: https://reviews.llvm.org/D25242//llvm-svn: 283305,https://github.com/microsoft/checkedc-clang/commit/cf43f179b15f9db43b0ce32994cea2bd8be0f272,60645050,microsoft/checkedc-clang,False,False
e735a21ece3aba8463ebc42a15042b36c59eaff8,[OpenMP] Fix link command pattern in offloading interoperability test.//It was causing a few bots to fail.//llvm-svn: 276983,https://github.com/microsoft/checkedc-clang/commit/e735a21ece3aba8463ebc42a15042b36c59eaff8,60645050,microsoft/checkedc-clang,False,False
64d89d5ee1a554fbae8eb0a7231ccb2dc4428c1a,"tcl: [3/3] prepare for jimtcl 0.81 'expr' syntax change//Jimtcl commit 1843b79a03dd (""expr: TIP 526, only support a single/arg"") drops the support for multi-argument syntax for the TCL/command 'expr'.//Fix manually the remaining lines that don't match simple patterns/and would require dedicated boring scripting./Remove the 'expr' command where appropriate.//Change-Id: Ia75210c8447f88d38515addab4a836af9103096d/Signed-off-by: Antonio Borneo <borneo.antonio@gmail.com>/Reviewed-on: http://openocd.zylin.com/6161/Tested-by: jenkins/Reviewed-by: Tomas Vanek <vanekt@fbl.cz>",https://github.com/microsoft/openocd/commit/64d89d5ee1a554fbae8eb0a7231ccb2dc4428c1a,353451676,microsoft/openocd,False,False
ea88e94318492db7c29808a145daa0653a1feae5,"Added a more complex test case of breakpoint commands, which executes a sequence/of 'breakpoint command add/list/remove' commands to set breakpoint callbacks,/list them, and then remove one.//Modified the lldbtest.TestBase.expect() method to add two additional keyword/arguments://o matching (default to True), which, if set to False, reverses the semantics of/  'expect' to 'expect not'//o patterns (default to None), which specifies a list of regexp patterns to match/  against the output from running the command//TestBreakpointCommand.py uses the matching=False and the patterns=[...] expect()/API.//llvm-svn: 114480",https://github.com/microsoft/checkedc-clang/commit/ea88e94318492db7c29808a145daa0653a1feae5,60645050,microsoft/checkedc-clang,False,False
670abcfd78d51960deda9e4d4174d5ae6458dc44,[msan] Correct a typo in poison stack pattern command line description.//Patch by Jon Eyolfson.//llvm-svn: 249331,https://github.com/microsoft/checkedc-clang/commit/670abcfd78d51960deda9e4d4174d5ae6458dc44,60645050,microsoft/checkedc-clang,False,False
350ece4efb2aecfaf21b77fa89124337a9f367d5,"[ELF] - Linkerscript: support all kinds of sorting (including nested).//Previously we supported only sorting by name.//When there are nested section sorting commands in linker script, there can be at most 1/level of nesting for section sorting commands.//SORT_BY_NAME (SORT_BY_ALIGNMENT (wildcard section pattern)). It will sort the input/sections by name first, then by alignment if 2 sections have the same name.//SORT_BY_ALIGNMENT (SORT_BY_NAME (wildcard section pattern)). It will sort the input/sections by alignment first, then by name if 2 sections have the same alignment.//SORT_BY_NAME (SORT_BY_NAME (wildcard section pattern)) is treated the same as SORT_/BY_NAME (wildcard section pattern).//SORT_BY_ALIGNMENT (SORT_BY_ALIGNMENT (wildcard section pattern)) is treated the/same as SORT_BY_ALIGNMENT (wildcard section pattern).//All other nested section sorting commands are invalid.//Patch implements that all above.//Differential revision: https://reviews.llvm.org/D23019//llvm-svn: 277583",https://github.com/microsoft/checkedc-clang/commit/350ece4efb2aecfaf21b77fa89124337a9f367d5,60645050,microsoft/checkedc-clang,False,False
be3c8075978a420b6eae944250bf336aa11d4964,kconfig: remove unneeded pattern matching to whitespaces//Whitespaces are consumed in the COMMAND state anyway.//Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>,https://github.com/microsoft/WSL2-Linux-Kernel/commit/be3c8075978a420b6eae944250bf336aa11d4964,187922067,microsoft/WSL2-Linux-Kernel,False,False
ef32b2fea053970e32e530cea30239337f8975df,"Telemetry Refactor (#8253)//This PR refactors our RNW CLI telemetry code to be easier to consume, align with our requirements, and add a suite of unit and E2E tests.////**Note:** This PR does not *enable* telemetry collection yet - we still need to (re)-setup the service side to actually receive data, test the E2E pipeline and fix any bugs.////Closes #7312//Closes #7903////## Overview////All telemetry-related operations are driven by the `Telemetry` class, the `CodedError` type, and a small handful of helper functions exported from the `@react-native-windows/telemetry` package. Consumers of this package (`@react-native-windows/cli` and `react-native-windows-init`) are provided this abstraction layer and are therefore no longer expected to understand the intricacies of the underlying telemetry service (Application Insights).////CLI commands are now generally restructured to follow this pattern:////```ts//async function cliCommand(args) {//  // Telemetry setup//  Telemetry.setup();//  Telemetry.startCommand(...);////  let cliCommandError: Error | undefined;//  try {//    await cliCommandInternal(args);//  } catch (error) {//    // Report any error thrown//    Telemetry.trackException(error);//    cliCommandError= error;//  }////  // Telemetry cleanup//  TelemetryTest.endCommand(...);//}//```////With this setup, none of the code within internal function (`cliCommandInternal` here) has any notion of or connection to the telemetry system, other than throwing `CodedError` whenever it hits a known error in our code that we wish to capture. (Note that none of the functionality of any of our commands were changed in this PR, as they were already throwing `CodedError` s with appropriate extra data, where appropriate). Any unknown errors are also caught and recorded by the Telemetry.////In the end, we expect up to two events from every CLI command: `RNWCLI.Command` and potentially one error event: `RNWCLI.CodedError`. The `RNWCLI.Command` event is fired in the call to `endCommand` and contains everything we want to know from a run of our commands, success or failure. If an error was thrown, then we'll also have fired an additional event with the call to `trackException`, including error codes, stack traces, etc. The two events can be correlated to one another via the `sessionId` property.////Every effort has been made to make sure that we can easily extend and update our CLI commands *without* having to update the telemetry code. For example, the work to gather the command line arguments/options passed, to gather project info and environment setup, are all set up in a standardized way and sanitize such data of PII.",https://github.com/microsoft/react-native-windows/commit/ef32b2fea053970e32e530cea30239337f8975df,48009214,microsoft/react-native-windows,False,False
cf6a1de6d6073a6135678189677db01c87dd2d9a,"Refactor: remote machine isolate OS commands phase 1 (#2376)//To support Windows node in remote mode, this PR adds a layer of commands (osCommands) to deal difference between Windows and Unix-like OS. To share code, ShellExecutor is added to enrich original SshClient class.////I will implement windows version commands in next phase.////This pattern can be expanded to Local or other platform in future, so I moved related code to common folder for sharing.",https://github.com/microsoft/nni/commit/cf6a1de6d6073a6135678189677db01c87dd2d9a,135673451,microsoft/nni,False,False
34cccf01c5db287ba6a99cf8aad3f7a0d5dae7f2,"[UpdateTestChecks] Fix wildcard support on DOS prompts//D64572 / rL365818 changed the way that the file paths were collected, which meant we lost the file pattern expansion necessary when working with DOS command prompt//llvm-svn: 373062",https://github.com/microsoft/checkedc-clang/commit/34cccf01c5db287ba6a99cf8aad3f7a0d5dae7f2,60645050,microsoft/checkedc-clang,False,False

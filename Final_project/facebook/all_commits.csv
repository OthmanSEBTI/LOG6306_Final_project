,sha,message,html_url,repository_id,repository_full_name,repository_private,repository_fork
0,eb6af64552c30524044c2ed3f1c565708c0e30c7,Minor clean up for Adapt.h//Summary: Standardize the pattern for handling adapter operator override functions.//Reviewed By: thedavekwon//Differential Revision: D34191204//fbshipit-source-id: a9129c480601b7c97e72679cabccff5caf5b9c7e,https://github.com/facebook/fbthrift/commit/eb6af64552c30524044c2ed3f1c565708c0e30c7,11131631,facebook/fbthrift,False,False
1,0022d031a478e09f08792f52cac68cc1626cd8ab,"Allow breaking dependency cycles caused by @cpp.Adapter by specifying adapted type//Summary: The implementation of adapted_t introduces a dependency from adapted typedefs to the types they adapt, which makes certain otherwise valid inclusion patterns impossible to compile in C++. Adds an optional mechanism for specifying the return type of fromThrift(), which the codegen uses directly instead of deducing with adapted_t to avoid this dependency.//Reviewed By: Mizuchi//Differential Revision: D37046502//fbshipit-source-id: e428fc072ce3a449b97ccd7b091ededff183aaaa",https://github.com/facebook/fbthrift/commit/0022d031a478e09f08792f52cac68cc1626cd8ab,11131631,facebook/fbthrift,False,False
0,b44656e083950cb0ffabdfd26f0c3ef8cc58e117,"Improve bridge pattern matching//Summary:/The pass's pattern matching is simple, and we may get some false-positive/bridge-bridgee pairs. It's not a big deal, since it's just a special kind of/inlining./The problem is that it may find bridgee-bridgee methods from different classes/and then inline the bridgee to bridge without proper access changing.//The diff keeps the simple reasonable inlining logic but adds additional checking/on whether the bridge and bridgee are in the same class.//Reviewed By: emma0303//Differential Revision: D15329107//fbshipit-source-id: ac966a79b5e4d97da2643bd817c33dd5bdf33032",https://github.com/facebook/redex/commit/b44656e083950cb0ffabdfd26f0c3ef8cc58e117,54664770,facebook/redex,False,False
1,4ddfa41525899d222d048635fc46760aa1abbd90,"C++ decl-provider API cleanup//Summary:/The C++ struct DeclProviderResult was handwritten in two places (hhvm/and hh_single_compile_cpp), and must be kept in sync with the rust/enum ExternDeclProviderResult. Move the C++ decl to a header file,/and provide constructors that know how to fish into a DeclResult.//The philosophy behind this change is for hackc to provide a [relatively] clean/C++ API to its C++ clients, with a goal of hiding some of the uglier aspects/of C++/Rust bridging behind that api. There is more we can do after this.//CXX understands Vec<u8>, so use that instead of Bytes in DeclResult and a few/related APIs. This removes the last use of ffi::Bytes in the cxx-based compiler_ffi,/and more clearly represents DeclResult's ownership of the serialized bytes./hackc_verify_deserialization() is now safe.//Merged FileAttributes and Bump into Decls, so that by-ref types and the arena/that owns them are grouped together in a single Rust type that is opaque to C++,/following the same pattern we have used elsewhere.//Reviewed By: shayne-fletcher//Differential Revision: D36423632//fbshipit-source-id: d36a32c80df87bb1caf0953ac1abb9a3491febf4",https://github.com/facebook/hhvm/commit/4ddfa41525899d222d048635fc46760aa1abbd90,455600,facebook/hhvm,False,False
2,c40e20efc4a79ac8a811a7258da705b34a855613,"introducing BridgeSynthInlinePass (replacing Bridge- and SynthPass)//Summary:/The BridgePass and SynthPass are old, performing brittle pattern matching that has even most recently caused us problems (see e.g. D30167547).//While they essential implement specialized forms of inlining, implemented at a time before Redex has a powerful general-purpose inliner, they do not check for all the potential gotchas that the inliner does.//For future better-engineering projects such as respecting Java's static initialization rules, it is cumbersome to have to understand and properly fix up these legacy passes, even though they essential just do inlining.//In this diff, the legacy BridgePass and SynthPass are effectively getting replaced by a new variation of our existing inliner, the `BridgeSynthInlinePass`. It collects a set of candidates that is the combination of what the BridgePass and SynthPass were considering, and then it leaves it up to the general purpose inliner to decide whether actually inlining a candidate is beneficial in terms of size, and doesn't violate any other obscure constraints. Note that the selection of candidates here is rather a heuristic for the inliner, mimicking for worked for the BridgePass and SynthPass, but the particular choices do not affect correctness --- the existing inliner takes care of that.//Putting it all together, the main motivation of this diff is better engineering, not achieving additional wins.//Going forward, we can tweak the selection of bridge/synth methods to inline more where beneficial, e.g. boxing/unboxing bridge methods.//Reviewed By: beicy//Differential Revision: D30213491//fbshipit-source-id: e06e0436aba1174e4ba6173ae1850425fa9e56c0",https://github.com/facebook/redex/commit/c40e20efc4a79ac8a811a7258da705b34a855613,54664770,facebook/redex,False,False
3,f4fd1831daf200a27db75dfe36f23b7e9a9f2085,"Fabric: `RNWrapManagedObject` and `RNUnwrapManagedObject` helpers//Summary: We use this pattern already and seems we use it more. Those two functions introduce a ""semantical"" wrappers for this context, so now there is no need to think which exact `__bridge ***` qualifier we should use, so it's much less error-prone.//Reviewed By: JoshuaGross//Differential Revision: D14896800//fbshipit-source-id: 85b86bfcefdad5aff0375e7172769df86c001506",https://github.com/facebook/react-native/commit/f4fd1831daf200a27db75dfe36f23b7e9a9f2085,29028775,facebook/react-native,False,False
4,deba13f698da7e6a16db8d80d8ed0d8575ab3bb9,"Refactor RCTUIManager//Summary:/Moved the view creation & property binding logic out of RCTUIManager into a separate RCTComponentData class - this follows the pattern used with the bridge.//I've also updated the property  binding to use pre-allocated blocks for setting the values, which is more efficient than the previous system that re-contructed the selectors each time it was called. This should improve view update performance significantly.",https://github.com/facebook/react-native/commit/deba13f698da7e6a16db8d80d8ed0d8575ab3bb9,29028775,facebook/react-native,False,False
5,27e3e135a693b99fd90ee8f4359b67c2bc8cfa63,"install library and header files (#587)//Summary:/This patch updates the cmake script to install library and header files in addition to the redex binary. This follows the common structure bin/ lib/ include/ used on Unix.//Pull Request resolved: https://github.com/facebook/redex/pull/587//Test Plan:/Before:/```/% cmake -DCMAKE_INSTALL_PREFIX=/tmp/install .. && make && make install && cd /tmp/install/% tree -L 3/./├── LICENSE/├── README.md/├── default.config/├── generated_apilevels.py/├── pyredex/│   ├── __init__.py/│   ├── logger.py/│   ├── unpacker.py/│   └── utils.py/├── redex-all/└── redex.py//1 directory, 10 files/```//After:/```/% tree -L 3/./├── bin/│   ├── generated_apilevels.py/│   ├── pyredex/│   │   ├── __init__.py/│   │   ├── logger.py/│   │   ├── unpacker.py/│   │   └── utils.py/│   ├── redex-all/│   └── redex.py/├── include/│   └── redex/│       ├── access-marking/│       ├── analysis/│       ├── analyze-pure-method/│       ├── annokill/│       ├── api-levels/│       ├── basic-block/│       ├── branch-prefix-hoisting/│       ├── bridge/│       ├── builder_pattern/│       ├── check-recursion/│       ├── check_breadcrumbs/│       ├── class-init/│       ├── class-merging/│       ├── class-splitting/│       ├── common/│       ├── constant-propagation/│       ├── copy-propagation/│       ├── cse/│       ├── dataflow/│       ├── dedup-blocks/│       ├── dedup-strings/│       ├── dedup_blocks/│       ├── delinit/│       ├── delsuper/│       ├── escape-analysis/│       ├── evaluate_type_checks/│       ├── field-ops/│       ├── final_inline/│       ├── include/│       ├── insert-source-blocks/│       ├── instrument/│       ├── interdex/│       ├── layout-reachability/│       ├── liblocator/│       ├── libredex/│       ├── libresource/│       ├── local-dce/│       ├── loop-info/│       ├── make-public/│       ├── merge_interface/│       ├── method-dedup/│       ├── method-inliner/│       ├── method-merger/│       ├── methodinline/│       ├── obfuscate/│       ├── object-sensitive-dce/│       ├── optimize_enums/│       ├── original_name/│       ├── outliner/│       ├── peephole/│       ├── print-members/│       ├── rebindrefs/│       ├── reduce-array-literals/│       ├── reduce-gotos/│       ├── reference-update/│       ├── regalloc/│       ├── remove-apilevel-checks/│       ├── remove-builders/│       ├── remove-interfaces/│       ├── remove-nullcheck-string-arg/│       ├── remove-recursive-locks/│       ├── remove-uninstantiables/│       ├── remove-unreachable/│       ├── remove-unused-args/│       ├── remove-unused-fields/│       ├── remove_empty_classes/│       ├── remove_gotos/│       ├── remove_redundant_check_casts/│       ├── renameclasses/│       ├── reorder-interfaces-decl/│       ├── resolve-proguard-values/│       ├── resolve-refs/│       ├── result-propagation/│       ├── shared/│       ├── shorten-srcstrings/│       ├── simplify_cfg/│       ├── singleimpl/│       ├── split_huge_switches/│       ├── staticrelo/│       ├── string_concatenator/│       ├── stringbuilder-outliner/│       ├── strip-debug-info/│       ├── switch-dispatch/│       ├── switch-partitioning/│       ├── synth/│       ├── test_cfg/│       ├── throw-propagation/│       ├── track_resources/│       ├── type-analysis/│       ├── type-string-rewriter/│       ├── unmark_proguard_keep/│       ├── unreferenced_interfaces/│       ├── up-code-motion/│       ├── uses-names/│       ├── util/│       ├── verifier/│       ├── vertical_merging/│       ├── virtual_merging/│       └── virtual_scope/├── lib/│   ├── libredex.a/│   ├── libresource.a/│   └── libtool.a/└── share/    └── doc/        └── redex//107 directories, 10 files/```//Also, see CircleCI tests for Windows on the PR.//Reviewed By: thezhangwei, agampe//Differential Revision: D26078924//Pulled By: arthaud//fbshipit-source-id: 5a88412d17f965cf9847efd0d5f0a3203c2d4650",https://github.com/facebook/redex/commit/27e3e135a693b99fd90ee8f4359b67c2bc8cfa63,54664770,facebook/redex,False,False
6,02d1bcc047e54297fc8f8dae41f1966f55d62496,"Modified deepFreezeAndThrowOnMutationInDev to use Object.prototype.ha… (#19598)//Summary:/This PR fixes a bug in `deepFreezeAndThrowOnMutationInDev` which did not take into account that objects passed to it may have been created with `Object.create(null)` and thus may not have a prototype. Such objects don't have the methods `hasOwnProperty`, `__defineGetter__`, or `__defineSetter__` on the instance.//I ran into an unrecoverable error in React Native when passing this type of object across the bridge because `deepFreezeAndThrowOnMutationInDev` attempts to call `object.hasOwnProperty(key)`, `object.__defineGetter__` and `object__defineSetter__` on objects passed to it. But my object instance does not have these prototype methods.//Changes:/* Defined `Object.prototype.hasOwnProperty` as a `const` (pattern used elsewhere in React Native)/* Modified calls to `object.hasOwnProperty(key)` to use `hasOwnProperty.call(object, key)` (Per ESLint rule [here](https://eslint.org/docs/rules/no-prototype-builtins))/* Modified calls to deprecated methods `object.__defineGetter__` and `object.__defineSetter__` to instead use `Object.defineProperty` to define get and set methods on the object. (Per guidance on [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__))/* Added a new test to `deepFreezeAndThrowOnMutationInDev-test` to verify the fix.//I tried to create a reproducible example to post to Snack by passing prototype-less objects to a `Text` component, in various ways, but they appear to be converted to plain objects before crossing the bridge and therefore they do not throw an error.//However, I was able to create a new test to reproduce the issue. I added the following test to `deepFreezeAndThrowOnMutationInDev-test`://```JavaScript/it('should not throw on object without prototype', () => {/    __DEV__ = true;/    var o = Object.create(null);/    o.key = 'Value';/    expect(() => deepFreezeAndThrowOnMutationInDev(o)).not.toThrow();/  });/```//The changes in this PR include this new test.//ESLint test produced no change in Error count (3) or Warnings (671)//N/A/Other areas with _possibly_ the same issue:/https://github.com/facebook/react-native/blob/c6b96c0df789717d53ec520ad28ba0ae00db6ec2/Libraries/vendor/core/mergeInto.js#L50/https://github.com/facebook/react-native/blob/8dc3ba0444c94d9bbb66295b5af885bff9b9cd34/Libraries/ReactNative/requireNativeComponent.js#L134// [GENERAL] [BUGFIX] [Libraries/Utilities/deepFreezeAndThrowOnMutationInDev] -Fix for compatibility with objects without a prototype./Closes https://github.com/facebook/react-native/pull/19598//Differential Revision: D8310845//Pulled By: TheSavior//fbshipit-source-id: 020c414a1062a637e97f9ee99bf8e5ba2d1fcf4f",https://github.com/facebook/react-native/commit/02d1bcc047e54297fc8f8dae41f1966f55d62496,29028775,facebook/react-native,False,False
0,cdf79782275ef6b93281e5b9991eec6df6f750ed,buck2: manifold: set timeout following builder pattern//Reviewed By: stepancheg//Differential Revision: D43993851//fbshipit-source-id: 52f3e8f73b2e6b162958674084983e403fae2b3c,https://github.com/facebook/buck2/commit/cdf79782275ef6b93281e5b9991eec6df6f750ed,450625045,facebook/buck2,False,False
1,738013efa584a0db39dce7ef8839831922120787,"Remove deprecated APIs of ListRecyclerConfiguration//Summary: Replace all usages of deprecated constructors with builder pattern first, will remove all deprecated APIs in the next diff.//Reviewed By: fabiocarballo//Differential Revision: D43270519//fbshipit-source-id: 2cdda840e8ff873aaa6a85750d0371c80129a0a2",https://github.com/facebook/litho/commit/738013efa584a0db39dce7ef8839831922120787,80179724,facebook/litho,False,False
2,83ac9fc42623f4f985ada302426da33431f6a5ae,Update doc for builder pattern//Summary: Updating docs related to `returns_this` and builder pattern model.//Reviewed By: yuhshin-oss//Differential Revision: D34262914//fbshipit-source-id: 6650cc6f64852a2f6697cd38c5a2c481a9832c9b,https://github.com/facebook/mariana-trench/commit/83ac9fc42623f4f985ada302426da33431f6a5ae,317710554,facebook/mariana-trench,False,False
3,48b89c455b6ddcea0db52a44999eeb972c54b463,"mononoke_api: convert repo context creation to the builder pattern//Summary: We will want to be able to customize repo contexts with authorization contexts as well as the bubble id.  To avoid proliferation of constructor methods, switch to the builder pattern.//Reviewed By: HarveyHunt//Differential Revision: D36520797//fbshipit-source-id: 4e1d26cbf5f4eff510324413719f7c8bb47507a4",https://github.com/facebook/sapling/commit/48b89c455b6ddcea0db52a44999eeb972c54b463,58146669,facebook/sapling,False,False
4,9a8076b4f0c2446b9de48d5b86e72a6e22373fa0,"Json model generator for builder pattern//Summary: Added a ""returns_this"" method constraint which can be used to specify builder patterns more flexibly using json model generator.//Reviewed By: yuhshin-oss//Differential Revision: D33098464//fbshipit-source-id: 40aa987dfb1fc285edb1e21828016d95c5fc8c77",https://github.com/facebook/mariana-trench/commit/9a8076b4f0c2446b9de48d5b86e72a6e22373fa0,317710554,facebook/mariana-trench,False,False
5,980e5c19ae25a785019ccc298bfc975c856dd03a,Adding tests for builder pattern FP//Summary: Added a test case to reproduce a false positive issue when using a builder pattern. This is because we always collapse taint trees for propagations.//Reviewed By: yuhshin-oss//Differential Revision: D32930843//fbshipit-source-id: f84e6a2a146c8e00623170352b38674d64d0a80e,https://github.com/facebook/mariana-trench/commit/980e5c19ae25a785019ccc298bfc975c856dd03a,317710554,facebook/mariana-trench,False,False
6,71ead5448513ec6835b0b4e20ffcf8020a3c541c,Rename `TaintBuilder` to `TaintConfig`//Summary: `TaintBuilder` doesn't exactly confirm to a typical builder pattern. It's more like a bunch of configs that need to be merged in some way to create the `Taint` object. Renaming to `TaintConfig`.//Reviewed By: SimranVirk//Differential Revision: D39191877//fbshipit-source-id: 46baafb2e3077822703eed17ab48c3ec81bbf5da,https://github.com/facebook/mariana-trench/commit/71ead5448513ec6835b0b4e20ffcf8020a3c541c,317710554,facebook/mariana-trench,False,False
7,2ebe5d18f4f0d1a9ca3e3a4dfe8d40e9f423d859,"[resource][java] Models for java.io.Reader and java.io.Writer//Summary:/We add models for this classes and some of their/subclasses.//Nothing very new except the model of PrintWriter.append that returns this/(to please the builder pattern lovers...).//We also fix a bug in the models of java.io.InputStream.{mark,markSupported}/that will never throw exceptions.//Reviewed By: jvillard//Differential Revision: D38147095//fbshipit-source-id: 369a86bc2f438b366cde80665f8b5d2ce8280f4e",https://github.com/facebook/infer/commit/2ebe5d18f4f0d1a9ca3e3a4dfe8d40e9f423d859,29857799,facebook/infer,False,False
8,d451cf7f4408dc971dca05a45eb4ebc1266de9a9,"Use d8, cfg inliner for remove_builder_pattern test cases//Reviewed By: agampe//Differential Revision: D27612042//fbshipit-source-id: 80e6cc63927857d8dd8b436383a94fbb66ad9808",https://github.com/facebook/redex/commit/d451cf7f4408dc971dca05a45eb4ebc1266de9a9,54664770,facebook/redex,False,False
9,0fd822503d9fb24ea9b0cee7570feeecfc75b94f,"More precise builder pattern//Summary:/There are a few issues related to builder patterns currently:/- ""returns_this"" constraint: Resolves the issue of identifying builder patterns in the first place. Previously, we were just checking that the return type == the parent class of the method. But this is inaccurate in cases like:/```/public Number add(Number x) {/  return new Number(x.value + this.value);/}/```/This diff handles such cases by checking if the return value is same as the original ""this"" parameter./- ""no-collapse-on-propagation"" mode resolves the issue of overtainting of ""this"" argument./- The other problem seen in T90380174 occurs when the return value of the builder methods are ignored. Since our analysis assumes that each method call returns a new memory location, any taint information accumulated through the calls to the builder methods are lost. This diff resolves this by introducing ""alias-memory-location-on-invoke"" mode [naming is hard]. In this mode, the initial memory location is updated when methods with this mode are invoked (trying to mimic internal mutability)./  - Also tried using ""inline_as"" and adding propagations ""arg0 --> arg0"". Just ended up using both of those as flags to overwrite memory locations, so just introduced a new mode instead for clarity.//Reviewed By: arthaud//Differential Revision: D33721534//fbshipit-source-id: 0865799576506502885eab71eff5d9dad40e1cb1",https://github.com/facebook/mariana-trench/commit/0fd822503d9fb24ea9b0cee7570feeecfc75b94f,317710554,facebook/mariana-trench,False,False
10,6b4ca25e7a8544a7ce830d043a4227115b7ab1c1,Update license of opt/builder_pattern code//Reviewed By: ssj933//Differential Revision: D25593759//fbshipit-source-id: 45be342c38c2faa45b29d2d82ac3581debf65294,https://github.com/facebook/redex/commit/6b4ca25e7a8544a7ce830d043a4227115b7ab1c1,54664770,facebook/redex,False,False
11,50a142767d6e4fd64104b1689f8542b7c73ca2c7,Moved GridRecyclerConfiguration to a Builder pattern.//Summary: Added Builder pattern to the Grid RecyclerConfiguration implementations to pass in different layout params.//Reviewed By: astreet//Differential Revision: D10200914//fbshipit-source-id: c5912979da6aabdeee58e0af1831f3eea30173e3,https://github.com/facebook/litho/commit/50a142767d6e4fd64104b1689f8542b7c73ca2c7,80179724,facebook/litho,False,False
12,ce83a6e99cefafa31fcac7b9925673f463cb400f,"permission_checker: allow combination permission checkers//Summary:/Allow combinations of permissions checkers by expanding/`PermissionCheckerBuilder` to the full builder pattern.//When combined, permissions are unioned, so any grant of access is sufficient.//This will be used to have both a global allowlist and per-repo access control/(which may be provided by a remote ACL checking service), so ensure that/failure of a single checker does not cause failure overall: if one checker/fails, then we only return that error if all other checkers either fail or/return false.//Reviewed By: yancouto//Differential Revision: D36760752//fbshipit-source-id: bffd3dfbc892ab4daea4ce643f93235f86e31d49",https://github.com/facebook/sapling/commit/ce83a6e99cefafa31fcac7b9925673f463cb400f,58146669,facebook/sapling,False,False
13,1b93611d81cb2dc01576712732b8b65adcbf03b2,"[env_builder] Visit class id after visiting extends//Summary:/Right now, we visit class id before extends in name_resolver. As a result, non-sensical code like `class A extends A {}` type checks. In this diff, I first switched the visiting order in scope_builder. However, this still doesn't fix the issue, because name_resolver still visit id before everything else so that it can do something when the id is None. To support the pattern, I created the `class_identifier_opt` function so that name_resolver can override it. In this way, we can avoid some weird AST rewrites.//The more important motivation of this change is to accurately model the runtime evaluation order, which is important to decide reachability of expressions. Right now, if you do//```/class A extends invariant(false) {}/```//It will still think that `A` is not an unreachable write. I noticed this problem when I'm trying to mark all unreachable writes under LTI mode.//Unfortunately, doing just what's described above will still cause crashes in `class A extends invariant(false) {}`, because statement.ml evaluate things in left to right order. In addition, `class A<T> extends invariant(false) {}` will also crash in env_resolution, because type parameters will always be a write even when it is unreachable. Therefore, we have to create a fallback empty tvar when the class self location entry doesn't exist in the loc env.//Changelog: [internal]//Reviewed By: panagosg7//Differential Revision: D39112078//fbshipit-source-id: 34fa628f466c82d1c3409572045e6ffa14e3a92d",https://github.com/facebook/flow/commit/1b93611d81cb2dc01576712732b8b65adcbf03b2,25880891,facebook/flow,False,False
14,4f88549cf09c22bfde3b8c35dcf124cfd56a903f,Added builder to ListRecyclerConfiguration//Summary: Moved the ListRecyclerConfiguration implementations to a Builder pattern to pass in layout params.//Reviewed By: astreet//Differential Revision: D10194132//fbshipit-source-id: 2e0b34db74ccdfa333e9f854f60946fba3ae2385,https://github.com/facebook/litho/commit/4f88549cf09c22bfde3b8c35dcf124cfd56a903f,80179724,facebook/litho,False,False
15,d90822a9b301904ef5250ba9c69574568f86e7e1,"Removed usage of deprecated API from sample app.//Summary:/PROBLEM/-------/Creation of ListRecyclerConfiguration was later moved to builder pattern, using the builder pattern in sample app instead of constructor which was deprecated//Reviewed By: adityasharat//Differential Revision: D19903306//fbshipit-source-id: ed73fa785ea8e6b9f77a4536755f51a832d4a7b0",https://github.com/facebook/litho/commit/d90822a9b301904ef5250ba9c69574568f86e7e1,80179724,facebook/litho,False,False
16,74821bfd94881c90739388e0bac29ed47955ad9c,Some analysis for the Builder pattern//Differential Revision: D4575582//fbshipit-source-id: e7c701a1014d8bd96f5d060e90009afdf5b925d6,https://github.com/facebook/redex/commit/74821bfd94881c90739388e0bac29ed47955ad9c,54664770,facebook/redex,False,False
17,43be6443483deabf02f166cd1cc2160287438ad1,"[enums] Fix enum declaration visitor//Summary:/The `flow_ast_mapper` method for visiting enum declarations originally visited the name of the enum using the `identifier` method. Typically, `identifier` is used for visiting *reads* of expressions, but the identifier in an enum declaration is a *write*, which should be visited using `pattern_identifier` (see corresponding pattern in ex. class and function declarations). `pattern_identifier` takes an optional `kind`, which represents what kind of variable is being declared (when this is a declaration and not just a write); in the case of enums I think this is `const`, since enums compile to `const` declarations (right?)//This change fixes the `ssa_builder` test case for enums without any other change needing to be made because the ssa builder now correctly understands the enum identifier as a write rather than a read.//Reviewed By: gkz//Differential Revision: D28204020//fbshipit-source-id: e9b596beaa465b70c1bbc2ca2cdd21bec0881ec3",https://github.com/facebook/flow/commit/43be6443483deabf02f166cd1cc2160287438ad1,25880891,facebook/flow,False,False
18,84e78c9882a5a6b0f34731c3467f2be6fef29843,"[env_builder] Creating AssigningWrites at declaration time instead of hoisting time//Summary:/Changelog: [internal]//We used to create AssigningWrites during hoisting time. There is nothing wrong with this approach with new-env or reordered-env only, since AssigningWrites without any writes to it are harmless. However, they will trigger enforcement errors under LTI.//During hoisting, we know nothing about whether the hoisted binding: it might be illegal or unreachable. Once the AssigningWrite is added, it's impossible to remove during the dead code marker pass.//Therefore, in this diff, I switched the creation of such writes to the declaration sites. Most of them are already created by `pattern_identifier`. The only place we need to add is variable declaration without init but with anno. For unreachable writes, we won't create write entries for them in the main pass, and a NonAssigningWrite will be correctly added in the dead code marker pass, which is what we want.//Reviewed By: mvitousek//Differential Revision: D39002245//fbshipit-source-id: 9c8b4869218506e8324c9982342a341a2980a8e2",https://github.com/facebook/flow/commit/84e78c9882a5a6b0f34731c3467f2be6fef29843,25880891,facebook/flow,False,False
19,2a5b925b9c113622115a6f55a5a1cbfa3bc9e653,Convert border parameters to object + builder pattern//Summary: This isolates configuration options for a layout's border into a single object + builder pattern. Doing so allows for better control of the API / better code isolation.//Reviewed By: muraziz//Differential Revision: D5654222//fbshipit-source-id: 9518d83a2a208701ee3d0d03021435efaef178dc,https://github.com/facebook/litho/commit/2a5b925b9c113622115a6f55a5a1cbfa3bc9e653,80179724,facebook/litho,False,False
20,6e92d75c3fea93e5d26fe7911e2d3a5e1d6db020,"es6 scope builder: pattern refactoring//Summary:/Refactored pattern visitors to be more principled: there are binding patterns/and assignment patterns, and we carefully thread those through the visitor.//This helps get rid of lexical_* visitor methods, among other things.//Reviewed By: mroch//Differential Revision: D5333196//fbshipit-source-id: 1ac8a9ed186d4c677fa5e3770f3d73cf8ae76373",https://github.com/facebook/flow/commit/6e92d75c3fea93e5d26fe7911e2d3a5e1d6db020,25880891,facebook/flow,False,False
21,961bcb532f29467ffb0ff0b120973fe575b5f68d,Encapsulate insertion to cache into InsertTask interface (builder pattern)//Reviewed By: tyronen//Differential Revision: D2902318//fb-gh-sync-id: dc4df7ef72e81e97baad60687a30f6af7fde6b9e/fbshipit-source-id: dc4df7ef72e81e97baad60687a30f6af7fde6b9e,https://github.com/facebook/fresco/commit/961bcb532f29467ffb0ff0b120973fe575b5f68d,31533997,facebook/fresco,False,False
22,50f161dc13e057a4eff8f2d5e246ce66779881c8,"Bump electron-builder from 22.10.5 to 22.11.1 in /desktop (#2297)//Summary:/Bumps [electron-builder](https://github.com/electron-userland/electron-builder) from 22.10.5 to 22.11.1./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/electron-userland/electron-builder/releases"">electron-builder's releases</a>.</em></p>/<blockquote>/<h2>22.11.1</h2>/<h3>Bug Fixes</h3>/<ul>/<li>check if icons subdir exists in build resources, otherwise don't prepend it to fallback sources (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5686"">#5686</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8df250b4645924942883ba6ad1418da994116521"">8df250b</a>)</li>/<li>DMG assembly on Apple Silicon (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4606"">#4606</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5724"">#5724</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/469b85fa2a2660eaba1eafbbd528abec2b1f50d9"">469b85f</a>)</li>/<li>Escape version in NSIS Updater during replace (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5655"">#5655</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/77c215d1b1913982a7c9a62b1b5098d95a37272d"">77c215d</a>)</li>/<li>extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4"">9305fef</a>), closes <a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4676"">#4676</a></li>/<li>fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73"">d57453c</a>)</li>/<li>test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4"">6237e67</a>)</li>/<li>typo in <code>fileMatcher</code>'s default patterns (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5705"">#5705</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/c0ae89c004ea546ae6e0a73ec0f04e038169197c"">c0ae89c</a>)</li>/<li>update repo in CONTRIBUTING.md (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5726"">#5726</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/da85087143d2c6a63faab4c44c28dc625326e9ee"">da85087</a>)</li>/<li><strong>electron-updater:</strong> do not install on quit when autoInstallOnAppQuit is set to false (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5681"">#5681</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8f845916d1f44e347fa36cfd95bc1fa1fe14c455"">8f84591</a>)</li>/<li>windows async signing (<a href=""https://github.com/electron-userland/electron-builder/commit/91627116fdffd5d5faec23e149392283b9979a22"">9162711</a>)</li>/<li><strong>nsis:</strong> keep injected logger state (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5596"">#5596</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/be4a1fb05b6734800aa97652e856de1308e4a2f2"">be4a1fb</a>)</li>/</ul>/<h3>Features</h3>/<ul>/<li>add custom macro for checking uninstallation results (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5712"">#5712</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/e4250206e936dbcad7ddd19f32e7688afce1239e"">e425020</a>)</li>/<li>add Electron branding options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5727"">#5727</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/0de5f1f7d4496462726d1305ad0aeec43d337c30"">0de5f1f</a>)</li>/<li>add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1"">dcf570f</a>)</li>/<li>Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87"">4e2909c</a>)</li>/<li>build additional arch-specific nsis installers when ${arch} template is provided (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5718"">#5718</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/7194c388f64cf9074e7ae14e74a7783da76ea284"">7194c38</a>)</li>/<li><strong>linux:</strong> Package name can be specified using packageName option (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5530"">#5530</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5588"">#5588</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/622aaefd1537f0bfdcf15fc6204b3eea97dc64ce"">622aaef</a>)</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4""><code>9305fef</code></a> fix: extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87""><code>4e2909c</code></a> feat: Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4""><code>6237e67</code></a> fix: test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1""><code>dcf570f</code></a> feat: add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/79c9f6b6b539e5923dc1211b9715c4f7411a12f4""><code>79c9f6b</code></a> docs: CONTRIBUTING.md -&gt; limit line length, refactoring and snippets for Wind...</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73""><code>d57453c</code></a> fix: fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/28cb86bdcb6dd0b10e75a69ccd34ece6cca1d204""><code>28cb86b</code></a> fix/windows-tests (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5806"">#5806</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/66f01bba33523544813418332a5643f8b09f5421""><code>66f01bb</code></a> chore: default linux target + ci config (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5787"">#5787</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6b1be73e4510ac099d9e35f6339d398eb4a03f1a""><code>6b1be73</code></a> Add support for building Flatpak bundles (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5711"">#5711</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/0f3b46c3ae05440b37f0464898ea86107edac341""><code>0f3b46c</code></a> [Electron Builder] Fix for Signing error on docker with WSL 2 engine … (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5722"">#5722</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/electron-userland/electron-builder/compare/v22.10.5...v22.11.1"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=electron-builder&package-manager=npm_and_yarn&previous-version=22.10.5&new-version=22.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/2297//Test Plan:/Smoke test with/```/env FLIPPERVERSIONV2=0.88.290384275 RUST_LOG=flipper_launcher=info /Applications/Flipper.app/Contents/MacOS/Flipper/```//Everything seems to work fine//Reviewed By: passy//Differential Revision: D28323866//Pulled By: cekkaewnumchai//fbshipit-source-id: 8ced137e7c46a8b2cfd044b8f77b65efed639cbf",https://github.com/facebook/flipper/commit/50f161dc13e057a4eff8f2d5e246ce66779881c8,129283183,facebook/flipper,False,False
23,ab7096f0329ba61d0f9ac01c4ebd1f2b7caa42d0,"Bump app-builder-lib from 22.10.5 to 22.11.1 in /desktop (#2260)//Summary:/allow-large-files//Bumps [app-builder-lib](https://github.com/electron-userland/electron-builder) from 22.10.5 to 22.11.1./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/electron-userland/electron-builder/releases"">app-builder-lib's releases</a>.</em></p>/<blockquote>/<h2>22.11.1</h2>/<h3>Bug Fixes</h3>/<ul>/<li>check if icons subdir exists in build resources, otherwise don't prepend it to fallback sources (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5686"">#5686</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8df250b4645924942883ba6ad1418da994116521"">8df250b</a>)</li>/<li>DMG assembly on Apple Silicon (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4606"">#4606</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5724"">#5724</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/469b85fa2a2660eaba1eafbbd528abec2b1f50d9"">469b85f</a>)</li>/<li>Escape version in NSIS Updater during replace (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5655"">#5655</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/77c215d1b1913982a7c9a62b1b5098d95a37272d"">77c215d</a>)</li>/<li>extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4"">9305fef</a>), closes <a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4676"">#4676</a></li>/<li>fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73"">d57453c</a>)</li>/<li>test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4"">6237e67</a>)</li>/<li>typo in <code>fileMatcher</code>'s default patterns (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5705"">#5705</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/c0ae89c004ea546ae6e0a73ec0f04e038169197c"">c0ae89c</a>)</li>/<li>update repo in CONTRIBUTING.md (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5726"">#5726</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/da85087143d2c6a63faab4c44c28dc625326e9ee"">da85087</a>)</li>/<li><strong>electron-updater:</strong> do not install on quit when autoInstallOnAppQuit is set to false (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5681"">#5681</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8f845916d1f44e347fa36cfd95bc1fa1fe14c455"">8f84591</a>)</li>/<li>windows async signing (<a href=""https://github.com/electron-userland/electron-builder/commit/91627116fdffd5d5faec23e149392283b9979a22"">9162711</a>)</li>/<li><strong>nsis:</strong> keep injected logger state (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5596"">#5596</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/be4a1fb05b6734800aa97652e856de1308e4a2f2"">be4a1fb</a>)</li>/</ul>/<h3>Features</h3>/<ul>/<li>add custom macro for checking uninstallation results (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5712"">#5712</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/e4250206e936dbcad7ddd19f32e7688afce1239e"">e425020</a>)</li>/<li>add Electron branding options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5727"">#5727</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/0de5f1f7d4496462726d1305ad0aeec43d337c30"">0de5f1f</a>)</li>/<li>add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1"">dcf570f</a>)</li>/<li>Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87"">4e2909c</a>)</li>/<li>build additional arch-specific nsis installers when ${arch} template is provided (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5718"">#5718</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/7194c388f64cf9074e7ae14e74a7783da76ea284"">7194c38</a>)</li>/<li><strong>linux:</strong> Package name can be specified using packageName option (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5530"">#5530</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5588"">#5588</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/622aaefd1537f0bfdcf15fc6204b3eea97dc64ce"">622aaef</a>)</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4""><code>9305fef</code></a> fix: extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87""><code>4e2909c</code></a> feat: Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4""><code>6237e67</code></a> fix: test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1""><code>dcf570f</code></a> feat: add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/79c9f6b6b539e5923dc1211b9715c4f7411a12f4""><code>79c9f6b</code></a> docs: CONTRIBUTING.md -&gt; limit line length, refactoring and snippets for Wind...</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73""><code>d57453c</code></a> fix: fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/28cb86bdcb6dd0b10e75a69ccd34ece6cca1d204""><code>28cb86b</code></a> fix/windows-tests (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5806"">#5806</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/66f01bba33523544813418332a5643f8b09f5421""><code>66f01bb</code></a> chore: default linux target + ci config (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5787"">#5787</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6b1be73e4510ac099d9e35f6339d398eb4a03f1a""><code>6b1be73</code></a> Add support for building Flatpak bundles (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5711"">#5711</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/0f3b46c3ae05440b37f0464898ea86107edac341""><code>0f3b46c</code></a> [Electron Builder] Fix for Signing error on docker with WSL 2 engine … (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5722"">#5722</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/electron-userland/electron-builder/compare/v22.10.5...v22.11.1"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=app-builder-lib&package-manager=npm_and_yarn&previous-version=22.10.5&new-version=22.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/2260//Reviewed By: mweststrate//Differential Revision: D28181919//Pulled By: passy//fbshipit-source-id: ba8f57c46e08f282315391f5bbdbe37d87c271c5",https://github.com/facebook/flipper/commit/ab7096f0329ba61d0f9ac01c4ebd1f2b7caa42d0,129283183,facebook/flipper,False,False
24,8bb520cc4b0b467a2c3df7c0a5dbba09e062fa04,"Use new signatures for annotate-exports codemod//Summary:/Before this diff, the annotate-exports codemod still used the ""old"" signature/builder for types-first 2.0. This diff uses the new signature builder instead.//The test output changes have two causes:/1. Objects with multiple unexpected keys/2. Missing annotations for pattern variable declarations//For (1), we ask for an annotation in the same location (the object literal) but/only emit a single verification error for the first unsupported key. I added a/comment with a TODO to potentially improve support here.//For (2), the old signatures erroneously asked for annotations on each/destructured binding, but the new signatures correctly ask for annotations on/the pattern itself. Unfortunately, we are unable to automatically add/annotations in either case, because the typed AST does not support pattern/annotations anywhere.//I think (2) can be improved by fixing the typed AST to support annotations at/the top level of patterns.//Reviewed By: panagosg7//Differential Revision: D27303552//fbshipit-source-id: 28123d542c83b9ff490f466d123f415c14502621",https://github.com/facebook/flow/commit/8bb520cc4b0b467a2c3df7c0a5dbba09e062fa04,25880891,facebook/flow,False,False
25,835e09a246ff3eb5881f0810e2e5d9ef8852d667,"Understand builder patterns//Summary:/First step in understanding the usage of the litho builders.//Changes:/* track how a litho builder is used in a method it is initialized in/** initialization can be either: creation (new-instance-opcode) or getting an instance (return value)//For now, this only prints the usage of the builders (creation instance -> usages per method)/I will probably expand the analysis here to include other cases (field usages etc). Will be used later to actually remove the builders.//Reviewed By: int3//Differential Revision: D7310123//fbshipit-source-id: da539077c80754d80546398f60b1e5a96f614ffa",https://github.com/facebook/redex/commit/835e09a246ff3eb5881f0810e2e5d9ef8852d667,54664770,facebook/redex,False,False
26,f22793fb34c5fdc98e962552f0e97656725f6c53,"Cleaned up setters on RecyclerBinderConfiguration//Summary: Removed setters for ChangeSets, SharedLSFuture, hScrollAsync, ThreadPoolShared, AsyncInitRange in RecyclerBinderConfiguration and refactored its usage into Builder pattern.//Reviewed By: astreet//Differential Revision: D10255912//fbshipit-source-id: 7bed58f298d8230da11b3fb1932bb45b258e76b3",https://github.com/facebook/litho/commit/f22793fb34c5fdc98e962552f0e97656725f6c53,80179724,facebook/litho,False,False
27,7f9c4e8ba2e658e5d50cbfdd69f8d32b824e312f,Cleaned up setSplitLayoutTag on RecyclerBinderConfiguration//Summary: Removed setter for splitLayoutTag from RecyclerBinderConfiguration and refactored its usage into Builder pattern//Reviewed By: astreet//Differential Revision: D10255774//fbshipit-source-id: 9d968a494781f4d6c533303432702fb82f28943b,https://github.com/facebook/litho/commit/7f9c4e8ba2e658e5d50cbfdd69f8d32b824e312f,80179724,facebook/litho,False,False
28,39484021ea55ce56ea59cb3f62efe52ceb41c0fc,Cleaned up setDynamicItemHeight on RecyclerBinderConfiguration//Summary: Removed setter for setDynamicItemHeight on RecyclerBinderConfiguration and refactored its usage into Builder pattern.//Reviewed By: astreet//Differential Revision: D10255751//fbshipit-source-id: 01541719a1e8674dff7526b598e2b3875ea731b2,https://github.com/facebook/litho/commit/39484021ea55ce56ea59cb3f62efe52ceb41c0fc,80179724,facebook/litho,False,False
29,1c3195177084635e6c1b765868bb1614296ae7bc,Preserve linebreaks in chained method calls.//Summary: We want to preserve linebreaks in chained method calls to avoid collapsing a series of builder pattern calls into one line.//Differential Revision: D5938318//fbshipit-source-id: 5f0b139967ddecd8146c2c0481fee54e62c8abeb,https://github.com/facebook/hhvm/commit/1c3195177084635e6c1b765868bb1614296ae7bc,455600,facebook/hhvm,False,False
0,3675a7c674c9731a3eef43d0fed0184a8c7a9ac6,"Introducing unidirectional stream dispatcher//Summary:/## context/In preparation of merging the `draft-20` peek-based dispatching for the unidirectional streams with the `nascent streams` which will be brought by the ServerPush, I am introducing a new abstraction - `UnidirectionalStreamReadDispatcher`//The abstraction roughly follows the [`ChainOfResponsibility`](https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern) design pattern./## detailed explanation/The `Dispatcher` owns assigning the correct callbacks to streams based on the preface. It interacts with the HQSession via its callback interface - this is done intentionally so that it will be easy to test the dispatcher.//When a new stream is available, the `HQSesssion` assigns the dispatcher as a `PeekCallback` to the (not yet identified stream).//Once a preface is read (or it is confirmed that there is no preface, see below), the `Dispatcher` notifies the `HQSession` which callback should be used for that stream. `HQSession` is expected to assign the callback to the stream.//Two separate cases are distinguished:/ 1. The `Dispatcher` assigns a read callback (via `assignReadCallback`). This is used for the control streams./ 2. The `Dispatcher` assigns a peek callback (via `assignPeekCallback`).//The latter method is used for both the unframed portion of the push stream, and for the grease streams (see footnote 1)//As the data arrives to on the stream, it is being passed to the appropriate callback, where it is processed according to the stream type:/ * For control streams, the data is being processed in the same way it is done today./ * For the nascent push streams (peek callback), the unframed push id is peeked. Once read, a nascent stream object is created, as a part of the late binding process./ * For the grease streams, the data is peeked, and consumed, without any attempt to parse it.//  +------------------------+                 +----------------------+/  |                        |                 |Unidirectional Stream |/  |                        |   new stream--->|   Read Dispatcher    |--+/  |       HQSession        |---available     |                      |  |/  |                        |                 +----------------------+  |/  |                        |                             |             |/  +------------------------+                             |             |/               ^                                         |             |/               |                                         |             |/              +-----callback available for sream--------+             |/                                                                     |/                                           +--------------------+    |/                                           |   Control Stream   |    |/                                           |      callback      |<---+/                                           +--------------------+    |/                                                                     |/                                           +--------------------+    |/                                           |   NasPush Stream   |    |/                                           |      callback      |<---+/                                           +--------------------+    |/                                                                     |/                                           +--------------------+    |/                                           |   Grease Stream    |    |/                                           |      callback      |<---+/                                           +--------------------+//[footnote 1]  for the grease streams using a peek/consume becomes more efficient when there is a missing data block. With the peek/consume API, the data is dumped ASAP, vs. relying on the transport to reliably retransmit the missing data block - thus saving both the memory, and the timers.//Reviewed By: mjoras//Differential Revision: D15312250//fbshipit-source-id: f79eca1ebb3ed2bccd80371c497c8fe8d8e2357d",https://github.com/facebook/proxygen/commit/3675a7c674c9731a3eef43d0fed0184a8c7a9ac6,24776728,facebook/proxygen,False,False
0,da5373151c7f4f4d6d08666c37a2d23a3aef83dc,"Delete `buck2 docs target-patterns`//Summary: A duplicate of the content at https://buck2.build/docs/concepts/target_pattern/, but emitted on the command line, and slightly stale. Best removed.//Reviewed By: krallin//Differential Revision: D44952915//fbshipit-source-id: 64a16b725b9919bae9e3edf9de31147b07a439ed",https://github.com/facebook/buck2/commit/da5373151c7f4f4d6d08666c37a2d23a3aef83dc,450625045,facebook/buck2,False,False
1,f26fdbf627741734c670fa6d5ce563a776617b91,"Push configured providers patterns down to build//Summary:/`build` command now operates configured providers pattern.//And then fails converting it to unconfigured provider pattern.//This code is used in the following diff D44310527 to implement configured targets build.//**Important moment**. This diff passes configured provider pattern now to `log_target_pattern` function. This changes nothing for existing builds, but builds with configurations (D44310527) will log configured pattern.//Reviewed By: bobyangyf, krallin//Differential Revision: D44307987//fbshipit-source-id: c83069d867713e59d194d32912f34a904629f376",https://github.com/facebook/buck2/commit/f26fdbf627741734c670fa6d5ce563a776617b91,450625045,facebook/buck2,False,False
2,72c71c007e7bdf667e3fe69bf7dc3a87ae44c0ac,"fixing deploy script//to conform to new [envvar pattern](https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/), fixes #851 upstream",https://github.com/facebook/Rapid/commit/72c71c007e7bdf667e3fe69bf7dc3a87ae44c0ac,161120445,facebook/Rapid,False,False
3,72c0c0cb7d5c84b3f655cafd090ab2af4ba247cd,"ctargets command//Summary:/Basic version of `ctargets` command.//Only outputs target names.//Resolves targets like `build` command does: no universe, each pattern is resolved independently. But incompatible targets are skipped.//Following diff D44563442 adds an option to skip non-existing targets, which is needed for RL TD.//Reviewed By: bobyangyf//Differential Revision: D44561146//fbshipit-source-id: f35af46f07b7e038a24a756cdd0be9982e1d9730",https://github.com/facebook/buck2/commit/72c0c0cb7d5c84b3f655cafd090ab2af4ba247cd,450625045,facebook/buck2,False,False
4,3f2e7957e0c88950352f2a9eb902ccb74ed485f8,Prohibit ... in target name//Summary:/Command like//```/buck2 build foo/.../```//should be unambiguous: it should always work as target pattern `...` instead of possibility of being interpreted as//```/buck2 build foo/...:.../```//Reviewed By: bobyangyf//Differential Revision: D44474817//fbshipit-source-id: 00e532be975bed68b09d1cbde444ba0f1465b52d,https://github.com/facebook/buck2/commit/3f2e7957e0c88950352f2a9eb902ccb74ed485f8,450625045,facebook/buck2,False,False
5,596504839e49689277d131aae33c76d9265c3a27,"Add a `buck2 starlark lint` command//Summary: Just a placeholder, following the audit command pattern for now. Fleshed out in the next diff.//Reviewed By: stepancheg//Differential Revision: D42538396//fbshipit-source-id: f63c17c5345e90eb58b572ec6b799a81ff428666",https://github.com/facebook/buck2/commit/596504839e49689277d131aae33c76d9265c3a27,450625045,facebook/buck2,False,False
6,e1b926b118b5a69e1d8a5093ae3ffbcd9f1c3e36,[IDE] Update documentHighlight to use cached ast//Summary:/This diff updates the documentHighlight LSP command to follow the pattern of other LSP commands and use the cached ast/typed ast. This will improve perf as it doesn't have to re-parse the ast every time.//Changelog: Improve performance of the documentHighlight LSP command//Reviewed By: mroch//Differential Revision: D42467823//fbshipit-source-id: af0ff6cf2b8711da351d6283007a158e5c627135,https://github.com/facebook/flow/commit/e1b926b118b5a69e1d8a5093ae3ffbcd9f1c3e36,25880891,facebook/flow,False,False
7,f06abbef136ff1ef687fa851763be281d737a52c,buck2: implement restarter//Summary:/Like it says in the title. Actually give the restarter the ability to observe what we did/so that it can decide whether we should restart the command.//This pattern-matches off of our existing implementation that we use for exit codes/since the reasons we set an exit code and the reasons we decide to restart are/usually fairly similar.//Reviewed By: get9//Differential Revision: D44997254//fbshipit-source-id: 60bad937aac910c52119a99327eca8611db879dd,https://github.com/facebook/buck2/commit/f06abbef136ff1ef687fa851763be281d737a52c,450625045,facebook/buck2,False,False
8,017716ca4b34a168b1581a996d7b6875004be0a4,"[IDE] Fix bug in document highlight with destructuring//Summary:/I noticed a bug in the DocumentHighlight command where it didn't handle highlighting on object keys that are renamed in a destructuring pattern./```/let { x: _x, y: _y } = { x, y };/      ^ Hovering here does nothing/```/This is because the searcher (or typechecker hooks in the old version) don't consider destructuring patterns when looking for the object key that matches the target location. It works when the destructure is not renamed because it is found in the local var searcher.//This diff fixes the bug in the rewritten document highlight command. Since this is being rolled out next release, I'm not fixing the existing but in the implementation of document highlight using typechecker hooks.//Changelog: [Fix] DocumentHighlight now correctly highlights destructured object keys//Reviewed By: darichey//Differential Revision: D43202925//fbshipit-source-id: 6ad22890da7f089543fb3b4dfa86bcadb24cafc4",https://github.com/facebook/flow/commit/017716ca4b34a168b1581a996d7b6875004be0a4,25880891,facebook/flow,False,False
9,af783982d06a6679129446188ef0b8bf3e27509d,"Replace hasattr with getattr in idb/cli/commands/xctest.py//Summary:/The pattern/```/X.Y if hasattr(X, ""Y"") else Z/```/can be replaced with/```/getattr(X, ""Y"", Z)/```//The [getattr](https://www.w3schools.com/python/ref_func_getattr.asp) function gives more succinct code than the [hasattr](https://www.w3schools.com/python/ref_func_hasattr.asp) function. Please use it when appropriate.//**This diff is very low risk. Green tests indicate that you can safely Accept & Ship.**//Reviewed By: Nekitosss//Differential Revision: D44886655//fbshipit-source-id: 99938f2bbccb23e0e92632421da48763b0a25256",https://github.com/facebook/idb/commit/af783982d06a6679129446188ef0b8bf3e27509d,41870517,facebook/idb,False,False
10,07f4b0d92ff6c7a09e6e196d1aa01257c0b508ec,"feat(cli): new command to diff memory leaks based on a control run and a treatment run//Summary:/## Summary/This diff stack adds a new command `memlab diff-leaks` that takes two memlab working directories as input (one for control group, one for test group). The command finds out if there are any new memory leak patterns detected in the test group while not in the control group.//This command will be useful for detecting new memory leaks caused by experiments or diffs. This will also be useful for ad hoc heap investigation.//## Changes in this Diff/Adding a new empty CLI command (`diff-leaks`) and corresponding CLI options for taking in control and test groups' working directory. The business logic of the CLI command will be added in the followup diffs.//Reviewed By: tulga1970//Differential Revision: D41856306//fbshipit-source-id: e7607621e43189ba2b6e1431b7712fb9f6a2e377",https://github.com/facebook/memlab/commit/07f4b0d92ff6c7a09e6e196d1aa01257c0b508ec,496768943,facebook/memlab,False,False
11,3a3a29176e2bbdf1fa010fe06cdca430fe2a3f5f,"feat(core): cluster leak traces in the control and test group//Summary:/## Summary/This diff stack adds a new command `memlab diff-leaks` that takes two memlab working directories as input (one for control group, one for test group). The command finds out if there are any new memory leak patterns detected in the test group while not in the control group.//This command will be useful for detecting new memory leaks caused by experiments or diffs. This will also be useful for ad hoc heap investigation.//## Changes in this Diff/This diff detects memory leak trace cluster that are unique to the test group by the following steps:/ * Mix leak traces from control group and test group/ * Run leak trace clustering (either via heuristics or ML clustering)/ * Get memory leak clusters that only contain memory leak traces from the test group.//Reviewed By: tulga1970//Differential Revision: D41990907//fbshipit-source-id: a1e02f6f7af1ae1d9984920cf10610067e8765c1",https://github.com/facebook/memlab/commit/3a3a29176e2bbdf1fa010fe06cdca430fe2a3f5f,496768943,facebook/memlab,False,False
12,1d7b041736d091726445f20b3a8e6efa0997dd2e,"feat(core): CLI Plot for memory usage comparing control and test group//Summary:/## Summary/This diff stack adds a new command `memlab diff-leaks` that takes two memlab working directories as input (one for control group, one for test group). The command finds out if there are any new memory leak patterns detected in the test group while not in the control group.//This command will be useful for detecting new memory leaks caused by experiments or diffs. This will also be useful for ad hoc heap investigation.//## Changes in this Diff/Refactor the class that draws CLI memory usage plot to show the control and test groups//Reviewed By: tulga1970//Differential Revision: D41861199//fbshipit-source-id: 284f15b01ce44799c98c76380b27bb8588a625db",https://github.com/facebook/memlab/commit/1d7b041736d091726445f20b3a8e6efa0997dd2e,496768943,facebook/memlab,False,False
13,2d60a02e621028fb4d883cc38ffdcf1cc6c81812,"Fix Windows platform detection, Watchman detection in tests//Summary:/While checking some `metro-file-map` behaviour on Windows I noticed the Watchman detection we use in integration tests was all wrong :)/ - `os.platform()` returns `win32` on Windows, not `windows`./ - `where` works in a command prompt but not PowerShell - there it's usually an alias for `Where-Object`. `where.exe` works on both./ - `where.exe` prints ""INFO: Could not find files for the given pattern(s)"" to stderr on no match. Use `/Q` for silent running - the exit code is all we need.//Reviewed By: motiz88//Differential Revision: D42266748//fbshipit-source-id: 4494cd39dd94da7dc17442264a3828a35aaf9c30",https://github.com/facebook/metro/commit/2d60a02e621028fb4d883cc38ffdcf1cc6c81812,76504246,facebook/metro,False,False
14,60b27da198f7c5339c878ebeb9f3a3545ab84b7f,"help: allow Rust commands to specify a type hint for its options in the help//Summary: Previously, commands that were written in Python would allow to specify types such as `PATTERN`, or `REV` in the help options. This diff modifies the `define_flags` macro to allow Rust commands to add such type of help.//Reviewed By: quark-zju//Differential Revision: D38494676//fbshipit-source-id: d314707b5cf4e72954051fc383b61432ec316c88",https://github.com/facebook/sapling/commit/60b27da198f7c5339c878ebeb9f3a3545ab84b7f,58146669,facebook/sapling,False,False
15,120196a75ca83ef4706cda73f8322781412bc3fc,"process backticks in rst-to-md//Summary:/Updated the logic in `minirst.py` to provide better support for inline code./Specifically://- double backticks to mark inline code are now converted to single backticks/  when the style is Markdown/- the special `:hg: <command>` pattern is now turned into inline code for/  Markdown, as well//Regenerated the `.md` files via://```/~/fbsource/fbcode/eden/scm$ make oss/~/fbsource/fbcode/eden/website/scripts$ HGIDENTITY=sl HG=/Users/mbolin/bin/lhg ./generate-command-markdown.py --full-build/```//Reviewed By: sggutier//Differential Revision: D40970293//fbshipit-source-id: 21d3ec1ef60d6c4b28877fb00e1abf938f51a6f0",https://github.com/facebook/sapling/commit/120196a75ca83ef4706cda73f8322781412bc3fc,58146669,facebook/sapling,False,False
16,e32b8fca8ce53c23643f249ba41bbfdef2dd3e7b,"consolidate GitHub actions under pr subcommand//Summary:/Followed the pattern in `sparse.py` to take advantage/of subcommands so that GitHub-specific commands/are scoped under the `pr` subcommand. We'll go with/`pr` for ""pull request"" because `gh` subcommand could/be easily confused with https://cli.github.com/.//Reviewed By: DurhamG//Differential Revision: D39759566//fbshipit-source-id: 09e81914c0f28012933eeb73b856132db866576c",https://github.com/facebook/sapling/commit/e32b8fca8ce53c23643f249ba41bbfdef2dd3e7b,58146669,facebook/sapling,False,False
17,8f0a657a00bb24827cb26bc69e345894861a9a38,"implement `sl pr list`//Summary:/GitHub's `gh` CLI has a number of useful subcommands under `gh pr`./When run in a Git repo, `gh` can automatically figure out the appropriate/value to use with the `--repo` flag, though that is not the case in Sapling.//In this case, we do a small amount of plumbing to implement/`sl pr list [flags]` so that it execs the analogous `gh pr list [flags]` call./This pattern should work well for supporting more `gh pr` commands.//Reviewed By: muirdm//Differential Revision: D42120917//fbshipit-source-id: 51bd51f46cd15fc9e4bbde631adfe24646b0efb7",https://github.com/facebook/sapling/commit/8f0a657a00bb24827cb26bc69e345894861a9a38,58146669,facebook/sapling,False,False
18,8f9c76651fa51d10357d46ca7d4b3bda79449a34,"status: make tests use status.relative=true//Summary:/Later diffs will enable the rust status command for tests. Rust status/follows our internal pattern of printing paths relative to the current working/dir. To make the tests consistent, let's enable relative paths for all existing/tests.//Reviewed By: jordanwebster//Differential Revision: D39453092//fbshipit-source-id: 6361a6179255f180a5cd06067b5fe74a085370e5",https://github.com/facebook/sapling/commit/8f9c76651fa51d10357d46ca7d4b3bda79449a34,58146669,facebook/sapling,False,False
19,024fb7e014d1e8a8f95a10cadb1f2be97cb64d39,"feat(core): analyze and filter leak traces for control and test groups//Summary:/## Summary/This diff stack adds a new command `memlab diff-leaks` that takes two memlab working directories as input (one for control group, one for test group). The command finds out if there are any new memory leak patterns detected in the test group while not in the control group.//This command will be useful for detecting new memory leaks caused by experiments or diffs. This will also be useful for ad hoc heap investigation.//## Changes in this Diff/This diff adds part of the business logic for the new `memlab diff-leaks` command:/ * Analyze heap snapshots in the control group's working directory/ * Filter memory leaks and generate memory leak traces for leaked objects from the control group/ * Analyze heap snapshots in the test group's working directory/ * Filter memory leaks and generate memory leak traces for leaked objects from the test group//Reviewed By: tulga1970//Differential Revision: D41864354//fbshipit-source-id: eac2bcd2e488852321c939f4f59d3f9b08cd29cb",https://github.com/facebook/memlab/commit/024fb7e014d1e8a8f95a10cadb1f2be97cb64d39,496768943,facebook/memlab,False,False
20,11528a4b262f1b6704857748ae47eb829fc987db,"Proc.is_alive//Summary:/For the ""per-repo"" status files (progress.json, errors.bin) we need to deal with the fact that the creating process might be killed uncleanly, e.g. with SIGKILL, leaving the file behind abandoned. How can a consumer determine that the file is no longer valid?//The pattern I've adopted is (1) the creating process writes its PID into the file, (2) the consuming process will read the PID and determine whether that PID is still alive. This diff adds a library function `Proc.is_alive pid` to do this check.//```/(** There is no reliable way to tell whether an arbitrary PID is still alive./That is because after the process has long since died, its PID might be recycled/for use by another process. This routine makes a best-effort attempt:/1. Can we read /proc/<pid>/cmdline? - yes if it is alive or still being held onto./2. Is ""expected"" a substring of cmdline? - this is our best-effort protection/against pid recyling, since the chance that it gets recycled *and* the recycled one/has the process-name we were expecting just seems pretty low. Note that cmdline/will be empty if the process has been zombified. Also that if a process modifies/its argv then the cmdline will reflect that. In effect, cmdline is the command-line/that the process wants you to see./3. Can we send SIGKILL 0 to it? If this succeeds without throwing an exception,/then the process is alive. *)/```//{F908227867}//Reviewed By: CatherineGasnier//Differential Revision: D44159586//fbshipit-source-id: 1339f3ff2bb6c039d46e9efa5f51ab6b2cd5afa2",https://github.com/facebook/hhvm/commit/11528a4b262f1b6704857748ae47eb829fc987db,455600,facebook/hhvm,False,False
21,1d841ca3e020e46589affe489c8bfbce29ef216c,Constraint list of initialized repos with a cmdline arg//Summary: Added ```--filter-repos=your_regex_pattern``` command line arg to SCS Server to filter the list of repositories that should be initialized by mononoke.//Reviewed By: mzr//Differential Revision: D38010683//fbshipit-source-id: 7051c8161d3e5e5c57297dc72a32f7aee36023b7,https://github.com/facebook/sapling/commit/1d841ca3e020e46589affe489c8bfbce29ef216c,58146669,facebook/sapling,False,False
22,47c4f4605fd67b79c4b5e42367f2f1348812e1e1,"UnitIndex should not exclude files when used for Decls//Summary:/UnitIndex intended to replace autoload_map.hdf, which was a full index of every/file in the Autoload.Query repo config; the autoload map did not exclude files/from the `hhvm --hphp` command line exclusion patterns.//For the purposes of `-vEval.EnableDecl=true` the intent is to make all source files/available, not just the source files that are eligible to be included in the build./Otherwise, if EnableDecl==false, it's ok to filter files because they will get filtered/anyway in resolveOnDemand().//Reviewed By: ricklavoie//Differential Revision: D38794891//fbshipit-source-id: 34c70e10df01d62f5fa42e9c72285467bb5ca60c",https://github.com/facebook/hhvm/commit/47c4f4605fd67b79c4b5e42367f2f1348812e1e1,455600,facebook/hhvm,False,False
23,ef091a7390e9f9887187d2337bd295bc505e8b06,"montblanc: use yocto lf-master (#1477)//Summary:/- add montblanc in openbmc-init-build-env and use lf-master branch/- modify config file to able build the image//## TestPlan:/- able to build the image/- able to run image on qemu/```/ssinprem@cthgd050:~/OPENBMC/facebookexternal$ . openbmc-init-build-env montblanc build_mb/Init build environment for platform 'meta-montblanc' with distro lf-master.../You had no conf/local.conf file. This configuration file has therefore been/created for you from /home/ssinprem/OPENBMC/facebookexternal_wedge400/meta-facebook/meta-montblanc/conf/templates/default/local.conf.sample/You may wish to edit it to, for example, select a different MACHINE (target/hardware).//You had no conf/bblayers.conf file. This configuration file has therefore been/created for you from /home/ssinprem/OPENBMC/facebookexternal_wedge400/meta-facebook/meta-montblanc/conf/templates/default/bblayers.conf.sample/To add additional metadata layers into your configuration please add entries/to conf/bblayers.conf.//The Yocto Project has extensive documentation about OE including a reference/manual which can be found at:/    https://docs.yoctoproject.org//For more information about OpenEmbedded see the website:/    https://www.openembedded.org///Common targets are:/    montblanc-image/ssinprem@cthgd050:~/OPENBMC/facebookexternal/build_mb$ bitbake montblanc-image/NOTE: Your conf/bblayers.conf has been automatically updated./WARNING: You have included the meta-security layer, but 'security' has not been enabled in your DISTRO_FEATURES. Some bbappend files and preferred version setting may not take effect. See the meta-security README for details on enabling security support./WARNING: You are using a local hash equivalence server but have configured an sstate mirror. This will likely mean no sstate will match from the mirror. You may wish to disable the hash equivalence use (BB_HASHSERVE), or use a hash equivalence server alongside the sstate mirror./Loading cache: 100% |                                                                                                                                                                                                      | ETA:  --:--:--/Loaded 0 entries from dependency cache./Parsing recipes: 100% |#####################################################################################################################################################################################################| Time: 0:00:23/Parsing of 2925 .bb files complete (0 cached, 2925 parsed). 4535 targets, 443 skipped, 0 masked, 0 errors./WARNING: No recipes in default available for:/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-bsp/u-boot/u-boot-aspeed-sdk%.bbappend/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-connectivity/dhcp/dhcp_%.bbappend/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-utils/flashrom/flashrom_1.2.bbappend/WARNING: No bb files in default matched BBFILE_PATTERN_backports '^/home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../meta-facebook/meta-backports/mickledore/(recipes|facebook)'/NOTE: Resolving any missing task queue dependencies/NOTE: Multiple providers are available for runtime u-boot-fw-utils (u-boot-fw-utils, libubootenv)/Consider defining a PREFERRED_RPROVIDER entry to match u-boot-fw-utils//Build Configuration:/BB_VERSION           = ""2.2.0""/BUILD_SYS            = ""x86_64-linux""/NATIVELSBSTRING      = ""ubuntu-20.04""/TARGET_SYS           = ""arm-fb-linux-gnueabi""/MACHINE              = ""montblanc""/DISTRO               = ""poky""/DISTRO_VERSION       = ""montblanc-de35dff4aa0-dirty""/TUNE_FEATURES        = ""arm armv7a vfp thumb callconvention-hard""/TARGET_FPU           = ""hard""/meta/meta-poky/meta-oe/meta-networking/meta-python/meta-perl            = ""HEAD:917fab29b9ead43b10b0ef6dc884c39817f17965""/..                   = ""HEAD:de35dff4aa05fa45ea2a0e40c902ecaf62f6fa93""/meta-security/meta-tpm             = ""HEAD:917fab29b9ead43b10b0ef6dc884c39817f17965""/meta-aspeed/meta-facebook/meta-montblanc/meta-fboss-lite/meta-python3/meta-backports       = ""HEAD:de35dff4aa05fa45ea2a0e40c902ecaf62f6fa93""//NOTE: Fetching uninative binary shim http://downloads.yoctoproject.org/releases/uninative/3.9/x86_64-nativesdk-libc-3.9.tar.xz;sha256sum=3dd82c3fbdb59e87bf091c3eef555a05fae528eeda3083828f76cd4deaceca8b (will check PREMIRRORS first)/Initialising tasks: 100% |##################################################################################################################################################################################################| Time: 0:00:09/Sstate summary: Wanted 1911 Local 1908 Mirrors 0 Missed 3 Current 0 (99% match, 0% complete)/NOTE: Executing Tasks/NOTE: Tasks Summary: Attempted 4614 tasks of which 4603 didn't need to be rerun and all succeeded.// There were 4 WARNING messages./ssinprem@cthgd050:~/OPENBMC/facebookexternal_wedge400/build_mb$/```//```/ssinprem@cthgd050:~/OPENBMC/facebookexternal/build_w400$ ./qemu-system-arm -machine montblanc-bmc -drive file=~/flash-montblanc,format=raw,if=mtd -nographic -netdev tap,id=netdev0,script=no,ifname=tap0 -net nic,netdev=netdev0,model=ftgmac100/qemu-system-arm: warning: nic ftgmac100.0 has no peer/qemu-system-arm: warning: nic ftgmac100.1 has no peer/qemu-system-arm: warning: nic ftgmac100.2 has no peer//U-Boot 2019.04 montblanc-02385650d3e (Feb 13 2023 - 10:05:18 +0000)//SOC: AST2600-A3/eSPI Mode: SIO:Enable : SuperIO-2e/Eth: MAC0: RMII/NCSI, MAC1: RMII/NCSI, MAC2: RMII/NCSI, MAC3: RMII/NCSI/Model: Aspeed BMC/DRAM:  1.8 GiB (capacity:2048 MiB, VGA:64 MiB, ECC:on, ECC size:1806 MiB)/MMC:   emmc_slot0@100: 0/Loading Environment from SPI Flash... SF: Detected mx66l1g45g with page size 256 Bytes, erase size 64 KiB, total 128 MiB/*** Warning - bad CRC, using default environment//....//[2m  OK  0m] Finished Remove the poweroff command./[  OK  ] Finished Set up Busybox crond./[  OK  0m] Reached target Preparation for Network./         Starting Network Configuration...//OpenBMC Release montblanc-02385650d3e//bmc login: [  144.493928] ftgmac100 1e690000.ftgmac eth0: Link is Up - 1Gbps/Full - flow control off/[  144.513295] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready/[  144.533264] IPv6: ADDRCONF(NETDEV_CHANGE): eth0.4088: link becomes ready//bmc login: root/Password:/root@bmc-obb:~#/```//X-link: https://github.com/facebookexternal/openbmc.celestica/pull/1477//Reviewed By: rootkeeper//Differential Revision: D44141171//Pulled By: binhuang00//fbshipit-source-id: bfaa9906aa16c17b5996d31487ae4e90eb833fe8",https://github.com/facebook/openbmc/commit/ef091a7390e9f9887187d2337bd295bc505e8b06,31917712,facebook/openbmc,False,False
24,a710503a786505f47d6b70803b378b9c3830af7d,"Bump eslint from 8.35.0 to 8.36.0 in /js/js-flipper (#4596)//Summary:/skip-frl-buck-targeting//Bumps [eslint](https://github.com/eslint/eslint) from 8.35.0 to 8.36.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.36.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.36.0 - March 10, 2023</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/75df535681d15d7d685468d637945a200301f9ee""><code>75df535</code></a> 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/a0c856a82266107c8c93a695700b1f69a238316e""><code>a0c856a</code></a> Build: changelog update for 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.35.0...v8.36.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.35.0&new-version=8.36.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4596//Reviewed By: ivanmisuno//Differential Revision: D44215117//Pulled By: mweststrate//fbshipit-source-id: 26c8803b29b6e2176ad0e9e7c35142edbb9baef5",https://github.com/facebook/flipper/commit/a710503a786505f47d6b70803b378b9c3830af7d,129283183,facebook/flipper,False,False
25,075de45076be8634339d20ecd0f8a92bb7b4ae3a,"Bump react-refresh from 0.11.0 to 0.14.0 in /desktop (#4540)//Summary:/Bumps [react-refresh](https://github.com/facebook/react/tree/HEAD/packages/react) from 0.11.0 to 0.14.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/releases"">react-refresh's releases</a>.</em></p>/<blockquote>/<h2>v0.14.0</h2>/<p>See <a href=""http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html"">http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html</a>.</p>/<h2>v0.13.3</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>clipPath</code> element and attribute for SVG</li>/<li>Improved warnings for deprecated methods in plain JS classes</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Loosened <code>dangerouslySetInnerHTML</code> restrictions so <code>{__html: undefined}</code> will no longer throw</li>/<li>Fixed extraneous context warning with non-pure <code>getChildContext</code></li>/<li>Ensure <code>replaceState(obj)</code> retains prototype of <code>obj</code></li>/</ul>/<h3>React with Add-ons</h3>/<h3>Bug Fixes</h3>/<ul>/<li>Test Utils: Ensure that shallow rendering works when components define <code>contextTypes</code></li>/</ul>/<h2>v0.13.2</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>strokeDashoffset</code>, <code>flexPositive</code>, <code>flexNegative</code> to the list of unitless CSS properties</li>/<li>Added support for more DOM properties:/<ul>/<li><code>scoped</code> - for <code>&lt;style&gt;</code> elements</li>/<li><code>high</code>, <code>low</code>, <code>optimum</code> - for <code>&lt;meter&gt;</code> elements</li>/<li><code>unselectable</code> - IE-specific property to prevent user selection</li>/</ul>/</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Fixed a case where re-rendering after rendering null didn't properly pass context</li>/<li>Fixed a case where re-rendering after rendering with <code>style={null}</code> didn't properly update <code>style</code></li>/<li>Update <code>uglify</code> dependency to prevent a bug in IE8</li>/<li>Improved warnings</li>/</ul>/<h3>React with Add-Ons</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Immutabilty Helpers: Ensure it supports <code>hasOwnProperty</code> as an object key</li>/</ul>/<h3>React Tools</h3>/<ul>/<li>Improve documentation for new options</li>/</ul>/<h2>v0.13.1</h2>/<h3>React Core</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Don't throw when rendering empty <code>&lt;select&gt;</code> elements</li>/<li>Ensure updating <code>style</code> works when transitioning from <code>null</code></li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/blob/main/CHANGELOG.md"">react-refresh's changelog</a>.</em></p>/<blockquote>/<h2>0.14.0 (October 7, 2015)</h2>/<h3>Major changes</h3>/<ul>/<li>Split the main <code>react</code> package into two: <code>react</code> and <code>react-dom</code>.  This paves the way to writing components that can be shared between the web version of React and React Native.  This means you will need to include both files and some functions have been moved from <code>React</code> to <code>ReactDOM</code>.</li>/<li>Addons have been moved to separate packages (<code>react-addons-clone-with-props</code>, <code>react-addons-create-fragment</code>, <code>react-addons-css-transition-group</code>, <code>react-addons-linked-state-mixin</code>, <code>react-addons-perf</code>, <code>react-addons-pure-render-mixin</code>, <code>react-addons-shallow-compare</code>, <code>react-addons-test-utils</code>, <code>react-addons-transition-group</code>, <code>react-addons-update</code>, <code>ReactDOM.unstable_batchedUpdates</code>).</li>/<li>Stateless functional components - React components were previously created using React.createClass or using ES6 classes.  This release adds a <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">new syntax</a> where a user defines a single <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">stateless render function</a> (with one parameter: <code>props</code>) which returns a JSX element, and this function may be used as a component.</li>/<li>Refs to DOM components as the DOM node itself. Previously the only useful thing you can do with a DOM component is call <code>getDOMNode()</code> to get the underlying DOM node. Starting with this release, a ref to a DOM component <em>is</em> the actual DOM node. <strong>Note that refs to custom (user-defined) components work exactly as before; only the built-in DOM components are affected by this change.</strong></li>/</ul>/<h3>Breaking changes</h3>/<ul>/<li><code>React.initializeTouchEvents</code> is no longer necessary and has been removed completely. Touch events now work automatically.</li>/<li>Add-Ons: Due to the DOM node refs change mentioned above, <code>TestUtils.findAllInRenderedTree</code> and related helpers are no longer able to take a DOM component, only a custom component.</li>/<li>The <code>props</code> object is now frozen, so mutating props after creating a component element is no longer supported. In most cases, <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> should be used instead. This change makes your components easier to reason about and enables the compiler optimizations mentioned above.</li>/<li>Plain objects are no longer supported as React children; arrays should be used instead. You can use the <a href=""https://reactjs.org/docs/create-fragment.html""><code>createFragment</code></a> helper to migrate, which now returns an array.</li>/<li>Add-Ons: <code>classSet</code> has been removed. Use <a href=""https://github.com/JedWatson/classnames"">classnames</a> instead.</li>/<li>Web components (custom elements) now use native property names.  Eg: <code>class</code> instead of <code>className</code>.</li>/</ul>/<h3>Deprecations</h3>/<ul>/<li><code>this.getDOMNode()</code> is now deprecated and <code>ReactDOM.findDOMNode(this)</code> can be used instead. Note that in the common case, <code>findDOMNode</code> is now unnecessary since a ref to the DOM component is now the actual DOM node.</li>/<li><code>setProps</code> and <code>replaceProps</code> are now deprecated. Instead, call ReactDOM.render again at the top level with the new props.</li>/<li>ES6 component classes must now extend <code>React.Component</code> in order to enable stateless function components. The <a href=""https://reactjs.org/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages"">ES3 module pattern</a> will continue to work.</li>/<li>Reusing and mutating a <code>style</code> object between renders has been deprecated. This mirrors our change to freeze the <code>props</code> object.</li>/<li>Add-Ons: <code>cloneWithProps</code> is now deprecated. Use <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> instead (unlike <code>cloneWithProps</code>, <code>cloneElement</code> does not merge <code>className</code> or <code>style</code> automatically; you can merge them manually if needed).</li>/<li>Add-Ons: To improve reliability, <code>CSSTransitionGroup</code> will no longer listen to transition events. Instead, you should specify transition durations manually using props such as <code>transitionEnterTimeout={500}</code>.</li>/</ul>/<h3>Notable enhancements</h3>/<ul>/<li>Added <code>React.Children.toArray</code> which takes a nested children object and returns a flat array with keys assigned to each child. This helper makes it easier to manipulate collections of children in your <code>render</code> methods, especially if you want to reorder or slice <code>this.props.children</code> before passing it down. In addition, <code>React.Children.map</code> now returns plain arrays too.</li>/<li>React uses <code>console.error</code> instead of <code>console.warn</code> for warnings so that browsers show a full stack trace in the console. (Our warnings appear when you use patterns that will break in future releases and for code that is likely to behave unexpectedly, so we do consider our warnings to be “must-fix” errors.)</li>/<li>Previously, including untrusted objects as React children <a href=""http://danlec.com/blog/xss-via-a-spoofed-react-element"">could result in an XSS security vulnerability</a>. This problem should be avoided by properly validating input at the application layer and by never passing untrusted objects around your application code. As an additional layer of protection, <a href=""https://github-redirect.dependabot.com/facebook/react/pull/4832"">React now tags elements</a> with a specific <a href=""http://www.2ality.com/2014/12/es6-symbols.html"">ES2015 (ES6) <code>Symbol</code></a> in browsers that support it, in order to ensure that React never considers untrusted JSON to be a valid element. If this extra security protection is important to you, you should add a <code>Symbol</code> polyfill for older browsers, such as the one included by <a href=""https://babeljs.io/docs/usage/polyfill/"">Babel’s polyfill</a>.</li>/<li>When possible, React DOM now generates XHTML-compatible markup.</li>/<li>React DOM now supports these standard HTML attributes: <code>capture</code>, <code>challenge</code>, <code>inputMode</code>, <code>is</code>, <code>keyParams</code>, <code>keyType</code>, <code>minLength</code>, <code>summary</code>, <code>wrap</code>. It also now supports these non-standard attributes: <code>autoSave</code>, <code>results</code>, <code>security</code>.</li>/<li>React DOM now supports these SVG attributes, which render into namespaced attributes: <code>xlinkActuate</code>, <code>xlinkArcrole</code>, <code>xlinkHref</code>, <code>xlinkRole</code>, <code>xlinkShow</code>, <code>xlinkTitle</code>, <code>xlinkType</code>, <code>xmlBase</code>, <code>xmlLang</code>, <code>xmlSpace</code>.</li>/<li>The <code>image</code> SVG tag is now supported by React DOM.</li>/<li>In React DOM, arbitrary attributes are supported on custom elements (those with a hyphen in the tag name or an <code>is=&quot;...&quot;</code> attribute).</li>/<li>React DOM now supports these media events on <code>audio</code> and <code>video</code> tags: <code>onAbort</code>, <code>onCanPlay</code>, <code>onCanPlayThrough</code>, <code>onDurationChange</code>, <code>onEmptied</code>, <code>onEncrypted</code>, <code>onEnded</code>, <code>onError</code>, <code>onLoadedData</code>, <code>onLoadedMetadata</code>, <code>onLoadStart</code>, <code>onPause</code>, <code>onPlay</code>, <code>onPlaying</code>, <code>onProgress</code>, <code>onRateChange</code>, <code>onSeeked</code>, <code>onSeeking</code>, <code>onStalled</code>, <code>onSuspend</code>, <code>onTimeUpdate</code>, <code>onVolumeChange</code>, <code>onWaiting</code>.</li>/<li>Many small performance improvements have been made.</li>/<li>Many warnings show more context than before.</li>/<li>Add-Ons: A <a href=""https://github-redirect.dependabot.com/facebook/react/pull/3355""><code>shallowCompare</code></a> add-on has been added as a migration path for <code>PureRenderMixin</code> in ES6 classes.</li>/<li>Add-Ons: <code>CSSTransitionGroup</code> can now use <a href=""https://github.com/facebook/react/blob/48942b85/docs/docs/10.1-animation.md#custom-classes"">custom class names</a> instead of appending <code>-enter-active</code> or similar to the transition name.</li>/</ul>/<h3>New helpful warnings</h3>/<ul>/<li>React DOM now warns you when nesting HTML elements invalidly, which helps you avoid surprising errors during updates.</li>/<li>Passing <code>document.body</code> directly as the container to <code>ReactDOM.render</code> now gives a warning as doing so can cause problems with browser extensions that modify the DOM.</li>/<li>Using multiple instances of React together is not supported, so we now warn when we detect this case to help you avoid running into the resulting problems.</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/facebook/react/commit/3603d45157e6c1b21cda7ed96683408b319ae619""><code>3603d45</code></a> v0.14.0</li>/<li><a href=""https://github.com/facebook/react/commit/693dd3567b6648fdccfd602702192bb22f405e63""><code>693dd35</code></a> Update to fbjs@0.3</li>/<li><a href=""https://github.com/facebook/react/commit/4a4174b9e8d1f554a5368da5df274746a8e332d1""><code>4a4174b</code></a> 0.14.0-rc1</li>/<li><a href=""https://github.com/facebook/react/commit/c04d02e5e8de18436ac95037ab856ac5ba7d29b9""><code>c04d02e</code></a> Add warnings to React module</li>/<li><a href=""https://github.com/facebook/react/commit/52b4c9eabf6c5930a906df4584c8480db5ec6e9e""><code>52b4c9e</code></a> Upgrade to fbjs, fbjs-scripts @ 0.2</li>/<li><a href=""https://github.com/facebook/react/commit/b38509cade7e5e31bffd2da93fb0213ad58681bf""><code>b38509c</code></a> Merge pull request <a href=""https://github.com/facebook/react/tree/HEAD/packages/react/issues/4540"">https://github.com/facebook/flipper/issues/4540</a> from scottburch/ie8-fix</li>/<li><a href=""https://github.com/facebook/react/commit/ecb34de5747a6d4578dc4be920a033db9f81370f""><code>ecb34de</code></a> Upgrade ESLint, fix code</li>/<li><a href=""https://github.com/facebook/react/commit/3f6bca7b1638ee940bb01989377abc9864edb6fe""><code>3f6bca7</code></a> 0.14.0-beta3</li>/<li><a href=""https://github.com/facebook/react/commit/5f01a90954405d26439d00af2b6f5dbfa535ef9d""><code>5f01a90</code></a> Update addons.js</li>/<li><a href=""https://github.com/facebook/react/commit/1da2b29897781d3faa7b555e4962d7eb5b6a2707""><code>1da2b29</code></a> added suggested comment to get file to pass es-lint</li>/<li>Additional commits viewable in <a href=""https://github.com/facebook/react/commits/v0.14.0/packages/react"">compare view</a></li>/</ul>/</details>/<details>/<summary>Maintainer changes</summary>/<p>This version was pushed to npm by <a href=""https://www.npmjs.com/~gnoff"">gnoff</a>, a new releaser for react-refresh since your current version.</p>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=react-refresh&package-manager=npm_and_yarn&previous-version=0.11.0&new-version=0.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4540//Reviewed By: ivanmisuno//Differential Revision: D44215184//Pulled By: mweststrate//fbshipit-source-id: e8f33dfbfbe887d49c27f2dabbbc1548de3d10e9",https://github.com/facebook/flipper/commit/075de45076be8634339d20ecd0f8a92bb7b4ae3a,129283183,facebook/flipper,False,False
26,ddba780c0cb44d75d41fc252d8212181040a3020,"fix: Change checkout cache strategy (#35259)//Summary:/This PR updates he cache strategy for the `checkout_with_cache command`.//The previous strategy was using three keys in descending priority order to restore from the cache:/* `<< parameters.checkout_base_cache_key >>-{{ arch }}-{{ .Branch }}-{{ .Revision }}`/* `<< parameters.checkout_base_cache_key >>-{{ arch }}-{{ .Branch }}`/*`<< parameters.checkout_base_cache_key >>-{{ arch }}`//When it saves, it always saves using the first key.//The restore works as it follows:/1. It tries to restore the cache using the first key/2. If it fails, it checks whether there is a cache hit for a key that matches the second key as a pattern/3. If it fails, it checks whether there is a cache hit for a key that matches the third pattern/4. Otherwise, it is a cache miss.//This does not work well. Imagine that you submit some code in commit `xxxx` for branch `abc`./The CI run the first time, it misses all the three keys and checks out the code normally./Then, it stores the checked out code in the `checkout_key-abc-xxxx` key.//Then, you submit a commit `yyyy` in the same branch./The CI starts, it tries with the key `checkout_key-abc-yyyy` but it misses/It tries with the key `checkout_key-abc` and it finds the cache for `checkout_key-abc-xxxx` and it restores it, forgetting about your changes.//While doing the release, we created a tag in a commit X. Then we manually had to remove it, but the CI had a cached version of .git with the tag for/the `0.71-stable` branch. And the release failed because the tag was already existing.//### Why this should work//With this solution, we are going to cache using the commit. If there is no cache for a specific commit, it will be a miss. It won't try to be smart and/retrieve the code from previous caches.//This should prevent stale caches and if we manually remove a tag, and then we do a new commit, it should work.//This is a good trade-off that allows to pay the checkout cost only for the first batch of jobs of the pipeline.//**NOTE:** This still won't work if we don't do a new commit.//## Changelog//[General] [Fixed] - Change Cache strategy to avoid cache bumps in Release//Pull Request resolved: https://github.com/facebook/react-native/pull/35259//Test Plan: 1. CircleCI must be green//Reviewed By: jacdebug//Differential Revision: D41120895//Pulled By: cipolleschi//fbshipit-source-id: 2b45da01803197dbe4a25a313a9dfc53a976d096",https://github.com/facebook/react-native/commit/ddba780c0cb44d75d41fc252d8212181040a3020,29028775,facebook/react-native,False,False
27,2a5afc00b116911038d5cab7ad2f440437736a09,"Add info about adding on-diff tests to QSFP service//Summary:/* Add info on unified target determinator for adding on-diff tests/* Build wiki page/  * Put commands in a format ready to be copied and pasted to a console/  * Fix warnings/* Fix warnings in optics_phy_sw_dev.rst/* Fix sub-directory TOC generation and added instructions to the wiki building wiki/  * The top level features and how_to are special cases. To include all sub-directories from both facebook/ and oss/, the pattern goes one more level below//Reviewed By: rajank7//Differential Revision: D37156846//fbshipit-source-id: 022ae6c86d5782bebfc0062b052e7e6a416b1131",https://github.com/facebook/fboss/commit/2a5afc00b116911038d5cab7ad2f440437736a09,31927407,facebook/fboss,False,False
28,de3d7a3229d01da00db255d8e2fa56b67c753b40,"Bump minimatch from 3.0.4 to 3.1.2 in /website (#370)//Summary:/Bumps [minimatch](https://github.com/isaacs/minimatch) from 3.0.4 to 3.1.2./<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/isaacs/minimatch/commit/699c459443a6bd98f5b28197978f76e7f71467ac""><code>699c459</code></a> 3.1.2</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/2f2b5ff1bb1b6a01f4404f7e475f0a2cba578ab7""><code>2f2b5ff</code></a> fix: trim pattern</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/25d7c0d09c47063c9b0d2ace17ef8e951d90eccc""><code>25d7c0d</code></a> 3.1.1</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/55dda291dfb595bd11b4edb19b45dd98eda76de0""><code>55dda29</code></a> fix: treat nocase:true as always having magic</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/5e1fb8dd2bb78c0ae22101b9229fac4c76ef039e""><code>5e1fb8d</code></a> 3.1.0</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/f8145c54f34075069f4a23cb214d871da4cd4006""><code>f8145c5</code></a> Add 'allowWindowsEscape' option</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/570e8b1aef6c9e823a824aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>/<li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>/<li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)/- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language/- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language/- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language/- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language//You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/ktfmt/network/alerts).//</details>//Pull Request resolved: https://github.com/facebook/ktfmt/pull/370//Reviewed By: hick209//Differential Revision: D41915692//Pulled By: cgrushko//fbshipit-source-id: 3a72acb68831832d0af4081e94f2644bb1d7b90d",https://github.com/facebook/ktfmt/commit/de3d7a3229d01da00db255d8e2fa56b67c753b40,218383922,facebook/ktfmt,False,False
29,8111513e95ee97bef7f155dbbeef29c40b509fba,"Bump eslint from 8.28.0 to 8.31.0 in /js/js-flipper (#4419)//Summary:/Bumps [eslint](https://github.com/eslint/eslint) from 8.28.0 to 8.31.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.31.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/52c7c73c052e1ec2528c6b4af78181bc30cf8cdd""><code>52c7c73</code></a> feat: check assignment patterns in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16693"">#16693</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b401cde47d44746ff91b8feced3fb3a4e32c0e12""><code>b401cde</code></a> feat: add options to check destructuring in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16006"">#16006</a>) (Morten Kaltoft)</li>/<li><a href=""https://github.com/eslint/eslint/commit/30d0daf55e85a412995f6d69f47cab3fb591f2c3""><code>30d0daf</code></a> feat: group properties with values in parentheses in <code>key-spacing</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16677"">#16677</a>) (Francesco Trotta)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e5ecfefa1c952195a3a8371f5953cc655d844079""><code>e5ecfef</code></a> docs: Add function call example for no-undefined (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16712"">#16712</a>) (Elliot Huffman)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a3262f0a6305d2a721fac137a60c62c019b26aa4""><code>a3262f0</code></a> docs: Add mastodon link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16638"">#16638</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a14ccf91af1122e419710f58ef494980fc4894b3""><code>a14ccf9</code></a> docs: clarify files property (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16709"">#16709</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3b29eb14e00182614c986d8498b483a9917976e7""><code>3b29eb1</code></a> docs: fix npm link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16710"">#16710</a>) (Abdullah Osama)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a638673ee6e94344c46d12dfc988adeb3783f817""><code>a638673</code></a> docs: fix search bar focus on <code>Esc</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16700"">#16700</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f62b722251858a5dfb157591910edbaaeb4a966f""><code>f62b722</code></a> docs: country flag missing in windows (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16698"">#16698</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d27ec6019847afabeebf592dddc014e9220057c""><code>4d27ec6</code></a> docs: display zh-hans in the docs language switcher (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16686"">#16686</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8bda20e8276c6ba17d31842fcdd63ba65476fbbd""><code>8bda20e</code></a> docs: remove manually maintained anchors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16685"">#16685</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b68440ff2b8322fc00373792701169205c94ed94""><code>b68440f</code></a> docs: User Guide Getting Started expansion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16596"">#16596</a>) (Ben Perlmutter)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4cd87cb3c52412277577ba00c4fbb1aec36acc8c""><code>4cd87cb</code></a> ci: bump actions/stale from 6 to 7 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16713"">#16713</a>) (dependabot[bot])</li>/<li><a href=""https://github.com/eslint/eslint/commit/fd20c75b1059c54d598c0abaf63e7d7a80f04f32""><code>fd20c75</code></a> chore: sort package.json scripts in alphabetical order (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16705"">#16705</a>) (Darius Dzien)</li>/<li><a href=""https://github.com/eslint/eslint/commit/10a5c7839370219c79f44d4206cbd7c28a72bad5""><code>10a5c78</code></a> chore: update ignore patterns in <code>eslint.config.js</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16678"">#16678</a>) (Milos Djermanovic)</li>/</ul>/<h2>v8.30.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50""><code>075ef2c</code></a> feat: add suggestion for no-return-await (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16637"">#16637</a>) (Daniel Bartholomae)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b""><code>7190d98</code></a> feat: update globals (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16654"">#16654</a>) (Sébastien Règne)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c""><code>1a327aa</code></a> fix: Ensure flat config unignores work consistently like eslintrc (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16579"">#16579</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975""><code>9b8bb72</code></a> fix: autofix recursive functions in no-var (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16611"">#16611</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405""><code>6a8cd94</code></a> docs: Clarify Discord info in issue template config (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16663"">#16663</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e""><code>ad44344</code></a> docs: CLI documentation standardization (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16563"">#16563</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022""><code>293573e</code></a> docs: fix broken line numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16606"">#16606</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a""><code>fa2c64b</code></a> docs: use relative links for internal links (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16631"">#16631</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b""><code>75276c9</code></a> docs: reorder options in no-unused-vars (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16625"">#16625</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42""><code>7276fe5</code></a> docs: Fix anchor in URL (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16628"">#16628</a>) (Karl Horky)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f""><code>6bef135</code></a> docs: don't apply layouts to html formatter example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16591"">#16591</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59""><code>dfc7ec1</code></a> docs: Formatters page updates (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16566"">#16566</a>) (Ben Perlmutter)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.31.0 - December 31, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/52c7c73c052e1ec2528c6b4af78181bc30cf8cdd""><code>52c7c73</code></a> feat: check assignment patterns in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16693"">#16693</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e5ecfefa1c952195a3a8371f5953cc655d844079""><code>e5ecfef</code></a> docs: Add function call example for no-undefined (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16712"">#16712</a>) (Elliot Huffman)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a3262f0a6305d2a721fac137a60c62c019b26aa4""><code>a3262f0</code></a> docs: Add mastodon link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16638"">#16638</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4cd87cb3c52412277577ba00c4fbb1aec36acc8c""><code>4cd87cb</code></a> ci: bump actions/stale from 6 to 7 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16713"">#16713</a>) (dependabot[bot])</li>/<li><a href=""https://github.com/eslint/eslint/commit/a14ccf91af1122e419710f58ef494980fc4894b3""><code>a14ccf9</code></a> docs: clarify files property (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16709"">#16709</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3b29eb14e00182614c986d8498b483a9917976e7""><code>3b29eb1</code></a> docs: fix npm link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16710"">#16710</a>) (Abdullah Osama)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fd20c75b1059c54d598c0abaf63e7d7a80f04f32""><code>fd20c75</code></a> chore: sort package.json scripts in alphabetical order (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16705"">#16705</a>) (Darius Dzien)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a638673ee6e94344c46d12dfc988adeb3783f817""><code>a638673</code></a> docs: fix search bar focus on <code>Esc</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16700"">#16700</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f62b722251858a5dfb157591910edbaaeb4a966f""><code>f62b722</code></a> docs: country flag missing in windows (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16698"">#16698</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d27ec6019847afabeebf592dddc014e9220057c""><code>4d27ec6</code></a> docs: display zh-hans in the docs language switcher (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16686"">#16686</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8bda20e8276c6ba17d31842fcdd63ba65476fbbd""><code>8bda20e</code></a> docs: remove manually maintained anchors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16685"">#16685</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b401cde47d44746ff91b8feced3fb3a4e32c0e12""><code>b401cde</code></a> feat: add options to check destructuring in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16006"">#16006</a>) (Morten Kaltoft)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b68440ff2b8322fc00373792701169205c94ed94""><code>b68440f</code></a> docs: User Guide Getting Started expansion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16596"">#16596</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/30d0daf55e85a412995f6d69f47cab3fb591f2c3""><code>30d0daf</code></a> feat: group properties with values in parentheses in <code>key-spacing</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16677"">#16677</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/10a5c7839370219c79f44d4206cbd7c28a72bad5""><code>10a5c78</code></a> chore: update ignore patterns in <code>eslint.config.js</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16678"">#16678</a>) (Milos Djermanovic)</li>/</ul>/<p>v8.30.0 - December 16, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/f2c47372420f050ad8f2300271345de1c1232635""><code>f2c4737</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.0 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16675"">#16675</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c""><code>1a327aa</code></a> fix: Ensure flat config unignores work consistently like eslintrc (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16579"">#16579</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50""><code>075ef2c</code></a> feat: add suggestion for no-return-await (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16637"">#16637</a>) (Daniel Bartholomae)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ba74253e8bd63e9e163bbee0540031be77e39253""><code>ba74253</code></a> chore: standardize npm script names per <a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/14827"">#14827</a> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16315"">#16315</a>) (Patrick McElhaney)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405""><code>6a8cd94</code></a> docs: Clarify Discord info in issue template config (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16663"">#16663</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/0d9af4c5674809be993439c766dcd9d7f65fcec9""><code>0d9af4c</code></a> ci: fix npm v9 problem with <code>file:</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16664"">#16664</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b""><code>7190d98</code></a> feat: update globals (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16654"">#16654</a>) (Sébastien Règne)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e""><code>ad44344</code></a> docs: CLI documentation standardization (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16563"">#16563</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/90c9219181e0aadcae7224602d2988186d457113""><code>90c9219</code></a> refactor: migrate off deprecated function-style rules in all tests (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16618"">#16618</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975""><code>9b8bb72</code></a> fix: autofix recursive functions in no-var (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16611"">#16611</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022""><code>293573e</code></a> docs: fix broken line numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16606"">#16606</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a""><code>fa2c64b</code></a> docs: use relative links for internal links (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16631"">#16631</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b""><code>75276c9</code></a> docs: reorder options in no-unused-vars (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16625"">#16625</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42""><code>7276fe5</code></a> docs: Fix anchor in URL (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16628"">#16628</a>) (Karl Horky)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f""><code>6bef135</code></a> docs: don't apply layouts to html formatter example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16591"">#16591</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59""><code>dfc7ec1</code></a> docs: Formatters page updates (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16566"">#16566</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8ba124cfd8aaf01d14ccbcb1654798624948fb0a""><code>8ba124c</code></a> docs: update the <code>prefer-const</code> example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16607"">#16607</a>) (Pavel)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e6cb05aa35bafb9e88f161ad1fa6b01942a7c13c""><code>e6cb05a</code></a> docs: fix css leaking (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16603"">#16603</a>) (Sam Chen)</li>/</ul>/<p>v8.29.0 - December 2, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/0311d81834d675b8ae7cc92a460b37115edc4018""><code>0311d81</code></a> docs: Configuring Plugins page intro, page tweaks, and rename (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16534"">#16534</a>) (Ben Perlmutter)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/d9a39c7685496999b95b11486881d411089ab34e""><code>d9a39c7</code></a> 8.31.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/5d182ce7080adfd224b76c44e03ba9c2a2ac23bc""><code>5d182ce</code></a> Build: changelog update for 8.31.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.28.0...v8.31.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.28.0&new-version=8.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4419//Reviewed By: antonk52//Differential Revision: D42370532//Pulled By: passy//fbshipit-source-id: 4ece5752034b32bce0d217ebc86141c045d1dbfd",https://github.com/facebook/flipper/commit/8111513e95ee97bef7f155dbbeef29c40b509fba,129283183,facebook/flipper,False,False
0,e44593fcb2ff8f4e189b23bf49f4507297cdeb42,"Add testing for composite refinement checks//Summary:/Adding some unit tests demonstrating composite refinement is generally handled, after running into a case in the wild with a strange pattern.//Boiled that down to a weird edge case bug but couldn't find root cause yet: https://fburl.com/pyre/g23aikh1//Reviewed By: dkgi//Differential Revision: D30562874//fbshipit-source-id: 5703c0bf49a8cd7f352aba0927ed2895ca82e6a2",https://github.com/facebook/pyre-check/commit/e44593fcb2ff8f4e189b23bf49f4507297cdeb42,110274488,facebook/pyre-check,False,False
1,69e7b8d921e3ff5bf646992b3d9e239ad4d8b65c,"Suppress warnings on inheritance via dominance and multiple copy constructors//Summary:/In practice this is our largest source of MSVC warnings by line count:/```/xplat\proxygen\liger-nativewindows#header-mode-symlink-tree-only,headers\proxygen\lib\utils\exception.h(56): warning C4521: 'proxygen::Exception': multiple copy constructors specified/.../xplat\proxygen\lib\http\session\hqsession.h(1076): warning C4250: 'proxygen::HQSession::HQControlStream': inherits 'proxygen::detail::composite::CSBidir::proxygen::detail::composite::CSBidir::getEgressStreamId' via dominance/.../xplat\proxygen\liger-nativewindows#header-mode-symlink-tree-only,headers\proxygen\lib\http\session\hqsession.h(1821): warning C4250: 'proxygen::HQSession::HQEgressPushStream': inherits 'proxygen::detail::singlestream::SSBidir::proxygen::detail::singlestream::SSBidir::hasEgressStreamId' via dominance/.../```/Forms of each warning repeat multiple times, due to the many methods in inherited  from `proxygen::detail::singlestream`. The sheer quantity makes it harder to notice other warnings of more value.//As this class/inheritance pattern is intentional and clang does not complain, suppress these warnings in Visual Studio.//Reviewed By: oesh//Differential Revision: D17988676//fbshipit-source-id: 63682e4b9b4e76faa1290ab86b20112b95122e03",https://github.com/facebook/proxygen/commit/69e7b8d921e3ff5bf646992b3d9e239ad4d8b65c,24776728,facebook/proxygen,False,False
0,449be75e8975f70b93c16b6d50dc8ba1c5cd95ce,"Emit error when global (or global attribute) is in return position//Summary:/**Background**: We would like to prevent globals (or their attributes/members) from being returned from functions or method calls, since it's an easy way to miss leaks when running an intraprocedural analysis. We still want to allow classes to be returned (in the case of the factory pattern).//Currently, no extra analysis is performed on the `reachable_globals` in return statement position, so we can achieve the desired results by erroring on *some* of those reachable globals.//We decide to error on a reachable global if it's not a class. To determine this once we reach the top-level statement, we need to include information on the global's type when creating the reachable global, so a new struct has been created for that.//Reviewed By: pradeep90//Differential Revision: D44669945//fbshipit-source-id: c71b822aafef1e83e0cbf9ae8be92a0acc7f8b64",https://github.com/facebook/pyre-check/commit/449be75e8975f70b93c16b6d50dc8ba1c5cd95ce,110274488,facebook/pyre-check,False,False
1,407fb5c2384b13abba677789b8d86b21b6ace190,"Implement ability to emit device events from C++ TurboModules//Summary:/[Changelog][Internal]//This adds a method, `emitDeviceEvent` to the C++ API of TurboModules, which allows to make calls to JS's `RCTDeviceEventEmitter.emit` from a C++ TurboModules.//This is a very common pattern, specifically for the VR apps, but not only for them - e.g. Desktop fork also has a [custom implementation for this](https://www.internalfb.com/code/fbsource/third-party/microsoft-fork-of-react-native/react-native-utils/RCTEventEmitter.cpp).//Note that my original intent was to actually backport the latter, however there are some complications with wiring things in a robust way, without exposing too much stuff and relying on singletons or folly::dynamic.//So I ended up adding it to the TurboModule API itself and use the scheduler/JSI facilities instead.//This approach is arguably well self-contained, uses high level APIs, and shouldn't be abusable much.//Since I was trying to avoid usage of folly::dynamic in this case, I used a kind of ""value factory"" pattern instead in order to send the arguments to the JS thread in a thread safe way (see [the discussion here](https://fb.workplace.com/groups/rn.fabric/permalink/1398711453593610/)).//Reviewed By: christophpurrer//Differential Revision: D43466326//fbshipit-source-id: a3cb8359d08a46421559edd0f854772863cb5c39",https://github.com/facebook/react-native/commit/407fb5c2384b13abba677789b8d86b21b6ace190,29028775,facebook/react-native,False,False
2,8698d40b9cbaf78e7ee83fe783723d8adb2734bb,"Caching Mutation History: Implement core caching logic//Summary:/Fetching mutation history for a changeset (i.e. amend / rebase records for a commit) is accomplished via two core queries:/- `FetchBySuccessor`/- `FetchByPrimordial`//The first query fetches the immediate predecessor for a changeset/commit while the second query fetches all the predecessors upto and including the primordial, i.e. the first known version of the input changeset/commit. Production usage pattern suggests that the primordial query gets repeated thousands of times via wireproto get-bundle and EdenAPI which leads to the query getting killed by PyLander [Task: T124251298]//This diff includes the following changes:/- Implemented the caching logic along with tunable for modifying the caching behaviour./- Updated repo-factory to construct the cached version of `HgMutationStore`./- Added tests for the new logic.//Reviewed By: markbt//Differential Revision: D37456933//fbshipit-source-id: 72c2268f02084f6c7bf10226fff4006bd3a1f4c5",https://github.com/facebook/sapling/commit/8698d40b9cbaf78e7ee83fe783723d8adb2734bb,58146669,facebook/sapling,False,False
3,7dee92447f290b120b43fbdab4ba5257855f144e,"Move towards instance-based Logger//Summary:/Our Logger was written to be easy to use with untested Objective-C code. It formats Strings and creates underlying instances to use in its class methods.//This changeset aims to break these patterns by introducing a logging factory so that types will request logger instances from the factory and then use those instances for logging where needed.//Additionally, variadic Objective-C parameters will translate to Swift but it's kind of a pain and there really isn't a compelling reason to include this helper function in any protocol that will be used in defining Swift types. This changes existing ObjC callsites to format their own strings before passing them to the logger since this is how it will work in Swift.//Next steps for cleaning this up://Get rid of the following class methods:/```/+ (NSUInteger)generateSerialNumber;/+ (void)singleShotLogEntry:(FBSDKLoggingBehavior)loggingBehavior/                  logEntry:(NSString *)logEntry;/+ (void)singleShotLogEntry:(FBSDKLoggingBehavior)loggingBehavior/              timestampTag:(NSObject *)timestampTag/              formatString:(NSString *)formatString, ... NS_FORMAT_FUNCTION(3,4);/+ (void)registerCurrentTime:(NSString *)loggingBehavior/                    withTag:(NSObject *)timestampTag;/+ (void)registerStringToReplace:(NSString *)replace/                    replaceWith:(NSString *)replaceWith;/```/Get rid of the following instance methods since they are only used in GraphRequestConnection. There should be a more specific type to use here instead of forcing all loggers to have / expose these:/```/- (void)appendString:(NSString *)string;/- (void)appendFormat:(NSString *)formatString, ... NS_FORMAT_FUNCTION(1,2);/- (void)appendKey:(NSString *)key value:(NSString *)value;/- (void)emitToNSLog;/```/Inject settings so that Logger does not rely on global state.//Reviewed By: jamestouri//Differential Revision: D28108603//fbshipit-source-id: feb50591fe8596c6fa26850b080d10d46c608200",https://github.com/facebook/facebook-ios-sdk/commit/7dee92447f290b120b43fbdab4ba5257855f144e,738491,facebook/facebook-ios-sdk,False,False
4,1de1617d3ea3978afd6adcb4d51eec46025663f6,"Adding GraphRequestConnectionFactory to GraphRequest//Summary:/Currently `GraphRequest` has a convenience method for creating a `GraphRequestConnection` adding itself to that connection, and starting the connection. Since there are dependencies on `GraphRequestConnection`, we need a way to pass these dependencies from the owner of the connection. In this case, the `GraphRequest`.//We've added a few new types to help satisfy this requirement.//Protocol `GraphRequestConnecting` to describe anything that behaves like a `GraphRequestConnection`/Protocol `GraphRequestConnectionProviding` to describe anything that returns a `GraphRequestConnecting`/Class `FBSDKGraphRequestConnectionFactory` that conforms to `GraphRequestConnectionProviding` and returns concrete instances of `GraphRequestConnection`.//So in our tests we can provide a factory that returns fake graph request connections that can be started, stopped, validated, etc.../And in our production code we can use the default connection factory to return the concrete instances we expect.//We'll continue to use this pattern to surface and push dependencies up the stack until they can be concentrated at a single injection point.//Additionally it was necessary to perform a small refactor on LoginKit to get the semantics right. (It was treating a graph request connection as a graph request connection **provider** instead of having separate protocols for differentiating a connection from something that provides a connection)//Reviewed By: ppansy//Differential Revision: D26471361//fbshipit-source-id: f93f1b6252822e5ca89dbec78251786dd23bc232",https://github.com/facebook/facebook-ios-sdk/commit/1de1617d3ea3978afd6adcb4d51eec46025663f6,738491,facebook/facebook-ios-sdk,False,False
5,83c0d025f1a18de839c69289065655b533084520,"React sync//Summary:/This sync includes the following changes:/- **[1b2159acc](https://github.com/facebook/react/commit/1b2159acc )**: [React Native] measure calls will now call FabricUIManager (#15324) //<Eli White>///- **[c7a959982](https://github.com/facebook/react/commit/c7a959982 )**: [React Native] Add tests to paper renderer for measure, measureLayout (#15323) //<Eli White>///- **[aece8119c](https://github.com/facebook/react/commit/aece8119c )**: Refactor EventComponent logic + add onOwnershipChange callback (#15354) //<Dominic Gannaway>///- **[183d1f42e](https://github.com/facebook/react/commit/183d1f42e )**: Fix: Measure expiration times relative to module initialization (#15357) //<Andrew Clark>///- **[b4bc33a58](https://github.com/facebook/react/commit/b4bc33a58 )**: Fix areHookInputsEqual method  warning params order (#15345) //<砖家>///- **[29fb5862f](https://github.com/facebook/react/commit/29fb5862f )**: Move EventComponent state creation to complete phase + tests (#15352) //<Dominic Gannaway>///- **[745baf2e0](https://github.com/facebook/react/commit/745baf2e0 )**: Provide new jsx transform target for reactjs/rfcs#107 (#15141) //<Ricky Vetter>///- **[81a61b1d1](https://github.com/facebook/react/commit/81a61b1d1 )**: React events: add delay props to Press module (#15340) //<Nicolas Gallagher>///- **[4064ea9fa](https://github.com/facebook/react/commit/4064ea9fa )**: Experimental event API: Support EventComponent onUnmount responder callback (#15335) //<Dominic Gannaway>///- **[4fbbae8af](https://github.com/facebook/react/commit/4fbbae8af )**: Add full TouchHitTarget hit slop (experimental event API) to ReactDOM (#15308) //<Dominic Gannaway>///- **[958b6173f](https://github.com/facebook/react/commit/958b6173f )**: Add delay props to Hover event module (#15325) //<Nicolas Gallagher>///- **[c3cc936da](https://github.com/facebook/react/commit/c3cc936da )**: Add Hover,Focus,Press docs to REAMDE (#15328) //<Nicolas Gallagher>///- **[49595e921](https://github.com/facebook/react/commit/49595e921 )**: [New Scheduler] Fix: Suspending an expired update (#15326) //<Andrew Clark>///- **[b93a8a9bb](https://github.com/facebook/react/commit/b93a8a9bb )**: Experimental event API: refactor responder modules for lifecycle inclusion (#15322) //<Dominic Gannaway>///- **[937d262f5](https://github.com/facebook/react/commit/937d262f5 )**: React events: keyboard press, types, tests (#15314) //<Nicolas Gallagher>///- **[7a2dc4853](https://github.com/facebook/react/commit/7a2dc4853 )**: Allow DevTools to toggle Suspense fallbacks (#15232) //<Dan Abramov>///- **[43b1f74c8](https://github.com/facebook/react/commit/43b1f74c8 )**: Alternate fix for #14198 //<Andrew Clark>///- **[41aa345d2](https://github.com/facebook/react/commit/41aa345d2 )**: Fix a crash in Suspense with findDOMNode //<Dan Abramov>///- **[6d0effad7](https://github.com/facebook/react/commit/6d0effad7 )**: Expose extra internals in FB build of react-dom/unstable-new-scheduler (#15311) //<Andrew Clark>///- **[3a44ccefe](https://github.com/facebook/react/commit/3a44ccefe )**: Fix feature flags react-dom/unstable-new-scheduler (#15309) //<Andrew Clark>///- **[92a1d8fea](https://github.com/facebook/react/commit/92a1d8fea )**: mark react-events as private so we publish script skips it for now (#15307) //<Sunil Pai>///- **[e5c59359c](https://github.com/facebook/react/commit/e5c59359c )**: Prevent bundling of Node polyfills when importing TestUtils/TestRenderer (#15305) //<Dan Abramov>///- **[73187239a](https://github.com/facebook/react/commit/73187239a )**: writing unit tests in experimental event Drag API (#15297) //<Behzad Abbasi>///- **[89064fe68](https://github.com/facebook/react/commit/89064fe68 )**: Adds displayName to EventComponent and EventTarget (#15268) //<Dominic Gannaway>///- **[fc6a9f1a1](https://github.com/facebook/react/commit/fc6a9f1a1 )**: Add test for async event dispatching (#15300) //<Nicolas Gallagher>///- **[38fa84088](https://github.com/facebook/react/commit/38fa84088 )**: Experiemental event API - wrap async dispatched events (#15299) //<Dominic Gannaway>///- **[4d5cb64aa](https://github.com/facebook/react/commit/4d5cb64aa )**: Rewrite ReactFiberScheduler for better integration with Scheduler package (#15151) //<Andrew Clark>///- **[aed0e1c30](https://github.com/facebook/react/commit/aed0e1c30 )**: await act(async () => ...) (#14853) //<Sunil Pai>///- **[4c75881ee](https://github.com/facebook/react/commit/4c75881ee )**: Remove maxDuration from tests (#15272) //<Sebastian Markbåge>///- **[9307932fe](https://github.com/facebook/react/commit/9307932fe )**: Refactor event object creation for the experimental event API (#15295) //<Dominic Gannaway>///- **[6a1e6b2f7](https://github.com/facebook/react/commit/6a1e6b2f7 )**: Experimental event API: loosen EventTarget constraints and warnings (#15292) //<Dominic Gannaway>///- **[f243deab8](https://github.com/facebook/react/commit/f243deab8 )**: Add tests for Press responder event module (#15290) //<Nicolas Gallagher>///- **[296c4393d](https://github.com/facebook/react/commit/296c4393d )**: Add Press event prop types and fix a check in Safari (#15288) //<Nicolas Gallagher>///- **[4482fdded](https://github.com/facebook/react/commit/4482fdded )**: Fix host context issues around EventComponents and EventTargets (#15284) //<Dominic Gannaway>///- **[5ef0d1d29](https://github.com/facebook/react/commit/5ef0d1d29 )**: Rename hover props in experimental event API and write unit tests (#15283) //<Behzad Abbasi>///- **[9444a5472](https://github.com/facebook/react/commit/9444a5472 )**: Warn on nested EventTragets in experimental event API (#15287) //<Dominic Gannaway>///- **[7f1f5ddc3](https://github.com/facebook/react/commit/7f1f5ddc3 )**: Rename press props in experimental event API (#15263) //<Nicolas Gallagher>///- **[2e02469fa](https://github.com/facebook/react/commit/2e02469fa )**: ReactNative's ref.measureLayout now takes a ref (#15126) //<Eli White>///- **[1b94fd215](https://github.com/facebook/react/commit/1b94fd215 )**: Make setNativeProps a no-op with Fabric renderer (#15094) //<Eli White>///- **[08055a625](https://github.com/facebook/react/commit/08055a625 )**: Fix Press module in experimental event API (#15262) //<Nicolas Gallagher>///- **[f4625f518](https://github.com/facebook/react/commit/f4625f518 )**: Fix on(Long)PressChange events in experimental press event API (#15256) //<Nicolas Gallagher>///- **[a41b21770](https://github.com/facebook/react/commit/a41b21770 )**: Add additional event API responder surfaces (#15248) //<Dominic Gannaway>///- **[700f17be6](https://github.com/facebook/react/commit/700f17be6 )**: Fix longpress in experimental Press event module (#15246) //<Nicolas Gallagher>///- **[5d336df70](https://github.com/facebook/react/commit/5d336df70 )**: Allow for null targetFiber for root event handling (#15247) //<Dominic Gannaway>///- **[c6f3524df](https://github.com/facebook/react/commit/c6f3524df )**: Adds React event component and React event target support to SSR renderer (#15242) //<Dominic Gannaway>///- **[c7a2dce50](https://github.com/facebook/react/commit/c7a2dce50 )**: Disable JS urls at build level for www (#15230) //<Sebastian Markbåge>///- **[fb6b50871](https://github.com/facebook/react/commit/fb6b50871 )**: Update versions for 16.8.6 //<Dan Abramov>///- **[1cfd25668](https://github.com/facebook/react/commit/1cfd25668 )**: Fix circular module imports causing file size increase (#15231) //<Dominic Gannaway>///- **[669cafb36](https://github.com/facebook/react/commit/669cafb36 )**: Adds experimental event component responder surfaces (#15228) //<Dominic Gannaway>///- **[d8cb10f11](https://github.com/facebook/react/commit/d8cb10f11 )**: Enabled warnAboutDeprecatedLifecycles flag by default (#15186) //<Brian Vaughn>///- **[80f8b0d51](https://github.com/facebook/react/commit/80f8b0d51 )**: Add part of the event responder system for experimental event API (#15179) //<Dominic Gannaway>///- **[5c2b2c085](https://github.com/facebook/react/commit/5c2b2c085 )**: Warn about async infinite useEffect loop (#15180) //<Dan Abramov>///- **[8e9a013c0](https://github.com/facebook/react/commit/8e9a013c0 )**: Release 16.8.5 //<Dan Abramov>///- **[f33e5790b](https://github.com/facebook/react/commit/f33e5790b )**: eslint-plugin-react-hooks@1.6.0 //<Dan Abramov>///- **[b1cccd1ed](https://github.com/facebook/react/commit/b1cccd1ed )**: Warn about setState directly in dep-less useEffect (#15184) //<Dan Abramov>///- **[78f2775ed](https://github.com/facebook/react/commit/78f2775ed )**: Flip event passive logic on passiveBrowserEventsSupported (#15190) //<Dominic Gannaway>///- **[f161ee2eb](https://github.com/facebook/react/commit/f161ee2eb )**: React.warn() and React.error() (#15170) //<Brian Vaughn>///- **[78968bb3d](https://github.com/facebook/react/commit/78968bb3d )**: Validate useEffect without deps too (#15183) //<Dan Abramov>///- **[4b8e1641b](https://github.com/facebook/react/commit/4b8e1641b )**: Fork performWork instead of using boolean flag (#15169) //<Sebastian Markbåge>///- **[56035dac6](https://github.com/facebook/react/commit/56035dac6 )**: unstable_Profiler -> Profiler (#15172) //<Brian Vaughn>///- **[31518135c](https://github.com/facebook/react/commit/31518135c )**: Strengthen nested update counter test coverage (#15166) //<Dan Abramov>///- **[66f280c87](https://github.com/facebook/react/commit/66f280c87 )**: Add internal logic for listening to event responders (#15168) //<Dominic Gannaway>///- **[b1a56abd6](https://github.com/facebook/react/commit/b1a56abd6 )**: Fork ReactFiberScheduler with feature flag //<Andrew Clark>///- **[45f571736](https://github.com/facebook/react/commit/45f571736 )**: ReactFiberScheduler -> ReactFiberScheduler.old //<Andrew Clark>///- **[c05b4b81f](https://github.com/facebook/react/commit/c05b4b81f )**: Link to useLayoutEffect gist in a warning (#15158) //<Dan Abramov>///- **[061d6ce3c](https://github.com/facebook/react/commit/061d6ce3c )**: fix(react-dom): access iframe contentWindow instead of contentDocument (#15099) //<Renan Valentin>///- **[b83e01cad](https://github.com/facebook/react/commit/b83e01cad )**: Adds more scaffolding for experimental event API (#15112) //<Dominic Gannaway>///- **[daeda44d8](https://github.com/facebook/react/commit/daeda44d8 )**: Follow up to 15150 (#15152) //<Dominic Gannaway>///- **[acd65db5b](https://github.com/facebook/react/commit/acd65db5b )**: Deprecate module pattern (factory) components (#15145) //<Sebastian Markbåge>///- **[55cc921c5](https://github.com/facebook/react/commit/55cc921c5 )**: Adds react-events package for internal testing (#15150) //<Dominic Gannaway>///- **[7ad738630](https://github.com/facebook/react/commit/7ad738630 )**: Improve warning for invalid class contextType (#15142) //<Dan Abramov>///- **[1e3364e76](https://github.com/facebook/react/commit/1e3364e76 )**: Test that we don't suspend when disabling yielding (#15143) //<Sebastian Markbåge>///- **[42c3c967d](https://github.com/facebook/react/commit/42c3c967d )**: Compile invariant directly to throw expressions (#15071) //<Andrew Clark>///- **[df7b87d25](https://github.com/facebook/react/commit/df7b87d25 )**: Warn for Context.Consumer with contextType (#14831) //<Brandon Dail>///- **[2b93d686e](https://github.com/facebook/react/commit/2b93d686e )**: Add more info to invalid hook call error message (#15139) //<Jared Palmer>///- **[d926936f0](https://github.com/facebook/react/commit/d926936f0 )**: Eager bailout optimization should always compare to latest reducer (#15124) //<Andrew Clark>///- **[4162f6026](https://github.com/facebook/react/commit/4162f6026 )**: Add feature flag to disable yielding (#15119) //<Sebastian Markbåge>///- **[8d60bd4dc](https://github.com/facebook/react/commit/8d60bd4dc )**: [Shallow] Implement setState for Hooks and remount on type change (#15120) //<Dan Abramov>///- **[035e4cffb](https://github.com/facebook/react/commit/035e4cffb )**: Change passive checker to use defineProperty (#15121) //<Dominic Gannaway>///- **[b283d75c1](https://github.com/facebook/react/commit/b283d75c1 )**: Support React.memo in ReactShallowRenderer (#14816) //<Brandon Dail>///- **[f0621fe23](https://github.com/facebook/react/commit/f0621fe23 )**: Use same example code for async effect warning (#15118) //<Dan Abramov>///- **[52c870c8d](https://github.com/facebook/react/commit/52c870c8d )**: Fix shallow renderer not allowing hooks in forwardRef render functions (#15100) //<Sebastian Silbermann>///- **[f1ff4348c](https://github.com/facebook/react/commit/f1ff4348c )**: Don't suggest a function as its own dep (#15115) //<Dan Abramov>///- **[371bbf36b](https://github.com/facebook/react/commit/371bbf36b )**: Add infrastructure for passive/non-passive event support for future API exploration (#15036) //<Dominic Gannaway>///- **[ab5fe174c](https://github.com/facebook/react/commit/ab5fe174c )**: Don't set the first option as selected in select tag with `size` attribute  (#14242) //<Mateusz>///- **[935f60083](https://github.com/facebook/react/commit/935f60083 )**: eslint-plugin-react-hooks@1.5.1 //<Dan Abramov>///- **[0c03a4743](https://github.com/facebook/react/commit/0c03a4743 )**: Adds experimental event API scaffolding (#15108) //<Dominic Gannaway>///- **[1204c7897](https://github.com/facebook/react/commit/1204c7897 )**: [eslint] Wording tweaks (#15078) //<Sophie Alpert>///- **[9d77a317b](https://github.com/facebook/react/commit/9d77a317b )**: Improve async useEffect warning (#15104) //<Dan Abramov>///- **[103378b1e](https://github.com/facebook/react/commit/103378b1e )**: Warn for javascript: URLs in DOM sinks (#15047) //<Sebastian Markbåge>///- **[5d0c3c6c7](https://github.com/facebook/react/commit/5d0c3c6c7 )**: [Partial Hydration] Render client-only content at normal priority (#15061) //<Sebastian Markbåge>///- **[6a4a261ee](https://github.com/facebook/react/commit/6a4a261ee )**: Test suspended children are hidden before layout in persistent mode (#15030) //<Andrew Clark>///- **[bc8bd24c1](https://github.com/facebook/react/commit/bc8bd24c1 )**: Run persistent mode tests in CI (#15029) //<Andrew Clark>///- **[3f4852fa5](https://github.com/facebook/react/commit/3f4852fa5 )**: Run Placeholder tests in persistent mode, too (#15013) //<Andrew Clark>///- **[d0289c7e3](https://github.com/facebook/react/commit/d0289c7e3 )**: eslint-plugin-react-hooks@1.5.0 //<Dan Abramov>///- **[03ad9c73e](https://github.com/facebook/react/commit/03ad9c73e )**: [ESLint] Tweak setState updater message and add useEffect(async) warning (#15055) //<Dan Abramov>///- **[eb6247a9a](https://github.com/facebook/react/commit/eb6247a9a )**: More concise messages (#15053) //<Dan Abramov>///- **[197703ecc](https://github.com/facebook/react/commit/197703ecc )**: [ESLint] Add more hints to lint messages (#15046) //<Dan Abramov>///- **[6d2666bab](https://github.com/facebook/react/commit/6d2666bab )**: Fix ESLint rule crash (#15044) //<Dan Abramov>///- **[9b7e1d138](https://github.com/facebook/react/commit/9b7e1d138 )**: [ESLint] Suggest moving inside a Hook or useCallback when bare function is a dependency (#15026) //<Dan Abramov>///- **[1e3b6192b](https://github.com/facebook/react/commit/1e3b6192b )**: Import Scheduler directly, not via host config (#14984) //<Andrew Clark>///- **[5d49dafac](https://github.com/facebook/react/commit/5d49dafac )**: Enforce deps array in useMemo and useCallback (#15025) //<Dan Abramov>///- **[a9aa24ed8](https://github.com/facebook/react/commit/a9aa24ed8 )**: 16.8.4 and changelog //<Brian Vaughn>///- **[fa5d4ee43](https://github.com/facebook/react/commit/fa5d4ee43 )**: [ESLint] Treat functions that don't capture anything as static (#14996) //<Dan Abramov>///- **[fd557d453](https://github.com/facebook/react/commit/fd557d453 )**: Warn on mount when deps are not an array (#15018) //<Dan Abramov>///- **[ce45ca9ba](https://github.com/facebook/react/commit/ce45ca9ba )**: Prettier //<Andrew Clark>///- **[757a70b25](https://github.com/facebook/react/commit/757a70b25 )**: ReactNoop.yield -> Scheduler.yieldValue (#15008) //<Andrew Clark>///- **[9d756d903](https://github.com/facebook/react/commit/9d756d903 )**: Revert #14756 changes to ReactFiberScheduler (#14992) //<Andrew Clark>///- **[f16442a10](https://github.com/facebook/react/commit/f16442a10 )**: eslint-plugin-react-hooks@1.4.0 //<Dan Abramov>///- **[e1e45fb36](https://github.com/facebook/react/commit/e1e45fb36 )**: [ESLint] Suggest to destructure props when they are only used as members (#14993) //<Dan Abramov>///- **[59ef28437](https://github.com/facebook/react/commit/59ef28437 )**: Warn about dependencies outside of render scope (#14990) //<Dan Abramov>///- **[df7b4768c](https://github.com/facebook/react/commit/df7b4768c )**: [ESLint] Deduplicate suggested dependencies (#14982) //<Dan Abramov>///- **[02404d793](https://github.com/facebook/react/commit/02404d793 )**: Avoid dynamic dispatch for scheduler calls (#14968) //<Dan Abramov>///- **[bb2939ccc](https://github.com/facebook/react/commit/bb2939ccc )**: Support editable useState hooks in DevTools (#14906) //<Brian Vaughn>///- **[69060e1da](https://github.com/facebook/react/commit/69060e1da )**: Swap expect(ReactNoop) for expect(Scheduler) (#14971) //<Andrew Clark>///- **[ccb2a8a44](https://github.com/facebook/react/commit/ccb2a8a44 )**: Replace test renderer's fake Scheduler implementation with mock build (#14970) //<Andrew Clark>///- **[53e787b45](https://github.com/facebook/react/commit/53e787b45 )**: Replace noop's fake Scheduler implementation with mock Scheduler build (#14969) //<Andrew Clark>///- **[3ada82b74](https://github.com/facebook/react/commit/3ada82b74 )**: Allow extraneous effect dependencies (#14967) //<Dan Abramov>///- **[00748c53e](https://github.com/facebook/react/commit/00748c53e )**: Add new mock build of Scheduler with flush, yield API (#14964) //<Andrew Clark>///- **[4186952a6](https://github.com/facebook/react/commit/4186952a6 )**: Fixed incompatibility between react-debug-tools and useContext() (#14940) //<Brian Vaughn>///- **[0b8efb229](https://github.com/facebook/react/commit/0b8efb229 )**: Allow omitting constant primitive deps (#14959) //<Dan Abramov>///- **[875d05d55](https://github.com/facebook/react/commit/875d05d55 )**: Include full error messages in React Native build (#15363) //<Andrew Clark>///- **[c64b33003](https://github.com/facebook/react/commit/c64b33003 )**: Move EventTypes to ReactTypes (#15364) //<Dominic Gannaway>///- **[4c78ac0b9](https://github.com/facebook/react/commit/4c78ac0b9 )**: Track Event Time as the Start Time for Suspense (#15358) //<Sebastian Markbåge>////Changelog:/[General][Changed] - React sync for revisions 8e25ed2...c64b330//Reviewed By: hramos//Differential Revision: D14862650//fbshipit-source-id: 350447246d26c69e7f462c5eb4e3ec02e99d05bb",https://github.com/facebook/react-native/commit/83c0d025f1a18de839c69289065655b533084520,29028775,facebook/react-native,False,False
6,ee681b72ce89539e5764ed59e5dfea4fab04d48c,"React sync for revisions 8e25ed2...ec6691a//Summary:/This sync includes the following changes:/- **[ec6691a68](https://github.com/facebook/react/commit/ec6691a68 )**: Event API: remove isTargetDirectlyWithinEventComponent (#15546) //<Dominic Gannaway>///- **[a6e30001f](https://github.com/facebook/react/commit/a6e30001f )**: Delete duplicate Focus.js (#15540) //<Dominic Gannaway>///- **[f7993d547](https://github.com/facebook/react/commit/f7993d547 )**: Delete duplicate Hover.js (#15539) //<Dominic Gannaway>///- **[c8ee10037](https://github.com/facebook/react/commit/c8ee10037 )**: Delete duplicate Swipe.js (#15541) //<Dominic Gannaway>///- **[494716c9b](https://github.com/facebook/react/commit/494716c9b )**: Delete duplicate Drag.js (#15537) //<Dominic Gannaway>///- **[377846fef](https://github.com/facebook/react/commit/377846fef )**: Delete duplicate Press.js (#15538) //<Dominic Gannaway>///- **[379515e83](https://github.com/facebook/react/commit/379515e83 )**: Follow up to 15535 (#15536) //<Dominic Gannaway>///- **[bd88982fb](https://github.com/facebook/react/commit/bd88982fb )**: Event API: use `capture` for all event listeners using experimental responder system (#15526) //<Dominic Gannaway>///- **[72ca3c60e](https://github.com/facebook/react/commit/72ca3c60e )**: Bump scheduler version to 0.14.0 (#15395) //<Andrew Clark>///- **[7882c41f6](https://github.com/facebook/react/commit/7882c41f6 )**: Use lowercase entry points for event modules (#15535) //<Andrew Clark>///- **[43c4e5f34](https://github.com/facebook/react/commit/43c4e5f34 )**: Add method for forcing a lower framerate //<Nathan Schloss>///- **[1b752f191](https://github.com/facebook/react/commit/1b752f191 )**: Fixed potential interaction tracing leak in Suspense thennable memoization (#15531) //<Brian Vaughn>///- **[12e5a13cf](https://github.com/facebook/react/commit/12e5a13cf )**: [React Native] Inline calls to FabricUIManager in shared code (#15490) //<Eli White>///- **[2cca18728](https://github.com/facebook/react/commit/2cca18728 )**: React Events: add onFocusVisibleChange to Focus (#15516) //<Nicolas Gallagher>///- **[cc5a49379](https://github.com/facebook/react/commit/cc5a49379 )**: React Events: FocusScope tweaks and docs (#15515) //<Nicolas Gallagher>///- **[796c67a25](https://github.com/facebook/react/commit/796c67a25 )**: Event API: responder event types should not re-register on EventComponent update (#15514) //<Dominic Gannaway>///- **[c4d1dcb53](https://github.com/facebook/react/commit/c4d1dcb53 )**: React Events: core API documentation followup (#15506) //<Dominic Gannaway>///- **[41ef1961c](https://github.com/facebook/react/commit/41ef1961c )**: Update TopLevelEventTypes.js (#15511) //<Dan Nate>///- **[7a482af5d](https://github.com/facebook/react/commit/7a482af5d )**: Event API: Fix bug where Press root events were not being cleared (#15507) //<Dominic Gannaway>///- **[a14e24efa](https://github.com/facebook/react/commit/a14e24efa )**: React Events: core API documentation (#15505) //<Nicolas Gallagher>///- **[8658611b6](https://github.com/facebook/react/commit/8658611b6 )**: Event API: ensure event keys are unique + add validation (#15501) //<Dominic Gannaway>///- **[d9839740e](https://github.com/facebook/react/commit/d9839740e )**: React events: remove unused types (#15503) //<Nicolas Gallagher>///- **[0b3431170](https://github.com/facebook/react/commit/0b3431170 )**: React events: fix press end event dispatching (#15500) //<Nicolas Gallagher>///- **[d1f667acc](https://github.com/facebook/react/commit/d1f667acc )**: Event API: follow up fixes for FocusScope + context changes (#15496) //<Dominic Gannaway>///- **[c530639dd](https://github.com/facebook/react/commit/c530639dd )**: Minor code structure adjustments to the bundles.js file (#15079) //<Kunuk Nykjær>///- **[ed36df46c](https://github.com/facebook/react/commit/ed36df46c )**: add --watch mode to ""yarn build"" (#15116) //<Alec Larson>///- **[793ef9b85](https://github.com/facebook/react/commit/793ef9b85 )**: test(eslint-plugin-react-hooks): add coverage for unused custom hook (#15130) //<Redmond Tran>///- **[d61da9387](https://github.com/facebook/react/commit/d61da9387 )**: test(accumulate): add test suite for accumulate function (#15159) //<Jeffrey Berry>///- **[a187e9b5e](https://github.com/facebook/react/commit/a187e9b5e )**: React Native: Allow Views to be nested inside of Text (#15464) //<Adam Comella>///- **[f85aadefc](https://github.com/facebook/react/commit/f85aadefc )**: ADD: disablePictureInPicture attribute for HTML5 videos (#15334) //<Radu-Sebastian Amarie>///- **[1eb2b892d](https://github.com/facebook/react/commit/1eb2b892d )**: give  `canUseDOM` with a possibility to be a constant (#14194) //<FUJI Goro>///- **[de26d6dd3](https://github.com/facebook/react/commit/de26d6dd3 )**: typo fix (#15493) //<shubham>///- **[64e3da286](https://github.com/facebook/react/commit/64e3da286 )**: Event API: Add `FocusScope` surface (#15487) //<Dominic Gannaway>///- **[3f058debc](https://github.com/facebook/react/commit/3f058debc )**: Event API: various bug fixes (#15485) //<Dominic Gannaway>///- **[fb28e9048](https://github.com/facebook/react/commit/fb28e9048 )**: Add missing word to code comment for clarity (#15443) //<Brendan McLoughlin>///- **[fa2fa3564](https://github.com/facebook/react/commit/fa2fa3564 )**: Experimental event API: adds context.isTargetDirectlyWithinEventComponent (#15481) //<Dominic Gannaway>///- **[d3af2f2a5](https://github.com/facebook/react/commit/d3af2f2a5 )**: Experimental Event API: add event component mount phase callback (#15480) //<Dominic Gannaway>///- **[ce126fbb2](https://github.com/facebook/react/commit/ce126fbb2 )**: Fix priority inference of next level of work (#15478) //<Andrew Clark>///- **[71c8759ce](https://github.com/facebook/react/commit/71c8759ce )**: Measure callback timeout relative to current time (#15479) //<Andrew Clark>///- **[9c6ff136c](https://github.com/facebook/react/commit/9c6ff136c )**: Remove timeout from performance flamegraph (#15477) //<Andrew Clark>///- **[299a2714c](https://github.com/facebook/react/commit/299a2714c )**: Use stricter equality check (#15474) //<Dan Abramov>///- **[017d6f14b](https://github.com/facebook/react/commit/017d6f14b )**: Experimental Event API: add `rootEventTypes` support to event responders (#15475) //<Dominic Gannaway>///- **[784ebd8fa](https://github.com/facebook/react/commit/784ebd8fa )**: Experimental event API: rework the propagation system for event components (#15462) //<Dominic Gannaway>///- **[587676900](https://github.com/facebook/react/commit/587676900 )**: React events: initial implementation of disabled prop (#15458) //<Nicolas Gallagher>///- **[59c7aef91](https://github.com/facebook/react/commit/59c7aef91 )**: React events: add a test for focusable descendants (#15457) //<Nicolas Gallagher>///- **[0a8da3391](https://github.com/facebook/react/commit/0a8da3391 )**: React events: README update types and remove stopPropagation prop (#15456) //<Nicolas Gallagher>///- **[d584fcdc6](https://github.com/facebook/react/commit/d584fcdc6 )**: React events: use passive events where possible (#15454) //<Nicolas Gallagher>///- **[051513bfa](https://github.com/facebook/react/commit/051513bfa )**: React Events: consolidate logic for Press event component (#15451) //<Nicolas Gallagher>///- **[cdfce1ad2](https://github.com/facebook/react/commit/cdfce1ad2 )**: React events: consolidate logic of Hover event component (#15450) //<Nicolas Gallagher>///- **[5857c89da](https://github.com/facebook/react/commit/5857c89da )**: React events: extract common helper functions (#15449) //<Nicolas Gallagher>///- **[0b50fb29f](https://github.com/facebook/react/commit/0b50fb29f )**: Include rootEventTypes in DOMEventResponderSystem stopPropagation tests (#15433) //<Nicolas Gallagher>///- **[1ae409d2c](https://github.com/facebook/react/commit/1ae409d2c )**: React events: fix nested Hover components error (#15428) //<Nicolas Gallagher>///- **[c73ab39c1](https://github.com/facebook/react/commit/c73ab39c1 )**: React events: make nested Focus work as expected (#15421) //<Nicolas Gallagher>///- **[4221565e1](https://github.com/facebook/react/commit/4221565e1 )**: Cancel pending commit before starting on root //<Andrew Clark>///- **[9ebe1768a](https://github.com/facebook/react/commit/9ebe1768a )**: Experimental Event API: Redesign event responder propagation (#15408) //<Dominic Gannaway>///- **[a30e7d992](https://github.com/facebook/react/commit/a30e7d992 )**: act() tests - Reuse and properly unmount containers (#14974) //<Philipp Spiess>///- **[8cf963c6c](https://github.com/facebook/react/commit/8cf963c6c )**: React events: ignore device buttons that aren't for primary interactions (#15402) //<Nicolas Gallagher>///- **[38bd570d4](https://github.com/facebook/react/commit/38bd570d4 )**: Stop tracking bundle sizes (#15404) //<Andrew Clark>///- **[3438e5ce8](https://github.com/facebook/react/commit/3438e5ce8 )**: Experimental Event API: Add Hover onUnmount support (#15394) //<Dominic Gannaway>///- **[805e7f873](https://github.com/facebook/react/commit/805e7f873 )**: React events: add unmounting to Focus (#15396) //<Nicolas Gallagher>///- **[543353a04](https://github.com/facebook/react/commit/543353a04 )**: Experimental Event API: Remove ""listener"" from event objects (#15391) //<Dominic Gannaway>///- **[9055e31e5](https://github.com/facebook/react/commit/9055e31e5 )**: Replace old Fiber Scheduler with new one (#15387) //<Andrew Clark>///- **[4e59d4f5d](https://github.com/facebook/react/commit/4e59d4f5d )**: React events: add onHoverMove support (#15388) //<Nicolas Gallagher>///- **[de7590327](https://github.com/facebook/react/commit/de7590327 )**: Fix CI (#15393) //<Andrew Clark>///- **[687e4fb6f](https://github.com/facebook/react/commit/687e4fb6f )**: Bump scheduler version to 0.14.0 //<Andrew Clark>///- **[45473c94c](https://github.com/facebook/react/commit/45473c94c )**: React events: Press event fixes (#15386) //<Nicolas Gallagher>///- **[9672cf621](https://github.com/facebook/react/commit/9672cf621 )**: Experimental Event API: adds `stopPropagation` by default to Press (#15384) //<Dominic Gannaway>///- **[a9eff329c](https://github.com/facebook/react/commit/a9eff329c )**: Remove TouchHitTarget SSR logic to prevent issues with mouse events (#15381) //<Dominic Gannaway>///- **[c9841001b](https://github.com/facebook/react/commit/c9841001b )**: Experimental Event API: preventDefault handling for anchors (#15383) //<Dominic Gannaway>///- **[c25c59c80](https://github.com/facebook/react/commit/c25c59c80 )**: Apply the Just Noticeable Difference to suspense timeouts (#15367) //<Sebastian Markbåge>///- **[3e2e930d6](https://github.com/facebook/react/commit/3e2e930d6 )**: Fixes a Flow type merge conflict (#15378) //<Dominic Gannaway>///- **[7fc91f17c](https://github.com/facebook/react/commit/7fc91f17c )**: React events: add onPressMove and pressRetentionOffset to Press (#15374) //<Nicolas Gallagher>///- **[dd9cef9fc](https://github.com/facebook/react/commit/dd9cef9fc )**: Experimental Event API: Add targets and responder utility method for finding targets (#15372) //<Dominic Gannaway>///- **[c64b33003](https://github.com/facebook/react/commit/c64b33003 )**: Move EventTypes to ReactTypes (#15364) //<Dominic Gannaway>///- **[4c78ac0b9](https://github.com/facebook/react/commit/4c78ac0b9 )**: Track Event Time as the Start Time for Suspense (#15358) //<Sebastian Markbåge>///- **[875d05d55](https://github.com/facebook/react/commit/875d05d55 )**: Include full error messages in React Native build (#15363) //<Andrew Clark>///- **[1b2159acc](https://github.com/facebook/react/commit/1b2159acc )**: [React Native] measure calls will now call FabricUIManager (#15324) //<Eli White>///- **[c7a959982](https://github.com/facebook/react/commit/c7a959982 )**: [React Native] Add tests to paper renderer for measure, measureLayout (#15323) //<Eli White>///- **[aece8119c](https://github.com/facebook/react/commit/aece8119c )**: Refactor EventComponent logic + add onOwnershipChange callback (#15354) //<Dominic Gannaway>///- **[183d1f42e](https://github.com/facebook/react/commit/183d1f42e )**: Fix: Measure expiration times relative to module initialization (#15357) //<Andrew Clark>///- **[b4bc33a58](https://github.com/facebook/react/commit/b4bc33a58 )**: Fix areHookInputsEqual method  warning params order (#15345) //<砖家>///- **[29fb5862f](https://github.com/facebook/react/commit/29fb5862f )**: Move EventComponent state creation to complete phase + tests (#15352) //<Dominic Gannaway>///- **[745baf2e0](https://github.com/facebook/react/commit/745baf2e0 )**: Provide new jsx transform target for reactjs/rfcs#107 (#15141) //<Ricky Vetter>///- **[81a61b1d1](https://github.com/facebook/react/commit/81a61b1d1 )**: React events: add delay props to Press module (#15340) //<Nicolas Gallagher>///- **[4064ea9fa](https://github.com/facebook/react/commit/4064ea9fa )**: Experimental event API: Support EventComponent onUnmount responder callback (#15335) //<Dominic Gannaway>///- **[4fbbae8af](https://github.com/facebook/react/commit/4fbbae8af )**: Add full TouchHitTarget hit slop (experimental event API) to ReactDOM (#15308) //<Dominic Gannaway>///- **[958b6173f](https://github.com/facebook/react/commit/958b6173f )**: Add delay props to Hover event module (#15325) //<Nicolas Gallagher>///- **[c3cc936da](https://github.com/facebook/react/commit/c3cc936da )**: Add Hover,Focus,Press docs to REAMDE (#15328) //<Nicolas Gallagher>///- **[49595e921](https://github.com/facebook/react/commit/49595e921 )**: [New Scheduler] Fix: Suspending an expired update (#15326) //<Andrew Clark>///- **[b93a8a9bb](https://github.com/facebook/react/commit/b93a8a9bb )**: Experimental event API: refactor responder modules for lifecycle inclusion (#15322) //<Dominic Gannaway>///- **[937d262f5](https://github.com/facebook/react/commit/937d262f5 )**: React events: keyboard press, types, tests (#15314) //<Nicolas Gallagher>///- **[7a2dc4853](https://github.com/facebook/react/commit/7a2dc4853 )**: Allow DevTools to toggle Suspense fallbacks (#15232) //<Dan Abramov>///- **[43b1f74c8](https://github.com/facebook/react/commit/43b1f74c8 )**: Alternate fix for #14198 //<Andrew Clark>///- **[41aa345d2](https://github.com/facebook/react/commit/41aa345d2 )**: Fix a crash in Suspense with findDOMNode //<Dan Abramov>///- **[6d0effad7](https://github.com/facebook/react/commit/6d0effad7 )**: Expose extra internals in FB build of react-dom/unstable-new-scheduler (#15311) //<Andrew Clark>///- **[3a44ccefe](https://github.com/facebook/react/commit/3a44ccefe )**: Fix feature flags react-dom/unstable-new-scheduler (#15309) //<Andrew Clark>///- **[92a1d8fea](https://github.com/facebook/react/commit/92a1d8fea )**: mark react-events as private so we publish script skips it for now (#15307) //<Sunil Pai>///- **[e5c59359c](https://github.com/facebook/react/commit/e5c59359c )**: Prevent bundling of Node polyfills when importing TestUtils/TestRenderer (#15305) //<Dan Abramov>///- **[73187239a](https://github.com/facebook/react/commit/73187239a )**: writing unit tests in experimental event Drag API (#15297) //<Behzad Abbasi>///- **[89064fe68](https://github.com/facebook/react/commit/89064fe68 )**: Adds displayName to EventComponent and EventTarget (#15268) //<Dominic Gannaway>///- **[fc6a9f1a1](https://github.com/facebook/react/commit/fc6a9f1a1 )**: Add test for async event dispatching (#15300) //<Nicolas Gallagher>///- **[38fa84088](https://github.com/facebook/react/commit/38fa84088 )**: Experiemental event API - wrap async dispatched events (#15299) //<Dominic Gannaway>///- **[4d5cb64aa](https://github.com/facebook/react/commit/4d5cb64aa )**: Rewrite ReactFiberScheduler for better integration with Scheduler package (#15151) //<Andrew Clark>///- **[aed0e1c30](https://github.com/facebook/react/commit/aed0e1c30 )**: await act(async () => ...) (#14853) //<Sunil Pai>///- **[4c75881ee](https://github.com/facebook/react/commit/4c75881ee )**: Remove maxDuration from tests (#15272) //<Sebastian Markbåge>///- **[9307932fe](https://github.com/facebook/react/commit/9307932fe )**: Refactor event object creation for the experimental event API (#15295) //<Dominic Gannaway>///- **[6a1e6b2f7](https://github.com/facebook/react/commit/6a1e6b2f7 )**: Experimental event API: loosen EventTarget constraints and warnings (#15292) //<Dominic Gannaway>///- **[f243deab8](https://github.com/facebook/react/commit/f243deab8 )**: Add tests for Press responder event module (#15290) //<Nicolas Gallagher>///- **[296c4393d](https://github.com/facebook/react/commit/296c4393d )**: Add Press event prop types and fix a check in Safari (#15288) //<Nicolas Gallagher>///- **[4482fdded](https://github.com/facebook/react/commit/4482fdded )**: Fix host context issues around EventComponents and EventTargets (#15284) //<Dominic Gannaway>///- **[5ef0d1d29](https://github.com/facebook/react/commit/5ef0d1d29 )**: Rename hover props in experimental event API and write unit tests (#15283) //<Behzad Abbasi>///- **[9444a5472](https://github.com/facebook/react/commit/9444a5472 )**: Warn on nested EventTragets in experimental event API (#15287) //<Dominic Gannaway>///- **[7f1f5ddc3](https://github.com/facebook/react/commit/7f1f5ddc3 )**: Rename press props in experimental event API (#15263) //<Nicolas Gallagher>///- **[2e02469fa](https://github.com/facebook/react/commit/2e02469fa )**: ReactNative's ref.measureLayout now takes a ref (#15126) //<Eli White>///- **[1b94fd215](https://github.com/facebook/react/commit/1b94fd215 )**: Make setNativeProps a no-op with Fabric renderer (#15094) //<Eli White>///- **[08055a625](https://github.com/facebook/react/commit/08055a625 )**: Fix Press module in experimental event API (#15262) //<Nicolas Gallagher>///- **[f4625f518](https://github.com/facebook/react/commit/f4625f518 )**: Fix on(Long)PressChange events in experimental press event API (#15256) //<Nicolas Gallagher>///- **[a41b21770](https://github.com/facebook/react/commit/a41b21770 )**: Add additional event API responder surfaces (#15248) //<Dominic Gannaway>///- **[700f17be6](https://github.com/facebook/react/commit/700f17be6 )**: Fix longpress in experimental Press event module (#15246) //<Nicolas Gallagher>///- **[5d336df70](https://github.com/facebook/react/commit/5d336df70 )**: Allow for null targetFiber for root event handling (#15247) //<Dominic Gannaway>///- **[c6f3524df](https://github.com/facebook/react/commit/c6f3524df )**: Adds React event component and React event target support to SSR renderer (#15242) //<Dominic Gannaway>///- **[c7a2dce50](https://github.com/facebook/react/commit/c7a2dce50 )**: Disable JS urls at build level for www (#15230) //<Sebastian Markbåge>///- **[fb6b50871](https://github.com/facebook/react/commit/fb6b50871 )**: Update versions for 16.8.6 //<Dan Abramov>///- **[1cfd25668](https://github.com/facebook/react/commit/1cfd25668 )**: Fix circular module imports causing file size increase (#15231) //<Dominic Gannaway>///- **[669cafb36](https://github.com/facebook/react/commit/669cafb36 )**: Adds experimental event component responder surfaces (#15228) //<Dominic Gannaway>///- **[d8cb10f11](https://github.com/facebook/react/commit/d8cb10f11 )**: Enabled warnAboutDeprecatedLifecycles flag by default (#15186) //<Brian Vaughn>///- **[80f8b0d51](https://github.com/facebook/react/commit/80f8b0d51 )**: Add part of the event responder system for experimental event API (#15179) //<Dominic Gannaway>///- **[5c2b2c085](https://github.com/facebook/react/commit/5c2b2c085 )**: Warn about async infinite useEffect loop (#15180) //<Dan Abramov>///- **[8e9a013c0](https://github.com/facebook/react/commit/8e9a013c0 )**: Release 16.8.5 //<Dan Abramov>///- **[f33e5790b](https://github.com/facebook/react/commit/f33e5790b )**: eslint-plugin-react-hooks@1.6.0 //<Dan Abramov>///- **[b1cccd1ed](https://github.com/facebook/react/commit/b1cccd1ed )**: Warn about setState directly in dep-less useEffect (#15184) //<Dan Abramov>///- **[78f2775ed](https://github.com/facebook/react/commit/78f2775ed )**: Flip event passive logic on passiveBrowserEventsSupported (#15190) //<Dominic Gannaway>///- **[f161ee2eb](https://github.com/facebook/react/commit/f161ee2eb )**: React.warn() and React.error() (#15170) //<Brian Vaughn>///- **[78968bb3d](https://github.com/facebook/react/commit/78968bb3d )**: Validate useEffect without deps too (#15183) //<Dan Abramov>///- **[4b8e1641b](https://github.com/facebook/react/commit/4b8e1641b )**: Fork performWork instead of using boolean flag (#15169) //<Sebastian Markbåge>///- **[56035dac6](https://github.com/facebook/react/commit/56035dac6 )**: unstable_Profiler -> Profiler (#15172) //<Brian Vaughn>///- **[31518135c](https://github.com/facebook/react/commit/31518135c )**: Strengthen nested update counter test coverage (#15166) //<Dan Abramov>///- **[66f280c87](https://github.com/facebook/react/commit/66f280c87 )**: Add internal logic for listening to event responders (#15168) //<Dominic Gannaway>///- **[b1a56abd6](https://github.com/facebook/react/commit/b1a56abd6 )**: Fork ReactFiberScheduler with feature flag //<Andrew Clark>///- **[45f571736](https://github.com/facebook/react/commit/45f571736 )**: ReactFiberScheduler -> ReactFiberScheduler.old //<Andrew Clark>///- **[c05b4b81f](https://github.com/facebook/react/commit/c05b4b81f )**: Link to useLayoutEffect gist in a warning (#15158) //<Dan Abramov>///- **[061d6ce3c](https://github.com/facebook/react/commit/061d6ce3c )**: fix(react-dom): access iframe contentWindow instead of contentDocument (#15099) //<Renan Valentin>///- **[b83e01cad](https://github.com/facebook/react/commit/b83e01cad )**: Adds more scaffolding for experimental event API (#15112) //<Dominic Gannaway>///- **[daeda44d8](https://github.com/facebook/react/commit/daeda44d8 )**: Follow up to 15150 (#15152) //<Dominic Gannaway>///- **[acd65db5b](https://github.com/facebook/react/commit/acd65db5b )**: Deprecate module pattern (factory) components (#15145) //<Sebastian Markbåge>///- **[55cc921c5](https://github.com/facebook/react/commit/55cc921c5 )**: Adds react-events package for internal testing (#15150) //<Dominic Gannaway>///- **[7ad738630](https://github.com/facebook/react/commit/7ad738630 )**: Improve warning for invalid class contextType (#15142) //<Dan Abramov>///- **[1e3364e76](https://github.com/facebook/react/commit/1e3364e76 )**: Test that we don't suspend when disabling yielding (#15143) //<Sebastian Markbåge>///- **[42c3c967d](https://github.com/facebook/react/commit/42c3c967d )**: Compile invariant directly to throw expressions (#15071) //<Andrew Clark>///- **[df7b87d25](https://github.com/facebook/react/commit/df7b87d25 )**: Warn for Context.Consumer with contextType (#14831) //<Brandon Dail>///- **[2b93d686e](https://github.com/facebook/react/commit/2b93d686e )**: Add more info to invalid hook call error message (#15139) //<Jared Palmer>///- **[d926936f0](https://github.com/facebook/react/commit/d926936f0 )**: Eager bailout optimization should always compare to latest reducer (#15124) //<Andrew Clark>///- **[4162f6026](https://github.com/facebook/react/commit/4162f6026 )**: Add feature flag to disable yielding (#15119) //<Sebastian Markbåge>///- **[8d60bd4dc](https://github.com/facebook/react/commit/8d60bd4dc )**: [Shallow] Implement setState for Hooks and remount on type change (#15120) //<Dan Abramov>///- **[035e4cffb](https://github.com/facebook/react/commit/035e4cffb )**: Change passive checker to use defineProperty (#15121) //<Dominic Gannaway>///- **[b283d75c1](https://github.com/facebook/react/commit/b283d75c1 )**: Support React.memo in ReactShallowRenderer (#14816) //<Brandon Dail>///- **[f0621fe23](https://github.com/facebook/react/commit/f0621fe23 )**: Use same example code for async effect warning (#15118) //<Dan Abramov>///- **[52c870c8d](https://github.com/facebook/react/commit/52c870c8d )**: Fix shallow renderer not allowing hooks in forwardRef render functions (#15100) //<Sebastian Silbermann>///- **[f1ff4348c](https://github.com/facebook/react/commit/f1ff4348c )**: Don't suggest a function as its own dep (#15115) //<Dan Abramov>///- **[371bbf36b](https://github.com/facebook/react/commit/371bbf36b )**: Add infrastructure for passive/non-passive event support for future API exploration (#15036) //<Dominic Gannaway>///- **[ab5fe174c](https://github.com/facebook/react/commit/ab5fe174c )**: Don't set the first option as selected in select tag with `size` attribute  (#14242) //<Mateusz>///- **[935f60083](https://github.com/facebook/react/commit/935f60083 )**: eslint-plugin-react-hooks@1.5.1 //<Dan Abramov>///- **[0c03a4743](https://github.com/facebook/react/commit/0c03a4743 )**: Adds experimental event API scaffolding (#15108) //<Dominic Gannaway>///- **[1204c7897](https://github.com/facebook/react/commit/1204c7897 )**: [eslint] Wording tweaks (#15078) //<Sophie Alpert>///- **[9d77a317b](https://github.com/facebook/react/commit/9d77a317b )**: Improve async useEffect warning (#15104) //<Dan Abramov>///- **[103378b1e](https://github.com/facebook/react/commit/103378b1e )**: Warn for javascript: URLs in DOM sinks (#15047) //<Sebastian Markbåge>///- **[5d0c3c6c7](https://github.com/facebook/react/commit/5d0c3c6c7 )**: [Partial Hydration] Render client-only content at normal priority (#15061) //<Sebastian Markbåge>///- **[6a4a261ee](https://github.com/facebook/react/commit/6a4a261ee )**: Test suspended children are hidden before layout in persistent mode (#15030) //<Andrew Clark>///- **[bc8bd24c1](https://github.com/facebook/react/commit/bc8bd24c1 )**: Run persistent mode tests in CI (#15029) //<Andrew Clark>///- **[3f4852fa5](https://github.com/facebook/react/commit/3f4852fa5 )**: Run Placeholder tests in persistent mode, too (#15013) //<Andrew Clark>///- **[d0289c7e3](https://github.com/facebook/react/commit/d0289c7e3 )**: eslint-plugin-react-hooks@1.5.0 //<Dan Abramov>///- **[03ad9c73e](https://github.com/facebook/react/commit/03ad9c73e )**: [ESLint] Tweak setState updater message and add useEffect(async) warning (#15055) //<Dan Abramov>///- **[eb6247a9a](https://github.com/facebook/react/commit/eb6247a9a )**: More concise messages (#15053) //<Dan Abramov>///- **[197703ecc](https://github.com/facebook/react/commit/197703ecc )**: [ESLint] Add more hints to lint messages (#15046) //<Dan Abramov>///- **[6d2666bab](https://github.com/facebook/react/commit/6d2666bab )**: Fix ESLint rule crash (#15044) //<Dan Abramov>///- **[9b7e1d138](https://github.com/facebook/react/commit/9b7e1d138 )**: [ESLint] Suggest moving inside a Hook or useCallback when bare function is a dependency (#15026) //<Dan Abramov>///- **[1e3b6192b](https://github.com/facebook/react/commit/1e3b6192b )**: Import Scheduler directly, not via host config (#14984) //<Andrew Clark>///- **[5d49dafac](https://github.com/facebook/react/commit/5d49dafac )**: Enforce deps array in useMemo and useCallback (#15025) //<Dan Abramov>///- **[a9aa24ed8](https://github.com/facebook/react/commit/a9aa24ed8 )**: 16.8.4 and changelog //<Brian Vaughn>///- **[fa5d4ee43](https://github.com/facebook/react/commit/fa5d4ee43 )**: [ESLint] Treat functions that don't capture anything as static (#14996) //<Dan Abramov>///- **[fd557d453](https://github.com/facebook/react/commit/fd557d453 )**: Warn on mount when deps are not an array (#15018) //<Dan Abramov>///- **[ce45ca9ba](https://github.com/facebook/react/commit/ce45ca9ba )**: Prettier //<Andrew Clark>///- **[757a70b25](https://github.com/facebook/react/commit/757a70b25 )**: ReactNoop.yield -> Scheduler.yieldValue (#15008) //<Andrew Clark>///- **[9d756d903](https://github.com/facebook/react/commit/9d756d903 )**: Revert #14756 changes to ReactFiberScheduler (#14992) //<Andrew Clark>///- **[f16442a10](https://github.com/facebook/react/commit/f16442a10 )**: eslint-plugin-react-hooks@1.4.0 //<Dan Abramov>///- **[e1e45fb36](https://github.com/facebook/react/commit/e1e45fb36 )**: [ESLint] Suggest to destructure props when they are only used as members (#14993) //<Dan Abramov>///- **[59ef28437](https://github.com/facebook/react/commit/59ef28437 )**: Warn about dependencies outside of render scope (#14990) //<Dan Abramov>///- **[df7b4768c](https://github.com/facebook/react/commit/df7b4768c )**: [ESLint] Deduplicate suggested dependencies (#14982) //<Dan Abramov>///- **[02404d793](https://github.com/facebook/react/commit/02404d793 )**: Avoid dynamic dispatch for scheduler calls (#14968) //<Dan Abramov>///- **[bb2939ccc](https://github.com/facebook/react/commit/bb2939ccc )**: Support editable useState hooks in DevTools (#14906) //<Brian Vaughn>///- **[69060e1da](https://github.com/facebook/react/commit/69060e1da )**: Swap expect(ReactNoop) for expect(Scheduler) (#14971) //<Andrew Clark>///- **[ccb2a8a44](https://github.com/facebook/react/commit/ccb2a8a44 )**: Replace test renderer's fake Scheduler implementation with mock build (#14970) //<Andrew Clark>///- **[53e787b45](https://github.com/facebook/react/commit/53e787b45 )**: Replace noop's fake Scheduler implementation with mock Scheduler build (#14969) //<Andrew Clark>///- **[3ada82b74](https://github.com/facebook/react/commit/3ada82b74 )**: Allow extraneous effect dependencies (#14967) //<Dan Abramov>///- **[00748c53e](https://github.com/facebook/react/commit/00748c53e )**: Add new mock build of Scheduler with flush, yield API (#14964) //<Andrew Clark>///- **[4186952a6](https://github.com/facebook/react/commit/4186952a6 )**: Fixed incompatibility between react-debug-tools and useContext() (#14940) //<Brian Vaughn>///- **[0b8efb229](https://github.com/facebook/react/commit/0b8efb229 )**: Allow omitting constant primitive deps (#14959) //<Dan Abramov>////Changelog:/[General][Changed] - React sync for revisions 8e25ed2...ec6691a//Follow steps in the [React Native test plan](https://our.intern.facebook.com/intern/dex/react/test-workflows-react-native/).//Reviewed By: shergin//Differential Revision: D15171103//fbshipit-source-id: d16b54dfd575b3a1fa38e6a132633f42c715b4fd",https://github.com/facebook/react-native/commit/ee681b72ce89539e5764ed59e5dfea4fab04d48c,29028775,facebook/react-native,False,False
7,328b6c0b19fe08557cf410a2023e100a4599e3a4,"WL#5596 MTS//Here is the total cset combining all revisions done since Sep 2010./Comments from the original commits are pasted in reverse chronological order.//   ------------------------------------------------------------/   revno: 3364/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 17:09:22 +0300/   message:/   wl#5569 MTS//   Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained/   one binlog more than expected.//   @ mysql-test/suite/rpl/r/rpl_rotate_logs.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_rotate_logs.test/   Refining a method of verification of the binlog rotation due to its max size:/   we check if the first log has been rotated by comparing its name before and after/   feeding load to the master./   Notice, that as the former so the new current proof methods are not perfect/   as that part of the test really needs to demostrate every binlog file is less than/   @@max_binlog_size./   ------------------------------------------------------------/   revno: 3363/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 14:56:01 +0300/   message:/   updating result files that were left incorrect by the last merge./   ------------------------------------------------------------/   revno: 3362/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 14:44:59 +0300/   message:/   wl#5569 MTS//   Failure in recovery when binlog-checksum is active./   The reason of the failure was in that parsing of relay log /   by MTS recovery gaps computing/   did not make sure to use the relay-log own FormatDescriptor events that/   contain checksumming info for all events in the log.//   Fixed with taking care to find out the checksum algorithm for every relay log as the first step of/   MTS recovery gaps computing.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-master.opt/   forcing master to checksum.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-slave.opt/   forcing slave to *not* checksum.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum.test/   same as rpl_mixed_mts_rec_crash_safe but to run in master with checksum and slave without own checksum./   The test verifies that checksum does not affect recovery. Lack of own checksumming on slave/   allows to test more scenarios.//   @ sql/rpl_slave.cc/   Search for the checksum algorithm FD is added. /   Notice that the first three events to read is enough to /   find out the master side checksum alg./   ------------------------------------------------------------/   revno: 3361/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-08-17 11:21:23 +0300/   message:/   merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk./   ------------------------------------------------------------/   revno: 3360/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-27 08:56:14 +0100/   message:/   Fixed failure in test rpl_mts_check_concurrency when running in/   the mts collection./   ------------------------------------------------------------/   revno: 3359/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-26 19:46:41 +0100/   message:/   Added a test case that checks if MTS allows to concurrently access the replication/   tables, and as such, concurrently commit transactions that update different/   databases./   ------------------------------------------------------------/   revno: 3358/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 20:08:43 +0100/   message:/   Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid/   cluttering the error log with messages on unsafe execution. /   ------------------------------------------------------------/   revno: 3357/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 19:02:14 +0100/   message:/   This patch contains the following fixes://   . Removed suppressed warning introduced in the wrong test/   case (i.e. rpl_corruption) and put it in the correct one/   (i.e. rpl_row_corruption).//   . Introduced variable to avoid clutering the error log/   with several warning messages on unsafe execution./   ------------------------------------------------------------/   revno: 3356/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 11:01:12 +0100/   message:/   This patch has the following changes://   . Specific directories were created for the MTS runs in the default.push./   . Warning message was suppressed in the rpl_corruption.test./   . Annoying debug outputs were removed from the error log. However, this/   is a temporary solution as it forbids to enable traces./   ------------------------------------------------------------/   revno: 3355/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-20 11:56:40 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3354/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-19 22:26:30 +0300/   message:/   wl#5569 MTS//   valgrind reported a stack on rpl_savepoint./   The problem appears to be in that at computing slave_sql_running_state in show_mater_info()/   the sql thread proc_info pointer could refer to a value in a stack that has already gone.//   Fixed with making proc_info to point to a string literal./   ------------------------------------------------------------/   revno: 3353/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-19 17:46:43 +0100/   message:/   Suppressed warning messages that could potentially cause problems while/   running mts crash safe test cases./   ------------------------------------------------------------/   revno: 3352/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-18 21:46:45 +0300/   message:/   wl#5569 MTS//   Cosmetic changes are done to address readability and clearness of source code of the MTS patch.//   @ sql/binlog.cc/   Comments improved.//   @ sql/log_event.cc/   Warning text is improved.//   @ sql/log_event.h/   More comments are added.//   @ sql/rpl_rli.h/   More comments are added.//   @ sql/rpl_slave.cc/   Error constant was changed.//   @ sql/share/errmsg-utf8.txt/   Error constant is changed./   ------------------------------------------------------------/   revno: 3351/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-18 14:52:44 +0300/   message:/   wl#5569 MTS//   Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe./   ------------------------------------------------------------/   revno: 3350/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-17 00:51:45 +0300/   message:/   wl#5569 MTS//   fixing build issue for embedded./   Public visibility for Rows_log_event::do_apply_event() is restored./   ------------------------------------------------------------/   revno: 3349/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-16 20:08:31 +0300/   message:/   wl#5569 MTS//   The patch contains improvements after code review./   Changes are mostly consmetic.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   results updated.//   @ sql/binlog.cc/   correcting comments.//   @ sql/field.cc/   renaming.//   @ sql/log_event.cc/   renaming and separating out a block of code in Log_event::get_slave_worker()/   into a new method of Slave_job_group class;/   some cleanup.//   @ sql/log_event.h/   Extending and improving comments;/   renaming to follow is_, get_, set_ pattern;/   restoring the private access to do_apply_event() in Rows_log_event.//   @ sql/mysqld.cc/   removing extra declaration.//   @ sql/rpl_info_factory.cc/   Minor comments is added.//   @ sql/rpl_rli.cc/   renaming to make _cnt suffix to all entities that have counter meaning in mts;/   improving comments.//   @ sql/rpl_rli.h/   Renaming, and improving comments for the new members to Relay_log_info.//   @ sql/rpl_rli_pdb.cc/   remaning.//   @ sql/rpl_rli_pdb.h/   Improving comments readability through adding legengs/   defining MTS specific abbreviations.//   @ sql/rpl_slave.cc/   Renaming;/   minor cleanup in sql_slave_killed();/   adding comments on Seconds_behind_master update policy with MTS.//   @ sql/share/errmsg-utf8.txt/   Improving text of few errors./   ------------------------------------------------------------/   revno: 3348/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-16 02:11:11 +0300/   message:/   bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP//   MTS stopped with an error in the middle of the test./   The reason is that a group of events from the slave itself was processed partly to /   modify the group position. In the following restart the wrong group bondary made slave/   either to error out or assert.//   Fixed with locating a possible race condition allowin Coordinator to ignore/   actual failed status of a Worker./   So in the case of the test, the slave server group can't be started./   Notice, this is a trial patch since I can't catch the failure on available to me hosts at all.//   @ sql/rpl_rli_pdb.cc/   Changing the running status of the Worker before it releases assigned entries./   That ensure that the waiting in wait_for_workers_to_finish() Coordinator exits the function/   with a negative result and therefore stops without attempting to apply an event/   due to which it attempted synchronization./   Couple of diagnostics into error log are added. They may be removed in short while but/   currently might be helpful to provide details if the failure won't disappear after this push./   ------------------------------------------------------------/   revno: 3347/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-07-14 12:40:06 +0300/   message:/   WL#5569 MTS//   further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 /   revealed a race condition in that Coordinator might miss to catch not-running status/   for a Worker. That made Coordinator to skip only a part of a group of the slave server own events/   so the slave stops at not the bondary of a group.//   Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release.//   TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE/   if one is run at time of skipping self-originated events./   However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160.//   @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result/   results are updated.//   @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test/   tests is updated with a new text of a suppression.//   @ sql/log_event.cc/   Adding clarifying text to an error message when parallel execution fails.//   @ sql/rpl_rli_pdb.cc/   Moving marking of the errored-out Worker as failed prior to its APH entries release./   That ensures Coordinator always finds the non-running status in a case it has to/   know that (wait_for_workers_to_finish()).//   @ sql/share/errmsg-utf8.txt/   Adding a format specifier for a clarifying text./   ------------------------------------------------------------/   revno: 3346/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-07-14 08:03:55 +0100/   message:/   Post-push fixes for WL#5569//   Injecting faults while updating a myisam table requires to flush the/   changes before committing suicide. So we have introduced the follwing/   code://   DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"",/   -                       DBUG_SUICIDE(););/   +           sql_print_information(""Crashing crash_after_commit_and_update_pos."");/   +           flush_info(TRUE);/   +           DBUG_SUICIDE();//   Besides we improved some comments./   ------------------------------------------------------------/   revno: 3345/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-13 16:23:57 +0100/   message:/   WL#5569//   @ mysql-test/extra/rpl_tests/rpl_mts_crash_safe.inc/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/include/not_slave_worker_info_table.inc/   Removed this feature as option --slave-worker-info-repository was removed too.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mixed_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/sys_vars/t/slave_worker_info_repository_basic.test/   Removed this test case as option --slave-worker-info-repository was removed too.//   @ sql/binlog.cc/   Improved code as requested by reviewers.//   @ sql/lock.cc/   Removed mistake that got into sql/lock.cc after merging with trunk.//   @ sql/log_event.cc/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_info.h/   Updated doxygen comments and removed a change to avoid conflicts when merging with trunk.//   @ sql/rpl_info_factory.h/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ sql/rpl_rli.cc/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_rli_pdb.cc/   Improved the code and introduced parameter force in commit_positions/   function to determine if flush must be executed regardless of sync options.//   @ sql/rpl_rli_pdb.h/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_slave.cc/   Removed duplicated code.//   @ sql/sql_parse.cc/   Reintroduced flag removed by mistake when merging with trunk./   See also sql/lock.cc.//   @ sql/sys_vars.cc/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository./   ------------------------------------------------------------/   revno: 3344/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-13 00:10:43 +0300/   message:/   wl#5569 MTS//   merge trunk -> wl5569-tree/   ------------------------------------------------------------/   revno: 3343/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-12 23:36:17 +0300/   message:/   wl#5569 MTS//   adding suppression due to expected warning to rpl_circurlar_for_4_hosts;/   decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format./   ------------------------------------------------------------/   revno: 3342/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-12 14:46:23 +0300/   message:/   WL#5569 MTS///   Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like/   http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382.//   The reason of the mismatch was that when having two group of events to execute,/   the first for a Worker and the 2nd for Coordinator, Coordinator waited for/   the 1st group completion but did not verify success of synchronization./   So in a case of the failed applying of the 1st group processing of the 2nd /   could find an inconsistent state to end up with a segfault (even though only/   the mismatch has been seen so far).//   @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result/   results are updated.//   @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test/   Test is updated to include a part specific to MTS./   While all former conditions hold, the new section makes sure B server/   has two group of events to send which was not previously guaraneed nor necessary./   Further, when the first of the two fails with Duplicate entry at applying of the 2nd Coordinator/   senses the first failure and gives out the 2nd./   The first error remains to be seen in show-slave-status.//   @ sql/log_event.cc/   Checking wait_for_workers_to_finish() return code in case Coordinator executes a sequential-mode event./   Comments are deployed in few other places where that is unnecessary to do.//   @ sql/rpl_rli_pdb.cc/   Worker marks itself as failed to apply which fact is reported to Coordinator/   also through wait_for_workers_to_finish()./   Coodinator shall check the error code in a branch of a sequential event applying.//   @ sql/rpl_rli_pdb.h/   Adding a new state that Worker sets itself to indiate its failure to apply.//   @ sql/rpl_slave.cc/   Refining an assert as consequence of the new state and its actual setting by Worker./   ------------------------------------------------------------/   revno: 3341/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-10 22:40:01 +0100/   message:/   Avoiding busy waiting when running mts recovery tests./   ------------------------------------------------------------/   revno: 3340/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-09 23:11:58 +0100/   message:/   Removed --slave-checkpoint-period from MTS test cases./   ------------------------------------------------------------/   revno: 3339/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-09 23:08:07 +0100/   message:/   Improved test cases for the WL#5569./   ------------------------------------------------------------/   revno: 3338/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 22:40:52 +0300/   message:/   wl#5569 MTS//   The patch /   refines logics of applying phase of MTS-recovery to always applying events/   that are for Coordinator;/   fixes few tests to make them passable on PB;/   makes GAQ size to be of checkpoint_group value.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test/   attempting to decrease execution time that currently might be too much for some PB hosts.//   @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt/   Making the test to run in parallel mode with Workers having the table as their info storage.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result/   results updated.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test/   masking out the actual value of slave_checkpoint_period.//   @ sql/log_event.cc/   Never skip events that are for Coordinator as indicated by mts_execution_mode().//   @ sql/rpl_rli.h/   Improving comments.//   @ sql/rpl_slave.cc/   Simplifying while condition of the GAQ-progress loop and deploying an/   assert ensuring checkpoint_group parameter and GAQ state are combined correctly./   ------------------------------------------------------------/   revno: 3337/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 07:54:34 +0100/   message:/   Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30./   ------------------------------------------------------------/   revno: 3336/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 07:44:35 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3335/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-06 12:46:05 +0300/   message:/   wl#5569 MTS//   refining wait for db-hash entry release at event distribution./   The graceful STOP is not accepted at this point so Coordinator continues to/   stay in a loop./   ------------------------------------------------------------/   revno: 3334/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-05 20:43:04 +0300/   message:/   bug#12719875 possible MTS recovery issue.//   MTS stopped with an error after failing to apply an event./   It turned out that the event was sceduled incorrectly due to/   earlier stop by Single-Threaded Slave not at the group boundary/   but rather in the middle of it.//   Fixed with forcing CREATE..SELECT be logged as two groups./   The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces.//   @ mysql-test/suite/rpl/r/rpl_parallel_switch_sequential.result/   new results file is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential-slave.opt/   transaction retry is not supported yet by MTS.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test/   Regression test for bug#12719875 is added./   Notice, created tables engine is Innodb also because with MyISAM stop-slave can be actually/   in the middle a group of myisam table events so the following restart fails with a dup key error./   CREATE-SELECT is not tested according to another bug as commented.//   @ sql/log_event.cc/   changing error report style to be actually effective: rli->report() does not make rli->info_thd to return/   from is_error() true./   my_error() message eventually gets to the show-slave-status sql-error at the end of slave sql thread.//   @ sql/rpl_slave.cc/   fixing a possible hanging that can happen due to errored-out worker at time of gaq is full and/   the worker was the first to update it;/   refining  asserts;/   shifting stop_workers() routine to a point where slave sql has not reset its errors which pleases/   a refined assert in slave_stop_workers(rli). /   ------------------------------------------------------------/   revno: 3333/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-04 18:14:09 +0300/   message:/   wl#5569 MTS//   Adding a rule to run PB with all suites in MTS with binlog-format ROW.//   @ .bzr-mysql/default.conf/   restoring commits@.//   @ mysql-test/collections/default.push/   adding a rule to run all suites in MTS with binlog-format ROW./   ------------------------------------------------------------/   revno: 3332/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-03 23:29:34 +0300/   message:/   wl5569 MTS//   cleanup in one file.//   @ sql/rpl_rli.cc/   removing traces of a mutex that was served in prototyping support for temporary tables./   ------------------------------------------------------------/   revno: 3331/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-03 23:16:02 +0300/   message:/   wl5569 MTS//   bzr commit mail address changed;/   a minor cleanup to make mts_is_worker() with const argument;/   releasing a test to run in MTS./   ------------------------------------------------------------/   revno: 3330/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-02 08:58:56 +0100/   message:/   Fixed use of the performance schema in the replication code and concurrency issue/   in the IO Thread.//   In particular, the IO Thread was calling flush_master_info without grabbing locks./   ------------------------------------------------------------/   revno: 3329/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 16:41:35 +0300/   message:/   wl5569 MTS//   merging from the main repo./   ------------------------------------------------------------/   revno: 3328/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 15:48:25 +0300/   message:/   wl#5569 MTS//   the final cleanup patch./   There are few glitches that were considered as tolerable at least for time/   of the total wl's code is being reviewed.//   That includes: //   - no support to old load-data events/   - no support for FK//   to add to the list, there are few places in the patch that suggests to deploy/   error branches each time flush_info() is called.//   @ sql/log_event.h/   cleanup.//   @ sql/rpl_reporting.cc/   introducing a new public method in order to be callable from Slave_worker executed code.//   @ sql/rpl_reporting.h/   the earlier do_report is renamed and /   a new do_report() is made a way to allow child classes to redefine its own way./   The child class is suppose to call child->report() and to have child::do_report() 's/   designed behaviour.//   @ sql/rpl_rli_pdb.cc/   addressing an OOM issue at delete of curr_group_exec_parts.//   @ sql/rpl_rli_pdb.h/   deploying do_`method' pattern.//   @ sql/rpl_slave.cc/   cleanup./   ------------------------------------------------------------/   revno: 3327/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 13:16:52 +0300/   message:/   wl#5569 MTS//   The patch cleans up some host of code.//   @ sql/log_event.cc/   cleanup, comments improved, logics of decision in Log_event::apply_event on mts execution mode/   is simplified./   Moving flush_info() of Rotate_log_event::do_update_pos() into inc_group_relay_log_pos().//   @ sql/log_event.h/   cleanup and merging logics of former mts_async_exec_by_coordinator() with /   mts_sequential_exec() which is turned to be called from a new mts_execution_mode()./   Reducing visibility of mts members of Log_event hierarchy to match the needs.//   @ sql/rpl_rli.cc/   cleanup, renames and moving flush_info() inside inc_group_relay_log_pos().//   @ sql/rpl_rli.h/   Cleanup and comments improved.//   @ sql/rpl_rli_pdb.cc/   Cleanup; renames; comments; a new Slave_worker::init_worker() is defined to be called/   at starting the Worker pool per each worker. Its initialization instructions are migrated/   from from slave_start_single_worker().//   @ sql/rpl_rli_pdb.h/   Cleanup and comments improved.//   @ sql/rpl_slave.cc/   cleanup; replacing collection of initializations for a Worker in/   slave_start_single_worker() into a new Worker::init_worker().//   @ sql/sql_class.h/   cleanup./   ------------------------------------------------------------/   revno: 3326/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-28 11:30:18 +0300/   message:/   wl#5569 MTS//   replacing views with regular tables for consistency verification in rpl_parallel_innodb. /   Also a minor cleanup in rpl_parallel is done./   ------------------------------------------------------------/   revno: 3325/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-27 20:31:45 +0300/   message:/   wl#5569 MTS//   Cleanup and addressing sporadic rpl_temp_table_mix_row failure in /   post-execution mtr.check_testcase().//   The check of the test failure was caused by faulty optimization in/   avoiding to migrate temporary tables from Coordinator to Workers in/   case of rows-event assignement./   while it's correct with the homogenous rows-event only load, the mixture/   can fail./   Fixed with removing the optimization so map_db_to_worker() always/   relocates which is somewhat suboptimal and should be improved in future.//   @ mysql-test/suite/rpl/t/rpl_temp_table_mix_row.test/   Adding slave synchronization.//   @ sql/log_event.cc/   cleanup to move circular_buffer releated definitions into rpl_rli_pdb that is specialized/   on objects dealing with Worker, its assignement etc./   improving comments;/   also instead of former separate flag indicating a T-event requires post-scheduling synchronization/   with the Worker is turned into a bit of existing Log_event::flags which also avoids ungliness of/   #if/#endif:s.//   @ sql/log_event.h/   instead of former separate flag indicating a T-event requires post-scheduling synchronization/   with the Worker is turned into a bit of existing Log_event::flags;//   @ sql/rpl_rli.cc/   cleanup: renaming.//   @ sql/rpl_rli.h/   cleanup: renaming, more comments./   The former mts_wqs_overrun is converted into two: the statistics parameter mts_wq_overrun_cnt/   and the internal control parameter mts_wq_excess.//   @ sql/rpl_rli_pdb.cc/   Included rpl_slave.h that holds two necessary declarations;/   Cleanup: accepting circular_buffer related definitions migrated from log_event,/   improved comments, renaming, removing dead code//   @ sql/rpl_rli_pdb.h/   Cleanup: renaming and more comments are added.//   @ sql/rpl_slave.cc/   Augmenting print-out of statistics at the end of MTS session;/   cleanup: renaming.//   @ sql/rpl_slave.h/   Introducing two constants to define range of worker_id domain and/   a magic value of undefined worker.//   @ sql/sys_vars.cc/   replacing a literal int value with a symbilic constant./   ------------------------------------------------------------/   revno: 3324/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-27 13:12:52 +0100/   message:/   Ensured that updates to the worker_info_repository are transactional and fixed/   the slave_checkpoint_group_basic test case./   ------------------------------------------------------------/   revno: 3323/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-26 13:02:59 +0100/   message:/   Fixed test case./   ------------------------------------------------------------/   revno: 3322/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-06-25 15:14:24 +0100/   message:/   Introduced test case for recovery with MTS and fixed bugs in recovery./   ------------------------------------------------------------/   revno: 3321/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 15:38:19 +0300/   message:/   wl#5569 MTS//   This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items./   ------------------------------------------------------------/   revno: 3320/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 12:38:34 +0300/   message:/   wl#5569 MTS//   this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views./   ------------------------------------------------------------/   revno: 3319/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 00:11:22 +0300/   message:/   wl#5569 MTS//   this is an exploratory patch to sort out if verification method what was based/   on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment./   ------------------------------------------------------------/   revno: 3318/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-23 07:56:15 +0300/   message:/   wl#5569 MTS//   fixing results of mysqld--help-win./   ------------------------------------------------------------/   revno: 3317/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 19:20:40 +0100/   message:/   merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3316/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 19:17:43 +0100/   message:/   In some platforms, such as Windows, thread's wait time is stored/   in 100ns units. However, when computing the difference between/   two values, the result value was not multiplied by 100.//   Besides, there was a casting problem when the aforementioned/   result value was assigned to an ulong./   ------------------------------------------------------------/   revno: 3315/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 18:54:23 +0100/   message:/   Fixed how mts copes with recovery./   ------------------------------------------------------------/   revno: 3314/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-21 19:10:54 +0300/   message:/   wl#5569 MTS//   Fixing valgrind warnings.//   @ sql/log_event.cc/   w->running_status is verfied to find out the actually sought running/   status of a Worker./   THD can be unavainlable that's what a valgrind report was about.//   @ sql/rpl_rli_pdb.cc/   commenting out an assert that valgrind does not like.//   @ sql/rpl_rli_pdb.h/   new method is added to be invoked at MTS shutdown.//   @ sql/rpl_slave.cc/   Invoking gaq cleanup at the end of MTS session./   ------------------------------------------------------------/   revno: 3313/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-21 18:15:43 +0300/   message:/   wl#5569 MTS//   rpl_parallel_start_stop.test could fail sporadicaly with timeout.//   @ mysql-test/include/wait_for_slave_param.inc/   Correcting comments and handling of passed by caller $slave_timeout to make sure/   the unit of 1 second really holds./   Introduced symbolic default_timeout, sleep_freq(uency) to procude time to sleep in between of/   two polls.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   Since the default time to wait is less than one for innodb's wait for lock,/   the time to wait for error is set explicitly./   ------------------------------------------------------------/   revno: 3312/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 23:21:56 +0100/   message:/   merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3311/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 23:19:06 +0100/   message:/   Fixed error when computing the Lower-Water-Mark.//   If two or more jobs were removed from the Group of assigned jobs/   and one of the jobs had a non-empty group relay log but the last/   one had an empty group relay log. The Lower-Water-Mark was not/   correctly updated, because the algorithm assumed that the group/   relay log was null./   ------------------------------------------------------------/   revno: 3310/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 11:52:44 +0100/   message:/   Fixed valgrind errors.//   Slave_job_group was silently being cast to LOG_POS_COORD while calling/   sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by/   consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *).//   This had two problems://   . The first two entries in the Slave_job_group were not a pointer to/   a char * and my_offset.//   . Even if the first two entries were char * and my_offset, such/   casting could lead to alignment problems.//   To fix the problem, we avoid this casting./   ------------------------------------------------------------/   revno: 3309/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 19:14:50 +0300/   message:/   wl#5569 MTS//   fixing slave_transaction_retries_basic_64.result/   ------------------------------------------------------------/   revno: 3308/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 16:11:25 +0300/   message:/   wl#5569 MTS//   fixing tests.//   @ mysql-test/extra/rpl_tests/rpl_extra_col_master.test/   MTS-supperssion is necessary because the test is supposed to stop slave due to an error.//   @ mysql-test/extra/rpl_tests/rpl_relayrotate.test/   Load decreasing to prove a warning was caused by slow environment/   so waiting to accept the killed status by SQL thread was/   ended by 1 min timeout.//   @ mysql-test/suite/rpl/r/rpl_relayrotate.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_stm_000001.test/   A macro is expanded in order to isolate which branch of two activities/   a suffered timeout failure belongs in.//   @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_64.result/   Fixing results of 64 version of the test that was editted in the prev push./   ------------------------------------------------------------/   revno: 3307/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 12:33:36 +0300/   message:/   wl#5569 MTS//   Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling/   of a Rotate event which does not split the current group and therefore has to be executed/   after all previously scheduled events.//   Fixing sensetivity of two other tests to mtr's invocation environment that includes/   inital values of slave_parallel_workers and slave_transaction_retries.//   @ mysql-test/suite/sys_vars/inc/slave_transaction_retries_basic.inc/   made test insensetive to the value of slave_transaction_retries in mtr env.//   @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result/   made test insensetive to the value of slave_parallel_workers in mtr env.//   @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_32.result/   made test insensetive to the value of slave_transaction_retries in mtr env.//   @ mysql-test/suite/sys_vars/t/slave_parallel_workers_basic.test/   made test insensetive to the value of slave_parallel_workers in mtr env.//   @ sql/log_event.cc/   get_slave_worker() passes need_temps argument as FALSE is case of rows-events./   Correcting the actual value of `mts_in_group' of mts_async_exec_by_coordinator()./   ------------------------------------------------------------/   revno: 3306/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 09:04:19 +0100/   message:/   Fixed some windows failures./   ------------------------------------------------------------/   revno: 3305/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-06-18 19:58:21 +0100/   message:/   Fixed some recovery issues./   ------------------------------------------------------------/   revno: 3304/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 21:01:58 +0300/   message:/   wl#5569 MTS//   fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization/   failed (e.g rpl_row_log on win).//   @ mysql-test/extra/rpl_tests/rpl_loaddata.test/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_loaddata.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result/   MTS-suppression is added.//   @ mysql-test/suite/sys_vars/t/disabled.def/   constant nuisanse is disabled in the feature tree./   Todo: do not merge it when pushing to the main tree.//   @ sql/rpl_slave.cc/   Moved workers initialization after one of the coordinator so that/   failure in the former routine is handled with a proper state of coordinator./   ./   This fix eliminates segfault at the end of handle_slave_sql() for few tests but does not address the reason/   of worker initialization failure, like in rpl_row_log on win:/   110616  7:37:57 [Note] Info file G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0 cannot be accessed (errno 13). Most likely this is a new slave or you are  changing the repository type./   110616  7:37:57 [ERROR] G:/pb2/test/sb_1-3486364-1308189142.46/mysql-5.6.3-m5-win-x86_64-test/sql/Debug/mysqld.exe: File 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0' not found (Errcode: 13)/   110616  7:37:57 [ERROR] Failed to create a new info file (file 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0', errno 13)/   110616  7:37:57 [ERROR] Error reading slave worker configuration/   110616  7:37:57 [ERROR] Failed during slave worker thread create/   110616  7:37:57 [ERROR] Slave SQL: Failed during slave workers initialization, Error_code: 1593/   ------------------------------------------------------------/   revno: 3303/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 18:34:16 +0300/   message:/   wl#5569 MTS//   fixing tests.//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   making aux file names unique to please mtr, pb.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_filter_tables_not_exist.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_parallel_innodb.result/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_typeconv.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/t/rpl_filter_tables_not_exist.test/   MTS-suppression is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_typeconv.test/   MTS-suppression is added.//   @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result/   results updated.//   @ sql/sql_class.h/   Cleanup to remove early debug-related options.//   @ sql/sys_vars.cc/   Fixating slave_parallel_workers' max as 1024./   Cleanup to remove early debug-related options./   ------------------------------------------------------------/   revno: 3302/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 14:00:41 +0300/   message:/   wl#5569 MTS//   fixing rpl_row_basic_3innodb similarly to the previous patch.//   @ mysql-test/suite/rpl/r/rpl_row_basic_3innodb.result/   a suppression is added./   ------------------------------------------------------------/   revno: 3301/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 13:51:59 +0300/   message:/   wl#5569 MTS//   fixing few tests.//   1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave/   state with gaps thereby inconsistent./   2. Two tests that were used to time out due to reset master/slave was disabled in there.//   @ mysql-test/extra/rpl_tests/rpl_binlog_max_cache_size.test/   a suppression is added.//   @ mysql-test/extra/rpl_tests/rpl_row_basic.test/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_known_bugs_detection.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_basic_2myisam.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_event_max_size.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_idempotency.result/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_known_bugs_detection.test/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt/   removing unnecessary options causing test to fail.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test/   removing an erronous assignment. The former disabling of reset was intended /   for benchmarking w/o binlog on the slave to please master-slave.inc.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt/   removing unnecessary options causing test to fail.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test/   removing an erronous assignment. The former disabling of reset was intended /   for benchmarking w/o binlog on the slave to please master-slave.inc.//   @ mysql-test/suite/rpl/t/rpl_row_event_max_size.test/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_row_idempotency.test/   a suppression is added.//   @ sql/rpl_slave.cc/   Downgrading error to warning in a case of Coordinator fails due to a Worker error./   Improving messages. Merging two if:s to have just one report().//   @ sql/share/errmsg-utf8.txt/   Improved the text of an error;/   Added a new error code./   ------------------------------------------------------------/   revno: 3300/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 02:24:59 +0100/   message:/   Removed unnecessary test cases and augment others in order to test/   recovery./   ------------------------------------------------------------/   revno: 3299/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-16 19:46:22 +0300/   message:/   wl#5569 MTS//   fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS/   ------------------------------------------------------------/   revno: 3298/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-16 11:29:53 +0300/   message:/   wl#5569 MTS//   adding new tests to sys_vars.\/   ------------------------------------------------------------/   revno: 3297/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:41:32 +0100/   message:/   WL#5569//   Adding a global suppression for the warning that may appear when/   stopping the slave sql thread in the middle of a group. This /   should affect MTS mode only./   ------------------------------------------------------------/   revno: 3296/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:40:41 +0100/   message:/   WL#5569//   Renames worker-info-repository to slave-worker-info-repository in/   some tests option files./   ------------------------------------------------------------/   revno: 3295/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:32:37 +0100/   message:/   WL#5569//   More test fixes. Removing remaining prefixes 'mts' from mts variables,/   which have been renamed recently./   ------------------------------------------------------------/   revno: 3294/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 00:27:20 +0100/   message:/   WL#5569//   Fixing rpl_parallel result file./   ------------------------------------------------------------/   revno: 3293/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:41:33 +0300/   message:/   wl#5569 MTS//   correcting --slave-parallel-workers in few more files/   ------------------------------------------------------------/   revno: 3292/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:31:46 +0300/   message:/   wl#5569 MTS//   correcting --slave-parallel-workers in collections/default.push/   ------------------------------------------------------------/   revno: 3291/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:12:11 +0300/   message:/   wl#5569 MTS//   Cleanup, including//   1. decreasing number and renaming system variables./   Important for debugging command line options are replaced with reasonble constant values /   and only necessary are retained.//   2. Small encapsulation in ha_blackhole.cc is done.//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   cleanup.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load.test/   cleanup.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test/   cleanup.//   @ mysql-test/r/mysqld--help-notwin.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test/   cleanup.//   @ mysql-test/suite/sys_vars/r/all_vars.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_group_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_worker_info_repository_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_group_basic.test/   cleanup.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test/   cleanup.//   @ sql/log_event.cc/   removing experimental (for benchmarking) mts_slave_local_timestamp option.//   @ sql/mysqld.cc/   few debugging time options are replaced with constants./   Interface-variables are non needed anymore.//   @ sql/mysqld.h/   few debugging time options are replaced with constants./   Interface-variables are non needed anymore.//   @ sql/rpl_rli_pdb.cc/   few debugging time options are replaced with constants.//   @ sql/rpl_slave.cc/   few debugging time options are replaced with constants.//   @ sql/sys_vars.cc/   few debugging time options are replaced with constants;/   renaming the rest that deal with MTS to be prefixed with `slave_'./   ------------------------------------------------------------/   revno: 3290/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 15:59:23 +0100/   message:/   Fixed replication valgring failures caused by the MTS./   ------------------------------------------------------------/   revno: 3289/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 21:23:13 +0300/   message:/   wl#5569 MTS/   wl#5754 Query event parallel execution//   Fixing failing tests and a failure in gathering accessed databases that was caused/   by a recent merge from trunk.//   @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result/   results updated.//   @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result/   results updated.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test/   moving mtr.add_supp to eliminate possibility of warning in the slave's error;/   adding graceful termination lines the test.//   @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test/   moving mtr.add_supp to eliminate possibility of warning in the slave's error.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   Suppression are added for errors that are expected by test logics;/   adding graceful termination lines the test.//   @ sql/log_event.cc/   fixing the last argument to report() which should be c-string;/   fixing gathering of db:s on the master side. Because of a query can be preceeded in binlog/   by engineered BEGIN (the current pattern of logging from the trunk) resetting in Query::write()/   can't be any longer. /   However another reset point exists at the end of the top-level query and that suffices.//   @ sql/rpl_rli.h/   is_mts_in_group() to mimic STS' is_in_group() is added though semantics are different.//   @ sql/rpl_slave.cc/   further cleanup in sql_slave_killed() as requested by reviewers./   ------------------------------------------------------------/   revno: 3288/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 13:35:20 +0300/   message:/   merge from trunk/   ------------------------------------------------------------/   revno: 3287/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 12:27:38 +0300/   message:/   wl#5569 MTS//   Fixing failing tests due to /   a. a flaw in `isolated parallel' mode implementation./   Isolation applies to a group of event rather than to an instance./   And event that contains over-max accessed db:s or event from Old master/   trigger marking the current being scheduled group. Such group will be executed /   having all prior scheduled done and nomore will be scheduled until the group/   is done.//   b. Notification to Coordinator about errored-out Worker is corrected.//   @ sql/log_event.cc/   isolation applies to a group of event rather than to an instance./   Logics of isolation while the group is still executed by a Worker/   is refined through use of `bool curr_group_isolated' that lasts the group /   sceduling time and is set and reset in Log_event::get_slave_worker_id()./   Assert is added to monitor tmp tables correct migration./   ./   get_slave_worker() is called with `need_temp_tables' set to TRUE.//   @ sql/log_event.h/   Renaming to indicate that isolation applies to a group of event./   Adding more candidate event to mts_do_isolate_group() assert.//   @ sql/rpl_rli.h/   Isolation mode related declaration.//   @ sql/rpl_rli_pdb.cc/   Refining notification logics. Coordinator needs both its THD::KILLED and signalling/   to slave_worker_hash_cond.//   @ sql/rpl_slave.cc/   Isolation mode related init-ion./   ------------------------------------------------------------/   revno: 3286/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-12 22:33:32 +0300/   message:/   wl#5569 MTS//   making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats./   ------------------------------------------------------------/   revno: 3285/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-12 22:05:05 +0300/   message:/   wl#5569 MTS//   manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded./   ------------------------------------------------------------/   revno: 3284/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-09 18:35:59 +0100/   message:/   Post-fixes for merge.//   Fixed compilation in Windows and removed an used options./   ------------------------------------------------------------/   revno: 3283/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-09 16:27:47 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3282/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-06 13:51:19 +0300/   message:/   wl#5569 MTS//   STOP SLAVE now stops consistently w/o gaps, KILL/   shall be used for an urgent stop, an error case behaves like the/   killed. For instance, a Worker errors out, it sends KILL to/   Coordinator through THD::awake(), and Coordinator kill the rest/   through setting a special Worker-running status to killed (which/   breaks the read-exec loop of a Worker).//   @ sql/log_event.cc/   Changing style of computing mts-in-group bool arg into mts_async_exec_by_coordinator().//   @ sql/rpl_rli.cc/   Changing style of computing mts-in-group arg of an if in stmt_done().//   @ sql/rpl_rli.h/   Adding more states to Coordinator's MTS-group view.//   @ sql/rpl_rli_pdb.cc/   Relocating notification of a Worker's failure by the Worker into/   the error-branch of a functioning releasing common resources (entries of APH hash)./   The failed Worker trying awakening possibly waiting for the signal Coordinator./   The latter's behaviour in it's turn is refined to not enter the waiting phase/   when it has been already killed.//   @ sql/rpl_slave.cc/   sql_slave_killed() is made of two flavors of the error branches./   STOPped MTS coordinator does not give out too early and wait till/   its MTS-group state allows that./   Notification with kill to Coordinator  from the errored-out or killed/   worker is moved into a functioning releasing common resources (entries of APH hash)./   This case designates a hard stop./   In case of the soft (SLAVE-STOPped) MTS, Coordinator is made to wait for/   Workers' assignements full completion before to mark their running status for stopping./   ------------------------------------------------------------/   revno: 3281/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-05 20:01:51 +0300/   message:/   wl#5569 MTS//   More cleanup, fixes due to found issues when running tests, some improvements/   incl in stopping Workers to make routine to distinguish between killed and gracefully stopped/   cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still).//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   decreasing execution time.//   @ mysql-test/suite/rpl/t/rpl_begin_commit_rollback.test/   Marking the test as limited to Single-Thread-Slave.//   @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test/   Marking the test as limited to Single-Thread-Slave.//   @ mysql-test/suite/rpl/t/rpl_slave_skip.test/   Marking the test as limited to Single-Thread-Slave.//   @ sql/log_event.cc/   addressing few reviewing comments;/   asserting do_update_pos() can't run by Workers;/   cleaning up and separating Slave_worker *Log_event::get_slave_worker_id()/   and its caller's interest to rli-> last_assigned_worker;/   Deploying MTS group status marking in Log_event::apply_event();/   Making Worker's exec loop break to obey to a new Worker's running status too;/   Deploying mts_checkpoint_routine() in Rotate_log_event::do_update_pos()/   (sim action for FD event's handler);/   Fixing relay-log update notification in Log_event::get_slave_worker_id();//   @ sql/log_event.h/   renaming and re-typing of func:s as suggested by reviewer;/   leaving  a todo item for the final cleanup;/   correcting logics of mts_async_exec_by_coordinator();//   @ sql/rpl_rli.cc/   Initialization of a new MTS group status proverty: mts_group_status(MTS_NOT_IN_GROUP);/   asserting Relay_log_info::stmt_done() can't be run by Workers;/   deploying mts_checkpoint_routine() alike Rotate_log_event::do_update_pos() this time/   in Relay_log_info::stmt_done() to cover FD-event case and consulting mts_group_status/   in order to decide which branch to follow;//   @ sql/rpl_rli.h/   Augmenting Relay_log_info with mts_group_status to contain/   MTS group status;//   @ sql/rpl_rli_pdb.cc/   Slave_worker::commit_positions() is fixed to carry update relay-log info/   further to the following checkpoint routine action;/   Slave_worker *get_slave_worker() was cleaned, interfaces improved,/   few asserts corrected;/   Slave_worker::slave_worker_ends_group() cleaned a bit, and now frees extra/   memory of CGEP dynarray./   wait_for_workers_to_finish() is made to set the Coordinator's state as not/   in MTS group after synchronization with all workers;//   @ sql/rpl_rli_pdb.h/   Slave_jobs_queue is augmented with  running_status member.//   @ sql/rpl_slave.cc/   apply_event_and_update_pos(): corrects asserts, synch with *all* Workers/   at the end of dynamically marked as End of group event (mts_is_event_isolated() -> TRUE);/   exec_relay_log_event(): correts NULL event read out case;/   slave_stop_workers(): simplifying logics of stopping Workers, to mark them with /   w->running_status= Slave_worker::KILLED instead of killing workers' thd./   ./   slave_stop_workers() finilizes reset of Coordinator's state with/   rli->mts_group_status= Relay_log_info::MTS_NOT_IN_GROUP/   to make sure a next restart will proceed with the reset value./   ------------------------------------------------------------/   revno: 3280/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-05-30 13:05:07 +0300/   message:/   WL#5569 MTS/   WL#5754 Query event parallel applying//   -----------------------------------------------------------------/   Aggregating 7 commits that are not pushed yet to the wl5569 repo./   Find comments for each cset below./   ------------------------------------------------------------------//   The current patch addresses concurrent updating slave_open_temp_tables/   status counter./   The former declaration of the underlying server variable is changed from/   ulong to int32. While that might affect (shrink) the actual range, there has been/   no specified range and now after the number of bits is the same on all platforms/   the range cat be set to be//   [0, max(int32)]//   ******/   wl#5569 MTS/   Wl#5754 Query event parallel appying/   wl#5599 MTS recovery//   The patch includes/   some cleanup, including one for temp tables supp…",https://github.com/facebook/mysql-5.6/commit/328b6c0b19fe08557cf410a2023e100a4599e3a4,9454675,facebook/mysql-5.6,False,False
0,09b832b1f8fb530b40e6e3657253f6e65fed4199,"common/rust: vendor test-case 1.2//Summary:/Fixes an annoying lint warning://```/error: unneeded unit expression/   --> interpreter/src/pattern.rs:692:5/    |/692 |     #[test_case(PhantomData::< TargetPattern >; ""parsing TargetPattern"")]/    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^/    |/    = note: `-D clippy::unused-unit` implied by `-D warnings`/    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit/    = note: this error originates in the attribute macro `test_case` (in Nightly builds, run with -Z macro-backtrace for more info)/```//Reviewed By: ndmitchell//Differential Revision: D31108216//fbshipit-source-id: ab298b965a0b19643cfbdb16565c76a60ab25876",https://github.com/facebook/hhvm/commit/09b832b1f8fb530b40e6e3657253f6e65fed4199,455600,facebook/hhvm,False,False
1,9b883e2f19e8b81da2aa1053b3bb52df5f8eb7af,"interpreter: Factor out immediate decoding, part 1//Summary:Ihe iopReturnWrapper pattern lets us factor imm decoding/out of the bytecode function bodies, by overloading/iopReturnWrapper on the iop function signature.//Rename iopReturnWrapper to iopWrapper.//Create iopWrapper overloads for opcodes taking a litstr/immedate, and many opcodes taking no immediates.//Reviewed By: swtaarrs//Differential Revision: D3126451//fb-gh-sync-id: 05f2fbc298a7c3068538246ab8cb2d2f910d9dc2/fbshipit-source-id: 05f2fbc298a7c3068538246ab8cb2d2f910d9dc2",https://github.com/facebook/hhvm/commit/9b883e2f19e8b81da2aa1053b3bb52df5f8eb7af,455600,facebook/hhvm,False,False
2,255b10366675b25f51bb7251372e4009c55d8d42,"Improve memo key generation//Summary:/Make some improvements to how we generate memoization keys. The/previous scheme would use various optimized patterns depending on the/parameter's associated type-hint. Not all of these patterns could be implemented/in bytecode, so GetMemoKeyL had different semantics depending on the/type-hint. However, this meant that HHBBC, the JIT, and the interpreter had to/be all kept in sync. Instead, have HHBBC be solely responsible for implementing/specialized memo key patterns. HHBBC will lower the GetMemoKeyL opcode to the/specified generation scheme if possible. Therefore, if GetMemoKeyL remains, the/JIT and the interpreter can simply treat it using the generic scheme (rather/than peeking at the type-hints and interpreting it differently).//To enable this lowering in all the necessary ways, introduce two new/bytecodes. The first, Select, represents a simple ternary operator, and is used/for lowering where we want to decide between two values based on some/predicate. The second, DblAsBits, is used to reinterpret a double value as an/integer (with the same bit-pattern).//As a side-effect of this, the bug where a deprecated memoized function would/crash in HHBBC (when DisallowDynamicVarEnvCalls is disabled) is now fixed.//Finally, even for the generic GetMemoKeyL opcode, if the JIT knows the input/type, call the appropriate serialization function directly, rather than calling/a generic helper which checks the type and then dispatches.//Reviewed By: markw65//Differential Revision: D8302966//fbshipit-source-id: c45dec0fdf3f0b39b532f906f786bf308a582b93",https://github.com/facebook/hhvm/commit/255b10366675b25f51bb7251372e4009c55d8d42,455600,facebook/hhvm,False,False
3,8575f79d6438a247c168aff160224c07ef8d7305,"Translate FPushClsMethod//This adds new IR opcodes to lookup class methods from the TC/instead of interpreting.  LookupClsMethod basically does the same/thing as the interpreter; LookupClsMethodStatic is optimized for the/case where the call is in a static function.//Additionally, when the class input comes from a LdCtx we can get the/method slot at jit time and burn that into the TC.  This case is/pretty common since ""LateBoundCls; FPushClsMethod"" is a common/pattern.//Reviewed By: @jdelong//Differential Revision: D1035577",https://github.com/facebook/hhvm/commit/8575f79d6438a247c168aff160224c07ef8d7305,455600,facebook/hhvm,False,False
4,786b32d9c14aa5ae808777e61065763f8564aad2,"Fall back to interp from the IR.//Introduce a runtime option to allow falling back to the/interpreter, rather than to tx64. Once this is faster, we know we're/ready to ditch tx64.//Cleanups along the way://  - Start macro-izing the runtime options. For tractability, I only did/    the Eval* runtime options, but the same pattern should work for other/    parts of the hdf namespace.//  - const SrcKey& -> SrcKey in a lot of places.//  - slightly iron out the handshaking between translate and/    translateTracelet.",https://github.com/facebook/hhvm/commit/786b32d9c14aa5ae808777e61065763f8564aad2,455600,facebook/hhvm,False,False
5,d93ec3adb37a28753fa5a7a322d77b1b66b1b2a7,"Remove broken support for `$x::foo<T>()` reified generics//Summary:/This pattern is the last place that uses ReifiedName opcode, but/FCallClsMethod's JIT implementation never had any support for reified generics,/resulting in inconsistent behavior between interpreter and JIT.//The newly added test demonstrates that. It would previously print ""hi"" in the/interpreter mode, but throw an exception in JIT mode.//Let's remove its support altogether as it can't be possibly used. Note that the/calls to non-reified method would work fine, so let's just do that.//This diff makes it possible to nuke support for reified names, which allows/merging FCall*RD opcodes into FCall*Ds and their simplification and/generalization, which allows adding support to the FCallClsMethod opcode, which/allows reintroducing actually working support for `$x::foo<T>()`.//Another level of sadness here is inconsistency of stacktraces between/interpreter and JIT. One throws the exception at the callee, while another at/the caller, so I had to use try/catch in the test to produce a consistent/behavior. This is also something that will be fixed once reified generics are/generalized.//Reviewed By: oulgen//Differential Revision: D17181910//fbshipit-source-id: a0b81675e9921c78b2ea49b96eecde59d98e92c9",https://github.com/facebook/hhvm/commit/d93ec3adb37a28753fa5a7a322d77b1b66b1b2a7,455600,facebook/hhvm,False,False
0,598c99b4f3bf77405bc0411b9b2c7ea2fd943fc6,Speed up loops//Converted all of the `for...of` loops to traditional `for` loops. This/should avoid costly iterator patterns in code generators and make them/run faster.,https://github.com/facebook/hyperion/commit/598c99b4f3bf77405bc0411b9b2c7ea2fd943fc6,384374915,facebook/hyperion,False,False
1,e41d90a002cc38c57195546e52926a5be07ec0ab,"Use instruction sources small buffer optimization//Summary:/Redex instructions use a small buffer optimization to store their parameters./We should avoid multiple patterns to use it the most effectively:/* We should avoid `srcs()[i]` and just use `src(i)` (this is also more idiomatic)/* We should avoid `srcs().size()` and use `srcs_size()` which is more optimized/* We should avoid `srcs_vec()` when we can and use `srcs()`/* We should avoid calling `instruction->srcs_size()` in a for condition, since that while be executed at each loop iteration. It's usually better to save the result in a local variable.//Reviewed By: sinancepel//Differential Revision: D43340215//fbshipit-source-id: 9c9147c47479b136d197c5fc659d5f0f22976a48",https://github.com/facebook/mariana-trench/commit/e41d90a002cc38c57195546e52926a5be07ec0ab,317710554,facebook/mariana-trench,False,False
2,798c9e8217baa29573e9b6c44991fd20ab241091,"Collection matchers (#350)//Summary:/**What:**//Add Collection matchers, as requested in https://github.com/facebook/TestSlide/issues/346//- ``AnyContaining(element)``: A container that contains ``element``/- ``AnyContainingAll(element_list)``: A container that contains every element of ``element_list``/- ``AnyIterable()``: Any iterable/- ``IterableWithElements(element_list)``: an iterable containing all the elements in ``element_list`` in the same order""/- ``AnyNotEmpty()``: An object where ``len()`` does not evaluate to zero""/- ``AnyEmpty()``: An object where ``len()`` evaluates to zero""//**Why:**//Currently, the official matchers support Lists and Dicts, but not much in the way of abstract collections.  This PR enables patterns like://```/actual = deque([1, 2, 3], maxlen=100)/self.assertEqual(actual, IterableWithElements([1, 2, 3]))/```//**How:**//I added these matchers to matchers.py alongside their List/Dict counterparts.  I added unittests to matchers_unittest.py. Finally, I added documentation in patching/argument_matchers/.//**Risks:**//No risk of breaking existing code, since these are largely standalone, however there are some edge cases for these matchers that may or may not be intuitive to the user.//- `AnyEmpty`/`AnyNotEmpty` rely on `len()`, so they will throw on `AnyEmpty() == iter([1, 2, 3])`, for example./- `AnyContaining()`/`AnyContainingAll()` rely on `in`, so will try to match anything that implements `__contains__`/    - They may also exhaust iterators leading to unexpected results.//**Checklist**://<!--/Have you done all of these things?/To check an item, place an ""x"" in the box like so: ""- [x] Tests""/Add ""N/A"" to the end of each line that's irrelevant to your changes/-->//- [x] Added tests, if you've added code that should be tested/- [x] Updated the documentation, if you've changed APIs/- [x] Ensured the test suite passes/- [x] Made sure your code lints/- [x] Completed the Contributor License Agreement (""CLA"")//Pull Request resolved: https://github.com/facebook/TestSlide/pull/350//Reviewed By: bpjatfb//Differential Revision: D44458038//Pulled By: deathowl//fbshipit-source-id: 9951b226fd354090d54b982a290831c524e2a2c6",https://github.com/facebook/TestSlide/commit/798c9e8217baa29573e9b6c44991fd20ab241091,143481189,facebook/TestSlide,False,False
3,d747a7aa772237b891d9f7426b7e3ef07f61c756,[unnecessary copy] Refactor some common patterns//Summary:/This diff introduced://* `try_eval` that returns an optional value only when it is satisfiable;/* `continue_fold` and `continue_fold_map` that iterates `ContinueProgram` disjuncts only.//Reviewed By: ezgicicek//Differential Revision: D39356000//fbshipit-source-id: 5723b822584ca5b1d2bf6805e6295acc696e9b3c,https://github.com/facebook/infer/commit/d747a7aa772237b891d9f7426b7e3ef07f61c756,29857799,facebook/infer,False,False
4,41ace35007f65783c76d762ec09aac5e325695ba,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/relay/commit/41ace35007f65783c76d762ec09aac5e325695ba,40508605,facebook/relay,False,False
5,d136c088ae375ceeb60940689e3ca0556ad5ba32,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//@public//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/react-native/commit/d136c088ae375ceeb60940689e3ca0556ad5ba32,29028775,facebook/react-native,False,False
6,6c208c24d5946a598ccc9b089174a05db532c64d,"React Native sync for revisions fccf3a9...47cf4e5//Summary:/This sync includes the following changes:/- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...47cf4e5//jest_e2e[run_all_tests]//Reviewed By: sammy-SC//Differential Revision: D44090004//fbshipit-source-id: 6ac2d1d22a078d07ce011481063e78843bded28e",https://github.com/facebook/react-native/commit/6c208c24d5946a598ccc9b089174a05db532c64d,29028775,facebook/react-native,False,False
7,ea57c923b4f7bf6b207de015affddf906c7c7bdc,"React Native sync for revisions fccf3a9...f828bad//Summary:/This sync includes the following changes:/- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...f828bad//jest_e2e[run_all_tests]//Reviewed By: robhogan, rshest//Differential Revision: D44024996//fbshipit-source-id: 8ac9754c5ffe12bd5d9c3499515c0925bd411f70",https://github.com/facebook/react-native/commit/ea57c923b4f7bf6b207de015affddf906c7c7bdc,29028775,facebook/react-native,False,False
8,a710503a786505f47d6b70803b378b9c3830af7d,"Bump eslint from 8.35.0 to 8.36.0 in /js/js-flipper (#4596)//Summary:/skip-frl-buck-targeting//Bumps [eslint](https://github.com/eslint/eslint) from 8.35.0 to 8.36.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.36.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.36.0 - March 10, 2023</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/75df535681d15d7d685468d637945a200301f9ee""><code>75df535</code></a> 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/a0c856a82266107c8c93a695700b1f69a238316e""><code>a0c856a</code></a> Build: changelog update for 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.35.0...v8.36.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.35.0&new-version=8.36.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4596//Reviewed By: ivanmisuno//Differential Revision: D44215117//Pulled By: mweststrate//fbshipit-source-id: 26c8803b29b6e2176ad0e9e7c35142edbb9baef5",https://github.com/facebook/flipper/commit/a710503a786505f47d6b70803b378b9c3830af7d,129283183,facebook/flipper,False,False
9,b9d189890941da2a93e892f53a0884de842baa30,"Refactor Label iteration//Summary:/A number of different bytecode instructions have one or more Labels to represent branch targets./The hackc emitter needs to visit all Labels for various reasons; the `Instruct ADT` has them scattered/around in different places making it verbose and error prone to visit them correctly.//This diff introduces an idiom we used in the hacknative IR for operands and branch targets/that is fast and encapsulated. We provide accessors that return slices, either `&[Label]` or/`&mut [Label]`, which only have to do the careful pattern match in one place./Now client code can work with slices (fast), and pattern matching is simplified.//Iterating over a slice is easy (a for loop or iterator chain). If the visitor is a lambda, it is only/called or instantiated in one place, which simplifies code. Transposing/SSwitch's `Vec<Pair(Str,Label)>` to { Vec<Str>, Vec<Label> }, avoids the need for a/transient Vec<Label> in label_rewriter.//Clarify naming a little bit: a Label operand to a conditional branch instruction is a *target*,/not to be confused with a `ILabel(Label)` instruction which marks the location conditional/branches jump to.//Reviewed By: aorenste//Differential Revision: D34112173//fbshipit-source-id: 8ae82e96a855659f083fbcbffcf1b152b9f46ea0",https://github.com/facebook/hhvm/commit/b9d189890941da2a93e892f53a0884de842baa30,455600,facebook/hhvm,False,False
10,1f6828a24f533f74f625c112def8ee1c248e0c2a,"Further change fill pattern definitions to allow iterating over ""rules""",https://github.com/facebook/Rapid/commit/1f6828a24f533f74f625c112def8ee1c248e0c2a,161120445,facebook/Rapid,False,False
11,d0aed7e552e5df145b34feed2fecd02a584eeea0,"LanguageServer features in cli: decouple the availability types//Summary:/As noted in my previous diff, the big benefit of using an enum/rather than boolean flags to control feature availability in an IDE/is that it allows us to experiment with functionality without breaking/the interface on the cli.//This is the only way we can move fast in a world where the vscode plugin/is deployed independently of pyre itself - breaking changes are vastly/slower to rollout, and nearly guaranteed to break at least some users.//The same problem is much less serious in python because we don't currently/consider the python API to be stable, but nontheless: we'd also like the/ability to rapidly iterate on a specific feature making only local changes/where they are needed.//The direct use of `Availability` and `AvailabilityWithShadow` is/failing us here: if we add an extra experimental setting to any given feature,/we globally have to change the type of the enum. This is exactly what I'm/trying to avoid in the cli, and it makes sense to avoid it in the python type/signatures as well.//So, instead lets define the two concrete enums as private classes, and then/use type aliases so that each feature is decoupled from the others. This allows/us to add new enums on-the-fly as needed to experiment (e.g. with a prettified/hover, which is almost certainly something we'll need if we want to be competitive/with jedi down the road).//Note that type coverage was *already* an availability flag with a divergent enum/type, and we can now clearly see how this pattern plays out: by renaming the coverage/""level"" to coverage ""availability"" it now becomes much more parsimonious with the other/ide features.//Reviewed By: grievejia//Differential Revision: D39281298//fbshipit-source-id: e65e7a55bbd21fc30488a9d3d32da4d3638f63ef",https://github.com/facebook/pyre-check/commit/d0aed7e552e5df145b34feed2fecd02a584eeea0,110274488,facebook/pyre-check,False,False
12,0a7907b3ec7e222c6003700b3046cbe55aa31f75,"Remove brittle pattern matching in OptimizeEnums//Summary:/d8 generates slightly different code. This diff replaces a strict opcode match with a generic analysis.//```/// Pattern we are trying to match:///  SGET_OBJECT <LookupTable>;.table///  MOVE_RESULT_PSEUDO <v_field>///  ...///  INVOKE_VIRTUAL <v_enum> <Enum>;.ordinal:()///  MOVE_RESULT <v_ordinal>///  ...///  AGET <v_field>, <v_ordinal>///  MOVE_RESULT_PSEUDO <v_dest>///  ...///  *_SWITCH <v_dest>////// But we want to find cases that have interleaved unrelated instructions or/// block boundaries between them, so we use the sparta analysis framework.////// We track information about which instructions wrote to a given register in/// the `info` struct. If we reach a switch statement with all the fields filled,/// then we've matched the pattern.////// The iterator is used in two phases. First, `iterator.run()` does the analysis/// and `collect()` finds all the sequences that match the pattern/```//Reviewed By: emma0303//Differential Revision: D12990044//fbshipit-source-id: 9e7e768b8986e5def862b915adf48b2fbc4279aa",https://github.com/facebook/redex/commit/0a7907b3ec7e222c6003700b3046cbe55aa31f75,54664770,facebook/redex,False,False
13,55143a857a3cf1c69841df1ce04a3055c7f3c944,"IterateV, IterateKV: provide override for the most common usage pattern//Summary:/The most common usage is to iterate the input container for reading, where you/don't need to use any of these other lambdas.//The least common usage is using all the lambdas except the last one.//So, kill the least commonly used override, adding false explicitly to the call/sites using it. And add an override for the most commonly used pattern,/simplifying all the call sites.//Makes it possible to iterate containers without filling whole terminal screen/with lambdas.//Reviewed By: alexeyt//Differential Revision: D20130502//fbshipit-source-id: 22a9fcf6585d5d9b5b45d65e7e1845d848b50435",https://github.com/facebook/hhvm/commit/55143a857a3cf1c69841df1ce04a3055c7f3c944,455600,facebook/hhvm,False,False
14,666cba7b1cb6cfeadb9f44964ceb956c7f33dce8,Follow up on code review./Fixed tables:/- EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME/- EVENTS_STATEMENTS_SuMMARY_BY_THREAD_BY_EVENT_NAME/to follow the iteration pattern changed previously for table/- EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME.//Iteration per thread is in the outer most loop.,https://github.com/facebook/mysql-5.6/commit/666cba7b1cb6cfeadb9f44964ceb956c7f33dce8,9454675,facebook/mysql-5.6,False,False
15,f29298d91cba86c5181a449719a03712da539fec,"A code review comment for Bug#52289.//Encapsulate the deadlock detection functionality into /a visitor class, and separate it from the wait-for graph/traversal code.//Use ""Internal iterator"" and ""Visitor"" patterns to /achieve the desired separation of responsibilities.//Add comments.",https://github.com/facebook/mysql-5.6/commit/f29298d91cba86c5181a449719a03712da539fec,9454675,facebook/mysql-5.6,False,False
16,47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,"New Props parsing infrastructure for perf improvements: visitor pattern vs random-map-access pattern (ViewProps, minus YogaLayoutableShadowNode)//Summary:/Perf numbers for this stack are given in terms of before-stack and after-stack, but the changes are split up for ease of review, and also to show that this migration CAN happen per-component and is 100% opt-in. Most existing C++ components do not /need/ to change at all.//# Problem Statement//During certain renders (select critical scenarios in specific products), UIManagerBinding::createNode time takes over 50% of JS thread CPU time. This could be higher or lower depending on the specific product and interaction, but overall createNode takes a lot of CPU time. The question is: can we improve this? What is the minimal overhead needed?//The vast, vast majority of time is taken up by prop parsing (specifically, converting JS values across the JSI into concrete values on the C++ props structs). Other methods like appendChild, etc, do not take up a significant amount of time; so we conclude that createNode is special, and the JSI itself, or calling into C++, is not the problem. Props parsing is the perf problem.//Can we improve it? (Spoiler: yes)//# How does props parsing work today?//Today, props parsing works as follows://1. The ConcreteComponentDescriptor will construct a RawPropsParser (one per component /type/, per application: so one for View, one for Image, one for Text... etc)/2. Once per component type per application, ConcreteComponentDescriptor will call ""prepare"" on the RawPropsParser with an empty, default-constructed ConcreteProps struct. This ConcreteProps struct will cause RawProps.at(field) for every single field./3. Based on the RawProps::at calls in part 2, RawPropsParser constructs a Map from props string names (width, height, position, etc) to a position within a ""value index"" array./4. The above is what happens before any actual props are parsed; and the RawPropsParser is now ready to parse actual Props./5. When props are actually being parsed from a JSI dictionary, we now have two phases:/  1. The RawPropsParser `preparse`s the RawProps, by iterating over the JSI map and filling in two additional data structures: a linear list of RawValues, and a mapping from the ValueIndex array (`keyIndexToValueIndex_`; see step 3) to a value's position in the values list (`value_` in RawPropsParser/RawProps);/  2. The ConcretePropT constructor is called, which is the same as in step 2/3, which calls `fieldValue = rawProps.at(""fieldName"")` repeatedly./  3. For each `at` call, the RawProps will look up a prop name in the Map constructed in step 3, and either return an empty value, or map the key name to the `keyIndexToValueIndex_` array, which maps to a value in `values_`, which is then returned and further parsed.//So, a few things that become clear with the current architecture://1. Complexity is a property of the number of /possible/ props that /can/ be parsed, not what is actually used in product code. This violates the ""only pay for what you use"" principal. If you have `<View opacity={0.5} />`, the ViewProps constructor will request ~170 properties, not 1!/2. There's a lot of pre-parsing which isn't free/3. The levels of indirection aren't free, and make cache misses more likely and pipelining is more challenging/4. The levels of indirection also require more memory - minor, but not free//# How can we improve it?//The goal is to improve props parsing with minimal or zero impact on backwards-compability. We should be able to migrate over components when it's clear there's a performance issue, without requiring everything gets migrated over at once. This both (1) helps us prove out the new architecture, (2) derisks the project, (3) gives us time, internally and externally, to perfect the APIs and gradually migrate everything over before deleting the old infrastructure code entirely.//Thus, the goal is to do something that introduces a zero-cost abstraction. This isn't entirely possible in practice, and in fact this method slightly regresses components that do not use the new architecture /at all/, while dramatically improving migrated components and causing the impact of the /old/ architecture to be minimal.//# Solution//1. We still keep the existing system in place entirely./2. After Props are constructed (see ConcreteComponentDescriptor changes) we iterate over all the /values/ set from JS, and call PropsT::setProp. Incidentally, this allows us to easily reuse the same prop for multiple values for ""free"", which was expensive in the old system./3. It's worth noting that this makes a Props struct ""less immutable"" than it was before, and essentially now we have a ""builder pattern"" for Props. (If we really wanted to, we could still require a single constructor for Props, and then actually use an intermediate PropsBuilder to accumulate values - but I don't think this overhead would be worth for the conceptual ""immutability"" win, and instead a ""Construct/Set/Seal"" model works fine, and we still have all the same guarantees of immutability after the parsing phase)//# Implementation Details/# How to properly construct a single Prop value//Minor detail: parsing a single prop is a 3-step process. We imagine two scenarios: (1) Creating a new ShadowNode/Props A from nothing/void, so the previous Props value is just the default constructor. (2) Cloning a ShadowNode A->B and therefore Props A must be copied to Props B before parsing.//We will denote this as a clone from A->B, where A may or may not be a previous node or a default-constructed Props node; and imagine in particular that we're setting the ""opacity"" value for PropsB.//We must first (1) copy a value over from the previous version of the Props struct, so B.opacity = A.opacity; (2) Determine if opacity has been set from JS. If so, and there is a value, B.opacity = parse(JSValue). (3) If JS has passed in a value for the prop, BUT the value is `null`, it means that JS is resetting or deleting the prop, so we must set it BACK to the default. In this case we set PropsB.opacity = DefaultConstructedProps.opacity.//We must take care in general to ensure that the correct behavior is achieved here, which should help to explain some of the code below.//## String comparisons vs hash comparisons//In the previous system, a RawPropsKey is three `const char*` strings, concatenated together repeatedly /at runtime/. In practice, the ONLY reason we have the prefix, name, suffix Key structure is for the templated prop parsing in ViewProps and YogaStyableProps - that's it. It's not used anywhere else. Further, the key {""margin"", ""Left"", ""Width""} is identical to the key {""marginLeftWidth"", null, null} and we don't do anything fancy with matching prefixes before comparing the whole string, or similar. Before comparison, keys are concatenated into a single string and then we use `strcmp`. The performance of this isn't terrible, but it's nonzero overhead.//I think we can do better and it's sufficient to compare hashed string values; even better, we can construct most of these /at compile time/ using constexpr, and using `switch` statements guarantee no hash collisions within a single Props struct (it's possible there's a collision between Props.cpp and ViewProps.cpp, for example, since they're different switch statements). We may eventually want to be more robust against has collisions; I personally don't find the risk to be too great, hash collisions with these keys are exceedingly unlikely (or maybe I just like to live dangerously). Thus, at runtime, each setProp requires computing a single hash for the value coming from JS, and then int comparisons with a bunch of pre-compiled values.//If we want to be really paranoid, we could be robust to hash collisions by doing `switch COMPILED_HASH(""opacity""): if (strcmp(strFromJs, ""opacity"") == 0)`. I'm happy to do this if there's enough concern.//## Macros//Yuck! I'm using lots of C preprocessor macros. In general I found this way, way easier in reducing code and (essentially) doing codegen for me vs templated code for the switch cases and hashing prop names at compile-time. Maybe there's a better way.//Changelog: [Added][Fabric] New API for efficient props construction//Reviewed By: javache//Differential Revision: D37050215//fbshipit-source-id: d2dcd351a93b9715cfeb5197eb0d6f9194ec6eb9",https://github.com/facebook/react-native/commit/47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,29028775,facebook/react-native,False,False
17,a950634424cddf31c0adb6c9799adf1cc5f83bf0,"fix: compare the LogBoxData ignorePatterns with the right code (#31977)//Summary:/the `LogBoxData.addIgnorePatterns` function shows the wrong code to get a item in `Set`. because every item in `set.entries` looks like `[value, value]`, but not `value`.//while the `addIgnorePatterns` function evalutes two itertaions that is not necessary. So I refacted this function.//## Changelog//<!-- Help reviewers and the release process by writing your own changelog entry. For an example, see:/https://github.com/facebook/react-native/wiki/Changelog/-->//[General] [Fixed] - for LogBox checking existingPattern in a wrong way./[General] [Changed] - addIgnorePatterns runs in one iteration./[General] [Added] - add a function `getIgnorePatterns` in `LogBoxData.js` for tests or other usecases.//Pull Request resolved: https://github.com/facebook/react-native/pull/31977//Test Plan:/test codes in `LogBoxData-test.js`:/````js/it('adding same pattern multiple times', () => {/    expect(LogBoxData.getIgnorePatterns().length).toBe(0);/    LogBoxData.addIgnorePatterns(['abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(1);/    LogBoxData.addIgnorePatterns([/abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/    LogBoxData.addIgnorePatterns(['abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/    LogBoxData.addIgnorePatterns([/abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/  });//  it('adding duplicated patterns', () => {/    expect(LogBoxData.getIgnorePatterns().length).toBe(0);/    LogBoxData.addIgnorePatterns(['abc', /ab/, /abc/, /abc/, 'abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(3);/    LogBoxData.addIgnorePatterns([/ab/, /abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(3);/  });/````//and they have passed//Reviewed By: rickhanlonii//Differential Revision: D30675522//Pulled By: yungsters//fbshipit-source-id: 4a05e0f04a41d06cac416219f1e8e540bf0eea02",https://github.com/facebook/react-native/commit/a950634424cddf31c0adb6c9799adf1cc5f83bf0,29028775,facebook/react-native,False,False
18,5ae8012a6445deac001c286c6a7e46983acb8a02,"vget _n pattern for iterators//Summary:/Adds special patterns to cope with VGetL on unnamed locals in the context of compiling unnatural foreach statements in PHP. In cases/like foreach ($array as $key => &$$v) we do take a reference to an unnamed local, but it does not escape and the local is unset within a couple/of instructions, so it is safe to treat this as a read and then an unset of the local. This diff adds rather specific and hacky special case/rules to cope with the associated patterns of code.//Reviewed By: hubyrod//Differential Revision: D5337863//fbshipit-source-id: 829bb3c6e467ebfeb2d4fdde770e9b60c130e440",https://github.com/facebook/hhvm/commit/5ae8012a6445deac001c286c6a7e46983acb8a02,455600,facebook/hhvm,False,False
19,854d062ec83af91aab71ac24e70ecadeab5a2658,A few small optimizations in ComponentHostUtils//Summary:/Saw a few small opportunities while investigating a crashing bug ...//Three pattern changes here:/1) avoiding iterator allocations when looping over Lists/2) calling size() once on these Lists to remove some virtual method call overhead/3) passing desired capacity to ArrayList constructor when it's definitively known ahead-of-time//Reviewed By: bthood//Differential Revision: D5041553//fbshipit-source-id: 59562aa98b1eebc1304f37648501bd855bef6c5b,https://github.com/facebook/litho/commit/854d062ec83af91aab71ac24e70ecadeab5a2658,80179724,facebook/litho,False,False
20,cab46685781621bd35659505acb3b38f11f82cc8,"Bump rayon from 1.5.1 to 1.5.2 in /packer (#3636)//Summary:/Bumps [rayon](https://github.com/rayon-rs/rayon) from 1.5.1 to 1.5.2./<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/rayon-rs/rayon/blob/master/RELEASES.md"">rayon's changelog</a>.</em></p>/<blockquote>/<h1>Release rayon 1.5.2 / rayon-core 1.9.2 (2022-04-13)</h1>/<ul>/<li>The new <code>ParallelSlice::par_rchunks()</code> and <code>par_rchunks_exact()</code> iterate/slice chunks in reverse, aligned the against the end of the slice if the/length is not a perfect multiple of the chunk size. The new/<code>ParallelSliceMut::par_rchunks_mut()</code> and <code>par_rchunks_exact_mut()</code> are the/same for mutable slices.</li>/<li>The <code>ParallelIterator::try_*</code> methods now support <code>std::ops::ControlFlow</code> and/<code>std::task::Poll</code> items, mirroring the unstable <code>Try</code> implementations in the/standard library.</li>/<li>The <code>ParallelString</code> pattern-based methods now support <code>&amp;[char]</code> patterns,/which match when any character in that slice is found in the string.</li>/<li>A soft limit is now enforced on the number of threads allowed in a single/thread pool, respecting internal bit limits that already existed. The current/maximum is publicly available from the new function <code>max_num_threads()</code>.</li>/<li>Fixed several Stacked Borrow and provenance issues found by <code>cargo miri</code>.</li>/</ul>/<h2>Contributors</h2>/<p>Thanks to all of the contributors for this release!</p>/<ul>/<li><a href=""https://github.com/atouchet""><code>@​atouchet</code></a></li>/<li><a href=""https://github.com/bluss""><code>@​bluss</code></a></li>/<li><a href=""https://github.com/cuviper""><code>@​cuviper</code></a></li>/<li><a href=""https://github.com/fzyzcjy""><code>@​fzyzcjy</code></a></li>/<li><a href=""https://github.com/nyanzebra""><code>@​nyanzebra</code></a></li>/<li><a href=""https://github.com/paolobarbolini""><code>@​paolobarbolini</code></a></li>/<li><a href=""https://github.com/RReverser""><code>@​RReverser</code></a></li>/<li><a href=""https://github.com/saethlin""><code>@​saethlin</code></a></li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li>See full diff in <a href=""https://github.com/rayon-rs/rayon/commits"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rayon&package-manager=cargo&previous-version=1.5.1&new-version=1.5.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/3636//Reviewed By: antonk52//Differential Revision: D35893257//Pulled By: lblasa//fbshipit-source-id: ad1df71d2f0c5bf09dda1e6927b147a13eac5f81",https://github.com/facebook/flipper/commit/cab46685781621bd35659505acb3b38f11f82cc8,129283183,facebook/flipper,False,False
21,9d0cae71042be55a5429aa2e2ddc4be330995965,"Eliminate unnecessary (slow) block cache Ref()ing in MultiGet (#9899)//Summary:/When MultiGet() determines that multiple query keys can be/served by examining the same data block in block cache (one Lookup()),/each PinnableSlice referring to data in that data block needs to hold/on to the block in cache so that they can be released at arbitrary/times by the API user. Historically this is accomplished with extra/calls to Ref() on the Handle from Lookup(), with each PinnableSlice/cleanup calling Release() on the Handle, but this creates extra/contention on the block cache for the extra Ref()s and Release()es,/especially because they hit the same cache shard repeatedly.//In the case of merge operands (possibly more cases?), the problem was/compounded by doing an extra Ref()+eventual Release() for each merge/operand for a key reusing a block (which could be the same key!), rather/than one Ref() per key. (Note: the non-shared case with `biter` was/already one per key.)//This change optimizes MultiGet not to rely on these extra, contentious/Ref()+Release() calls by instead, in the shared block case, wrapping/the cache Release() cleanup in a refcounted object referenced by the/PinnableSlices, such that after the last wrapped reference is released,/the cache entry is Release()ed. Relaxed atomic refcounts should be/much faster than mutex-guarded Ref() and Release(), and much less prone/to a performance cliff when MultiGet() does a lot of block sharing.//Note that I did not use std::shared_ptr, because that would require an/extra indirection object (shared_ptr itself new/delete) in order to/associate a ref increment/decrement with a Cleanable cleanup entry. (If/I assumed it was the size of two pointers, I could do some hackery to/make it work without the extra indirection, but that's too fragile.)//Some details:/* Fixed (removed) extra block cache tracing entries in cases of cache/entry reuse in MultiGet, but it's likely that in some other cases traces/are missing (XXX comment inserted)/* Moved existing implementations for cleanable.h from iterator.cc to/new cleanable.cc/* Improved API comments on Cleanable/* Added a public SharedCleanablePtr class to cleanable.h in case others/could benefit from the same pattern (potentially many Cleanables and/or/smart pointers referencing a shared Cleanable)/* Add a typedef for MultiGetContext::Mask/* Some variable renaming for clarity//Pull Request resolved: https://github.com/facebook/rocksdb/pull/9899//Test Plan:/Added unit tests for SharedCleanablePtr.//Greatly enhanced ability of existing tests to detect cache use-after-free./* Release PinnableSlices from MultiGet as they are read rather than in/bulk (in db_test_util wrapper)./* In ASAN build, default to using a trivially small LRUCache for block_cache/so that entries are immediately erased when unreferenced. (Updated two/tests that depend on caching.) New ASAN testsuite running time seems/OK to me.//If I introduce a bug into my implementation where we skip the shared/cleanups on block reuse, ASAN detects the bug in/`db_basic_test *MultiGet*`. If I remove either of the above testing/enhancements, the bug is not detected.//Consider for follow-up work: manipulate or randomize ordering of/PinnableSlice use and release from MultiGet db_test_util wrapper. But in/typical cases, natural ordering gives pretty good functional coverage.//Performance test:/In the extreme (but possible) case of MultiGetting the same or adjacent keys/in a batch, throughput can improve by an order of magnitude./`./db_bench -benchmarks=multireadrandom -db=/dev/shm/testdb -readonly -num=5 -duration=10 -threads=20 -multiread_batched -batch_size=200`/Before ops/sec, num=5: 1,384,394/Before ops/sec, num=500: 6,423,720/After ops/sec, num=500: 10,658,794/After ops/sec, num=5: 16,027,257//Also note that previously, with high parallelism, having query keys/concentrated in a single block was worse than spreading them out a bit. Now/concentrated in a single block is faster than spread out, which is hopefully/consistent with natural expectation.//Random query performance: with num=1000000, over 999 x 10s runs running before & after simultaneously (each -threads=12):/Before: multireadrandom [AVG    999 runs] : 1088699 (± 7344) ops/sec;  120.4 (± 0.8 ) MB/sec/After: multireadrandom [AVG    999 runs] : 1090402 (± 7230) ops/sec;  120.6 (± 0.8 ) MB/sec/Possibly better, possibly in the noise.//Reviewed By: anand1976//Differential Revision: D35907003//Pulled By: pdillinger//fbshipit-source-id: bbd244d703649a8ca12d476f2d03853ed9d1a17e",https://github.com/facebook/rocksdb/commit/9d0cae71042be55a5429aa2e2ddc4be330995965,6934395,facebook/rocksdb,False,False
22,3d9d0e7766d4195bbe40dbac8d85abcfe343beb0,"BUG#11757250: REPLACE(...) INSIDE A STORED PROCEDURE.//Analysis:/--------//REPLACE operation provides incorrect output when/user variable is supplied as an argument and there/are multiple rows on which the operation is performed.//Consider the example below://SET @var='(( 00000000 ++ 00000000 ))';/SELECT REPLACE(@var, '00000000', table_name) AS a FROM/INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='mysql';//Invalid output:/  +---------------------------------------+/  | REPLACE(@var, '00000000', TABLE_NAME) |/  +---------------------------------------+/  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/      ....../      ....../  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/  +---------------------------------------+//The user argument supplied as the string to REPLACE/operation is overwritten after the first iteration/to '(( columns_priv ++ columns_priv ))'./The overwritten string after the first iteration/is used for the subsequent REPLACE iteration. Since/the pattern string is not found, it returns invalid/output as mentioned above.//Fix:/---/If the Alloced_length is zero, realloc() and create a/copy of the string which is then used for the REPLACE/operation for every iteration.",https://github.com/facebook/mysql-5.6/commit/3d9d0e7766d4195bbe40dbac8d85abcfe343beb0,9454675,facebook/mysql-5.6,False,False
23,36bff65cf6e15a53df65156212076eed188ee0e9,"Add test case for mutating collections while iterating//In a previous version of D1012992 I broke Vector by/accidentally disallowing the following pattern//  $v = Vector {1, 2, 3};/  foreach ($v as $e) {/    $v[0] = 42;/  }//i.e. we should be able to mutate elements of Vector (and Map, and StableMap)/while iterating over the collection at the same time.//The bug was caught by a flib unit test, but it seems there wasn't an/hphp unit test that tested the behaviour.//So I'm adding it.//Reviewed By: @paroski//Differential Revision: D1056037",https://github.com/facebook/hhvm/commit/36bff65cf6e15a53df65156212076eed188ee0e9,455600,facebook/hhvm,False,False
24,9f5d69bf1faf6252f9c18a3869013e93644f98c9,"Fix how the HardReturnTypehints optimization deals with interfaces//Summary: As HHBBC does iterative analysis, it aims to uphold an invariant that return/types will only be refined and never be widened. When HardReturnTypehints is/enabled, there are certain code patterns that make it possible to violate/this invariant when an interface return typehint is involved.//This tweaks the HardReturnTypehints optimization to be more conservative/with interface return typehints to avoid the problem.//Reviewed By: @jdelong//Differential Revision: D1805456",https://github.com/facebook/hhvm/commit/9f5d69bf1faf6252f9c18a3869013e93644f98c9,455600,facebook/hhvm,False,False
25,a46fba5dd366144d76a56a6e780c5183a14d18cb,"use DynamicFromObject to avoid maps//Summary:/Changes our property access pattern to iterate through props once and pass the Object value directly rather than looking the value up in the map with the key.//Note some ViewManagers methods (especially yoga related ones on shadow nodes) expect a `Dyanamic`, so this diff also creates Dynamic's only when needed by the hand-written code, and introduces a new `DynamicWithObject` to create them that simply wraps the underlying object (as opposed to `DynamicWithMap` which wraps the map and does a lookup any time the `Dynamic` is accessed.//Reviewed By: mdvacca//Differential Revision: D14453300//fbshipit-source-id: df98567b6eff1e6b7c611f179eb11e413fb94e5d",https://github.com/facebook/react-native/commit/a46fba5dd366144d76a56a6e780c5183a14d18cb,29028775,facebook/react-native,False,False
26,3434b3180d114995305e5fe66775f78c4c794f0d,"Run again after IntraDexInliner//Summary:/I have observed that the instruction sequence outliner actually hits the `kMaxMethodRefs` limit occasionally (in some dexes), and yet, at the very end, we still have some method refs to spare. The reason is the IntraDexInline pass that runs after the outliner: it removes a good number of methods. So, let's run the outliner once more after the inliner. This way.../- we can outline more beneficial candidates that hit the kMaxMethodRefs boundary earlier, and/- we might find more beneficial candidates after the changes in code patterns due to another inlining round, and the earlier outlining itself.//To this end, we adjust the naming scheme of the generated classes / methods to make sure that different outliner iterations don't stomp on each other.//Before, an outlined class / method would have a name like.../````/com.redex.Outlined$0$0.$outlined$7091297849863854496/````/and now it becomes/```/com.redex.Outlined$X$0$0.$outlined$X$7091297849863854496/```/where `X` is the outliner iteration.//Reviewed By: newobj//Differential Revision: D21631245//fbshipit-source-id: 169f1cd8a7dc9a68a4ec507ab722e852a6615f47",https://github.com/facebook/redex/commit/3434b3180d114995305e5fe66775f78c4c794f0d,54664770,facebook/redex,False,False
27,3f6f448c918b25cd1250b0a8db8054d2191c3b6d,"Simplest builder case//Summary:/First pass through builders and optimizing the most trivial ones./For this case, I chose only the builders that:/* don't escape the stack/* they don't pass ""this"" in the constructor/* build method can be inlined/* all fields are initialized/After inlining the build method, if it succeeds, it tries to remove the builder completely. For the moment, the solution doesn't allocate extra registers. If possible, it removes the fields and reuse the registers.//Given that in fb4a there are none that follow this pattern, didn't add the pass. Following iterations will do that.//Reviewed By: int3//Differential Revision: D4674949//fbshipit-source-id: 532d77151b124a59d4ae23013d95b220292d331b",https://github.com/facebook/redex/commit/3f6f448c918b25cd1250b0a8db8054d2191c3b6d,54664770,facebook/redex,False,False
28,08d712a7a3bb416c8360f11bde66a774e6b5b83e,"Change insert implementation to template that takes iterators//Summary:/While manipulating IR using the awesome editable CFG, I am finding myself using the following pattern a lot:/```/std::vector<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert);/```/Vector insertion on average is `O(log(n))`, while worse being `O(n)`. It would be nice if we can use either `std::deque` (whose insertion or removal of elements at the end or beginning take constant time) or any kind of data structure we currently use to hold IR (I am guessing like `IRList`?)//Because in C++ we frequently pass iterators to achieve this level of polymorphism. So I would prefer to have an API like this://```//* any type of containers that holds IRInstruction* *//std::deque<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert.begin(), to_insert.end());/```/This diff is the first step to make the actual insert implementation a template.//Reviewed By: justinjhendrick//Differential Revision: D15139367//fbshipit-source-id: cc1bc926d963a6171c3ed8f3415e487909820b20",https://github.com/facebook/redex/commit/08d712a7a3bb416c8360f11bde66a774e6b5b83e,54664770,facebook/redex,False,False
29,9d307f3b318662b9854fe753f9a1d3654551563b,"Implement a Stateful NAST Check//Summary:/Currently, the nast_check visitor is a bit unwieldy to use for stateful/context based error checks. Each method of a nast check visitor is context free but there are many error checks that require some context/state to correctly report errors. Currently, many of these checks do one of the following to gain context/stateful capabilities.//1. Add context/state to the global nast check env/2. Retain context/state locally in the visitor via a stateful reference/3. Implement another stateful visitor and call into that//There are a couple of problems with each:/1. The code to do this is a non obvious pattern. It also pollutes the global environment with state that is only needed in one particular visitor/2. Updating a reference statefully is difficult to reason about within the visitor framework/3. This breaks out assumption that we will only make one pass over the ast for all checks, instead of one per check.//This diff creates a framework for a stateful nast check visitor where each visitor is able to retain its own state when iterating over the AST.//Reviewed By: Wilfred//Differential Revision: D21292538//fbshipit-source-id: 9fe6929435fed28a177c7cc2fe82c896a90c97a9",https://github.com/facebook/hhvm/commit/9d307f3b318662b9854fe753f9a1d3654551563b,455600,facebook/hhvm,False,False
0,c1e9a8ee561d6191fe15633af31948ade80d726a,"ObserverContainer//Summary:/Introduces `folly::ObserverContainer`, a library that makes it easy to add support for observers to an object.//An observer is an object that is notified about changes to / events affecting the observed object through an interface defined by said object. `folly::ObserverContainer` generalizes a design pattern that has been applied to add support for observers to a few different classes at Meta, including `folly::AsyncSocket` and `wangle::Acceptor` and in parallel addresses some limitations of those designs.//In addition to generalizing this design pattern, `folly::ObserverContainer` will reduce the amount of boilerplate code required to write an observer and to add support for observers to an existing object.//**Benefits of `folly::ObserverContainer`**://A simple way to add support for an observer to an object is to define an interface, and then add a setter that sets a pointer to an object that has implemented that interface.//`folly::ObserverContainer` has a number of advantages over the simple pattern://- It enables an object to have multiple observers. More generally, a single observer can observe multiple objects, and an object can have multiple observers (e.g., supports N:N relationships between observers and observable objects)./- It provides an observer implementation (`ManagedObserver`) that ensures that the observer is detached from the observer list on its destruction, thus ensuring that there are never any dangling observers./- It (safely) supports observers being added or removed during processing of an event./- It enables observers to subscribe to given events, which in turn enables the object being observed to avoid the collection/generation of more expensive events if no observer is interested in them./- It handles corner cases, such as `move` construction, during which observers should be moved from one instance to another.//**How does `folly::ObserverContainer` compare to X?**://A common question about this design pattern is ""*Why do we need all of this? Couldn't we get the same benefits from an intrusive list or a list of `shared_ptr`?*"". `folly::ObserverContainer` provides a few advantages over those solutions:/- If the observer list is designed as a list of `shared_ptr`, it prevents objects that are not allocated as `shared_ptr` from acting as observers. Likewise, it prevents objects that manage their own lifecycle (e.g., that destroy themselves) from being observers. While `weak_ptr` can get around the latter issue, it does not resolve the former./- If the observer list is designed as an intrusive list, it makes it harder for a single observer to observe multiple objects. That's because for each object observed the observer will need to have a intrusive list hook; storage of those hooks becomes an interesting challenge./- `folly::ObserverContainer`  provides scaffolding that ensures correctness around observers being added or removed during processing of an event, enables observers to subscribe to events./- `folly::ObserverContainer` enables observers to know what objects they're currently attached to. A `shared_ptr` in comparison wouldn't provide this — an observer monitoring multiple objects won't know which objects it is attached to at any point in time without the additional signaling provided by `ObserverContainer`.//**How to use `folly::ObserverContainer`**://The following defines the steps that would be used to add support for observers to a given class and then instantiate an observer.//1. Define an interface that contains methods corresponding to the events that the observers should be able to receive. In parallel, define an enum containing each of these events./2. Change the class for the object being observed so that it has a member of type `folly::ObserverContainer`. Add calls to `invokeInterfaceMethod` at the points where observer events should be delivered./3. Single object observers can derive from `folly::ObserverContainer::ManagedObserver`. Instantiate an object of the derived class, attach it to a list, and begin getting events./4. If the observer is destroyed before the subject, the observer will remove itself from the list.//**Caveats and TODO**://`folly::ObserverContainer` has a few key limitations://- There is no thread safety (although it is possible to use policy to conditionally add such support). This means that all changes to the container must occur from a single thread./- `ManagedObserver` assumes that the observer is driven exclusively by the same thread as the thread that controls the object being observed. If that's not the case, `Observer` needs to be used instead.//The following will be added in subsequent diffs://- Support for move construction of observed objects, and support for move and destroy contexts./- A helper class similar to `ManagedObserver` that supports observing multiple objects at once (right now, doing this requires deriving from `Observer` directly)/- Documentation added to `ObserverContainer.h` that tells you how to use it — I'm delaying adding this until the entire library is built out since a few of the recommendations that I will make in the planned documentation cannot be supported until some of the subsequent diffs land.//Reviewed By: nspring//Differential Revision: D27062840//fbshipit-source-id: c2351286e93bc95aa7eabf222375713559669347",https://github.com/facebook/folly/commit/c1e9a8ee561d6191fe15633af31948ade80d726a,4524181,facebook/folly,False,False
1,d9ade0d1ed852bf64f17a3ed5846c9b41bbe84ba,"[tests] [9/n] Move memory leak test to Pulse//Summary: This test is about when an object gets released using a handler block. This is a pattern that infer can't handle. However, in the example, we don't report a leak because we pass observer to a skipped function.//Reviewed By: jvillard//Differential Revision: D32314226//fbshipit-source-id: fc4304e78",https://github.com/facebook/infer/commit/d9ade0d1ed852bf64f17a3ed5846c9b41bbe84ba,29857799,facebook/infer,False,False
2,0854371ab02ddbaf979c37e613e5a913dd477a66,"Functorize Implicit_instantiation module//Summary:/Instead of passing around functions directly and forcing every user of the Implicit_instantiation module to add code for their use case into the Implicit_instantiation module, this diff turns that module into a functor that follows the [observer pattern](https://en.wikipedia.org/wiki/Observer_pattern).//The struct passed in describes how to handle each case in Pierce's algorithm and the `run` function returns a mapping from type param names to the values those functions return.//I was able to replace both users of the module (tests and post-inference run), which got the testing-specific and post-inference-specific code out of the module.//It will be easy to make a new struct to be used during inference when we are further along in the local inference project//Reviewed By: panagosg7//Differential Revision: D26210127//fbshipit-source-id: e9b4c76484e90fce3f474ad6811e994ef993e977",https://github.com/facebook/flow/commit/0854371ab02ddbaf979c37e613e5a913dd477a66,25880891,facebook/flow,False,False
3,62e39c39ff3cd477466353046d1dadbd1cfb14ee,"BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED//The assertion happens when: (i) the master and slave are configured to/use the semisync plugin; (ii) the DBA disables semisync on the master;/(iii) and he also unsets the option to wait for slaves ACK even if the/semisync slave count reaches 0 during the waiting period. This/combination of factors makes the server run into an assertion as soon/as the last semisync slave disconnects and its dump thread exits./  /The root of the problem is the fact that when the dump thread/disconnects and calls the observer hook transmit_stop, which ends up/calling ReplSemiSyncMaster::remove_slave, there is no check whether/the master has already disabled semisync or not. If it has, the then a/second call to the switch_off member function must be avoided./  /The quick fix is to avoid calling switch_off if the DBA has disabled/the semisync plugin interactively on the master. Also, the switch_off/member function should only be called if the plugin has not been/switched off already. This is basically the pattern throughout the/rest of the semisync plugin and no other calls seem vulnerable to/similar crashes/assertions.//(This a backport of the patch to 5.5, which is also vulnerable.)",https://github.com/facebook/mysql-5.6/commit/62e39c39ff3cd477466353046d1dadbd1cfb14ee,9454675,facebook/mysql-5.6,False,False
4,bf325ccd573bba7f7368f1db8baa668afea38c39,"BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED//The crash happens when: (i) the master and slave are configured to use/the semisync plugin; (ii) the DBA disables semisync on the master;/(iii) and he also unsets the option to wait for slaves ACK even if the/semisync slave count reaches 0 during the waiting period. This/combination of factors makes the server run into an assertion and/crash as soon as the last semisync slave disconnects and its dump/thread exits.//The root of the problem is the fact that when the dump thread/disconnects and calls the observer hook transmit_stop, which ends up/calling ReplSemiSyncMaster::remove_slave, there is no check whether/the master has already disabled semisync or not. If it has, the then a/second call to the switch_off member function must be avoided.//The quick fix is to avoid calling switch_off if the DBA has disabled/the semisync plugin interactively on the master. Also, the switch_off/member function should only be called if the plugin has not been/switched off already. This is basically the pattern throughout the/rest of the semisync plugin and no other calls seem vulnerable to/similar crashes/assertions.",https://github.com/facebook/mysql-5.6/commit/bf325ccd573bba7f7368f1db8baa668afea38c39,9454675,facebook/mysql-5.6,False,False
0,075de45076be8634339d20ecd0f8a92bb7b4ae3a,"Bump react-refresh from 0.11.0 to 0.14.0 in /desktop (#4540)//Summary:/Bumps [react-refresh](https://github.com/facebook/react/tree/HEAD/packages/react) from 0.11.0 to 0.14.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/releases"">react-refresh's releases</a>.</em></p>/<blockquote>/<h2>v0.14.0</h2>/<p>See <a href=""http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html"">http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html</a>.</p>/<h2>v0.13.3</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>clipPath</code> element and attribute for SVG</li>/<li>Improved warnings for deprecated methods in plain JS classes</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Loosened <code>dangerouslySetInnerHTML</code> restrictions so <code>{__html: undefined}</code> will no longer throw</li>/<li>Fixed extraneous context warning with non-pure <code>getChildContext</code></li>/<li>Ensure <code>replaceState(obj)</code> retains prototype of <code>obj</code></li>/</ul>/<h3>React with Add-ons</h3>/<h3>Bug Fixes</h3>/<ul>/<li>Test Utils: Ensure that shallow rendering works when components define <code>contextTypes</code></li>/</ul>/<h2>v0.13.2</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>strokeDashoffset</code>, <code>flexPositive</code>, <code>flexNegative</code> to the list of unitless CSS properties</li>/<li>Added support for more DOM properties:/<ul>/<li><code>scoped</code> - for <code>&lt;style&gt;</code> elements</li>/<li><code>high</code>, <code>low</code>, <code>optimum</code> - for <code>&lt;meter&gt;</code> elements</li>/<li><code>unselectable</code> - IE-specific property to prevent user selection</li>/</ul>/</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Fixed a case where re-rendering after rendering null didn't properly pass context</li>/<li>Fixed a case where re-rendering after rendering with <code>style={null}</code> didn't properly update <code>style</code></li>/<li>Update <code>uglify</code> dependency to prevent a bug in IE8</li>/<li>Improved warnings</li>/</ul>/<h3>React with Add-Ons</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Immutabilty Helpers: Ensure it supports <code>hasOwnProperty</code> as an object key</li>/</ul>/<h3>React Tools</h3>/<ul>/<li>Improve documentation for new options</li>/</ul>/<h2>v0.13.1</h2>/<h3>React Core</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Don't throw when rendering empty <code>&lt;select&gt;</code> elements</li>/<li>Ensure updating <code>style</code> works when transitioning from <code>null</code></li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/blob/main/CHANGELOG.md"">react-refresh's changelog</a>.</em></p>/<blockquote>/<h2>0.14.0 (October 7, 2015)</h2>/<h3>Major changes</h3>/<ul>/<li>Split the main <code>react</code> package into two: <code>react</code> and <code>react-dom</code>.  This paves the way to writing components that can be shared between the web version of React and React Native.  This means you will need to include both files and some functions have been moved from <code>React</code> to <code>ReactDOM</code>.</li>/<li>Addons have been moved to separate packages (<code>react-addons-clone-with-props</code>, <code>react-addons-create-fragment</code>, <code>react-addons-css-transition-group</code>, <code>react-addons-linked-state-mixin</code>, <code>react-addons-perf</code>, <code>react-addons-pure-render-mixin</code>, <code>react-addons-shallow-compare</code>, <code>react-addons-test-utils</code>, <code>react-addons-transition-group</code>, <code>react-addons-update</code>, <code>ReactDOM.unstable_batchedUpdates</code>).</li>/<li>Stateless functional components - React components were previously created using React.createClass or using ES6 classes.  This release adds a <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">new syntax</a> where a user defines a single <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">stateless render function</a> (with one parameter: <code>props</code>) which returns a JSX element, and this function may be used as a component.</li>/<li>Refs to DOM components as the DOM node itself. Previously the only useful thing you can do with a DOM component is call <code>getDOMNode()</code> to get the underlying DOM node. Starting with this release, a ref to a DOM component <em>is</em> the actual DOM node. <strong>Note that refs to custom (user-defined) components work exactly as before; only the built-in DOM components are affected by this change.</strong></li>/</ul>/<h3>Breaking changes</h3>/<ul>/<li><code>React.initializeTouchEvents</code> is no longer necessary and has been removed completely. Touch events now work automatically.</li>/<li>Add-Ons: Due to the DOM node refs change mentioned above, <code>TestUtils.findAllInRenderedTree</code> and related helpers are no longer able to take a DOM component, only a custom component.</li>/<li>The <code>props</code> object is now frozen, so mutating props after creating a component element is no longer supported. In most cases, <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> should be used instead. This change makes your components easier to reason about and enables the compiler optimizations mentioned above.</li>/<li>Plain objects are no longer supported as React children; arrays should be used instead. You can use the <a href=""https://reactjs.org/docs/create-fragment.html""><code>createFragment</code></a> helper to migrate, which now returns an array.</li>/<li>Add-Ons: <code>classSet</code> has been removed. Use <a href=""https://github.com/JedWatson/classnames"">classnames</a> instead.</li>/<li>Web components (custom elements) now use native property names.  Eg: <code>class</code> instead of <code>className</code>.</li>/</ul>/<h3>Deprecations</h3>/<ul>/<li><code>this.getDOMNode()</code> is now deprecated and <code>ReactDOM.findDOMNode(this)</code> can be used instead. Note that in the common case, <code>findDOMNode</code> is now unnecessary since a ref to the DOM component is now the actual DOM node.</li>/<li><code>setProps</code> and <code>replaceProps</code> are now deprecated. Instead, call ReactDOM.render again at the top level with the new props.</li>/<li>ES6 component classes must now extend <code>React.Component</code> in order to enable stateless function components. The <a href=""https://reactjs.org/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages"">ES3 module pattern</a> will continue to work.</li>/<li>Reusing and mutating a <code>style</code> object between renders has been deprecated. This mirrors our change to freeze the <code>props</code> object.</li>/<li>Add-Ons: <code>cloneWithProps</code> is now deprecated. Use <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> instead (unlike <code>cloneWithProps</code>, <code>cloneElement</code> does not merge <code>className</code> or <code>style</code> automatically; you can merge them manually if needed).</li>/<li>Add-Ons: To improve reliability, <code>CSSTransitionGroup</code> will no longer listen to transition events. Instead, you should specify transition durations manually using props such as <code>transitionEnterTimeout={500}</code>.</li>/</ul>/<h3>Notable enhancements</h3>/<ul>/<li>Added <code>React.Children.toArray</code> which takes a nested children object and returns a flat array with keys assigned to each child. This helper makes it easier to manipulate collections of children in your <code>render</code> methods, especially if you want to reorder or slice <code>this.props.children</code> before passing it down. In addition, <code>React.Children.map</code> now returns plain arrays too.</li>/<li>React uses <code>console.error</code> instead of <code>console.warn</code> for warnings so that browsers show a full stack trace in the console. (Our warnings appear when you use patterns that will break in future releases and for code that is likely to behave unexpectedly, so we do consider our warnings to be “must-fix” errors.)</li>/<li>Previously, including untrusted objects as React children <a href=""http://danlec.com/blog/xss-via-a-spoofed-react-element"">could result in an XSS security vulnerability</a>. This problem should be avoided by properly validating input at the application layer and by never passing untrusted objects around your application code. As an additional layer of protection, <a href=""https://github-redirect.dependabot.com/facebook/react/pull/4832"">React now tags elements</a> with a specific <a href=""http://www.2ality.com/2014/12/es6-symbols.html"">ES2015 (ES6) <code>Symbol</code></a> in browsers that support it, in order to ensure that React never considers untrusted JSON to be a valid element. If this extra security protection is important to you, you should add a <code>Symbol</code> polyfill for older browsers, such as the one included by <a href=""https://babeljs.io/docs/usage/polyfill/"">Babel’s polyfill</a>.</li>/<li>When possible, React DOM now generates XHTML-compatible markup.</li>/<li>React DOM now supports these standard HTML attributes: <code>capture</code>, <code>challenge</code>, <code>inputMode</code>, <code>is</code>, <code>keyParams</code>, <code>keyType</code>, <code>minLength</code>, <code>summary</code>, <code>wrap</code>. It also now supports these non-standard attributes: <code>autoSave</code>, <code>results</code>, <code>security</code>.</li>/<li>React DOM now supports these SVG attributes, which render into namespaced attributes: <code>xlinkActuate</code>, <code>xlinkArcrole</code>, <code>xlinkHref</code>, <code>xlinkRole</code>, <code>xlinkShow</code>, <code>xlinkTitle</code>, <code>xlinkType</code>, <code>xmlBase</code>, <code>xmlLang</code>, <code>xmlSpace</code>.</li>/<li>The <code>image</code> SVG tag is now supported by React DOM.</li>/<li>In React DOM, arbitrary attributes are supported on custom elements (those with a hyphen in the tag name or an <code>is=&quot;...&quot;</code> attribute).</li>/<li>React DOM now supports these media events on <code>audio</code> and <code>video</code> tags: <code>onAbort</code>, <code>onCanPlay</code>, <code>onCanPlayThrough</code>, <code>onDurationChange</code>, <code>onEmptied</code>, <code>onEncrypted</code>, <code>onEnded</code>, <code>onError</code>, <code>onLoadedData</code>, <code>onLoadedMetadata</code>, <code>onLoadStart</code>, <code>onPause</code>, <code>onPlay</code>, <code>onPlaying</code>, <code>onProgress</code>, <code>onRateChange</code>, <code>onSeeked</code>, <code>onSeeking</code>, <code>onStalled</code>, <code>onSuspend</code>, <code>onTimeUpdate</code>, <code>onVolumeChange</code>, <code>onWaiting</code>.</li>/<li>Many small performance improvements have been made.</li>/<li>Many warnings show more context than before.</li>/<li>Add-Ons: A <a href=""https://github-redirect.dependabot.com/facebook/react/pull/3355""><code>shallowCompare</code></a> add-on has been added as a migration path for <code>PureRenderMixin</code> in ES6 classes.</li>/<li>Add-Ons: <code>CSSTransitionGroup</code> can now use <a href=""https://github.com/facebook/react/blob/48942b85/docs/docs/10.1-animation.md#custom-classes"">custom class names</a> instead of appending <code>-enter-active</code> or similar to the transition name.</li>/</ul>/<h3>New helpful warnings</h3>/<ul>/<li>React DOM now warns you when nesting HTML elements invalidly, which helps you avoid surprising errors during updates.</li>/<li>Passing <code>document.body</code> directly as the container to <code>ReactDOM.render</code> now gives a warning as doing so can cause problems with browser extensions that modify the DOM.</li>/<li>Using multiple instances of React together is not supported, so we now warn when we detect this case to help you avoid running into the resulting problems.</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/facebook/react/commit/3603d45157e6c1b21cda7ed96683408b319ae619""><code>3603d45</code></a> v0.14.0</li>/<li><a href=""https://github.com/facebook/react/commit/693dd3567b6648fdccfd602702192bb22f405e63""><code>693dd35</code></a> Update to fbjs@0.3</li>/<li><a href=""https://github.com/facebook/react/commit/4a4174b9e8d1f554a5368da5df274746a8e332d1""><code>4a4174b</code></a> 0.14.0-rc1</li>/<li><a href=""https://github.com/facebook/react/commit/c04d02e5e8de18436ac95037ab856ac5ba7d29b9""><code>c04d02e</code></a> Add warnings to React module</li>/<li><a href=""https://github.com/facebook/react/commit/52b4c9eabf6c5930a906df4584c8480db5ec6e9e""><code>52b4c9e</code></a> Upgrade to fbjs, fbjs-scripts @ 0.2</li>/<li><a href=""https://github.com/facebook/react/commit/b38509cade7e5e31bffd2da93fb0213ad58681bf""><code>b38509c</code></a> Merge pull request <a href=""https://github.com/facebook/react/tree/HEAD/packages/react/issues/4540"">https://github.com/facebook/flipper/issues/4540</a> from scottburch/ie8-fix</li>/<li><a href=""https://github.com/facebook/react/commit/ecb34de5747a6d4578dc4be920a033db9f81370f""><code>ecb34de</code></a> Upgrade ESLint, fix code</li>/<li><a href=""https://github.com/facebook/react/commit/3f6bca7b1638ee940bb01989377abc9864edb6fe""><code>3f6bca7</code></a> 0.14.0-beta3</li>/<li><a href=""https://github.com/facebook/react/commit/5f01a90954405d26439d00af2b6f5dbfa535ef9d""><code>5f01a90</code></a> Update addons.js</li>/<li><a href=""https://github.com/facebook/react/commit/1da2b29897781d3faa7b555e4962d7eb5b6a2707""><code>1da2b29</code></a> added suggested comment to get file to pass es-lint</li>/<li>Additional commits viewable in <a href=""https://github.com/facebook/react/commits/v0.14.0/packages/react"">compare view</a></li>/</ul>/</details>/<details>/<summary>Maintainer changes</summary>/<p>This version was pushed to npm by <a href=""https://www.npmjs.com/~gnoff"">gnoff</a>, a new releaser for react-refresh since your current version.</p>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=react-refresh&package-manager=npm_and_yarn&previous-version=0.11.0&new-version=0.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4540//Reviewed By: ivanmisuno//Differential Revision: D44215184//Pulled By: mweststrate//fbshipit-source-id: e8f33dfbfbe887d49c27f2dabbbc1548de3d10e9",https://github.com/facebook/flipper/commit/075de45076be8634339d20ecd0f8a92bb7b4ae3a,129283183,facebook/flipper,False,False
1,811f19a9fa39c7b3aa4bd470c66beaa7673b5b40,"improvements to Function.prototype.bind, call and apply//Summary:/`Function.prototype.bind`, `Function.prototype.call` and `Function.prototype.apply` have magic implementations ([bind](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.bind), [call](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.call), [apply](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply)).//This diff adds special types for these 3 functions, which can only be created via the internal `Function$Prototype$Call` (etc) annotations in `lib/core.js`.//This means that flow now actually looks these things up on the prototype chain, and can use them as properties instead of just as method calls. So, for example, `func.call.apply(...)` now works.//Also, the pattern match on the args was too restrictive, and didn't handle missing args like `func.call()`.//Reviewed By: gabelevi//Differential Revision: D2727651//fb-gh-sync-id: 8ec265a68a906d5d9055533f2982547ac1c20acb",https://github.com/facebook/flow/commit/811f19a9fa39c7b3aa4bd470c66beaa7673b5b40,25880891,facebook/flow,False,False
2,4e78e6ade1604fba2d49abfc2582a6d1e34d12cf,let setImmediate callback return mixed instead of void//Summary: Fixes https://github.com/facebook/flow/issues/1080//Roughly consistent with the pattern we've started moving to for other callbacks like Array.prototype.forEach (except I think we should prefer `mixed` over `any` just to discourage `any` usage).//Reviewed By: gabelevi//Differential Revision: D2642415//fb-gh-sync-id: 47d223c05cba5371dbf24dc5440cf8fec62997ba,https://github.com/facebook/flow/commit/4e78e6ade1604fba2d49abfc2582a6d1e34d12cf,25880891,facebook/flow,False,False
3,02d1bcc047e54297fc8f8dae41f1966f55d62496,"Modified deepFreezeAndThrowOnMutationInDev to use Object.prototype.ha… (#19598)//Summary:/This PR fixes a bug in `deepFreezeAndThrowOnMutationInDev` which did not take into account that objects passed to it may have been created with `Object.create(null)` and thus may not have a prototype. Such objects don't have the methods `hasOwnProperty`, `__defineGetter__`, or `__defineSetter__` on the instance.//I ran into an unrecoverable error in React Native when passing this type of object across the bridge because `deepFreezeAndThrowOnMutationInDev` attempts to call `object.hasOwnProperty(key)`, `object.__defineGetter__` and `object__defineSetter__` on objects passed to it. But my object instance does not have these prototype methods.//Changes:/* Defined `Object.prototype.hasOwnProperty` as a `const` (pattern used elsewhere in React Native)/* Modified calls to `object.hasOwnProperty(key)` to use `hasOwnProperty.call(object, key)` (Per ESLint rule [here](https://eslint.org/docs/rules/no-prototype-builtins))/* Modified calls to deprecated methods `object.__defineGetter__` and `object.__defineSetter__` to instead use `Object.defineProperty` to define get and set methods on the object. (Per guidance on [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__))/* Added a new test to `deepFreezeAndThrowOnMutationInDev-test` to verify the fix.//I tried to create a reproducible example to post to Snack by passing prototype-less objects to a `Text` component, in various ways, but they appear to be converted to plain objects before crossing the bridge and therefore they do not throw an error.//However, I was able to create a new test to reproduce the issue. I added the following test to `deepFreezeAndThrowOnMutationInDev-test`://```JavaScript/it('should not throw on object without prototype', () => {/    __DEV__ = true;/    var o = Object.create(null);/    o.key = 'Value';/    expect(() => deepFreezeAndThrowOnMutationInDev(o)).not.toThrow();/  });/```//The changes in this PR include this new test.//ESLint test produced no change in Error count (3) or Warnings (671)//N/A/Other areas with _possibly_ the same issue:/https://github.com/facebook/react-native/blob/c6b96c0df789717d53ec520ad28ba0ae00db6ec2/Libraries/vendor/core/mergeInto.js#L50/https://github.com/facebook/react-native/blob/8dc3ba0444c94d9bbb66295b5af885bff9b9cd34/Libraries/ReactNative/requireNativeComponent.js#L134// [GENERAL] [BUGFIX] [Libraries/Utilities/deepFreezeAndThrowOnMutationInDev] -Fix for compatibility with objects without a prototype./Closes https://github.com/facebook/react-native/pull/19598//Differential Revision: D8310845//Pulled By: TheSavior//fbshipit-source-id: 020c414a1062a637e97f9ee99bf8e5ba2d1fcf4f",https://github.com/facebook/react-native/commit/02d1bcc047e54297fc8f8dae41f1966f55d62496,29028775,facebook/react-native,False,False
4,d287a431956f220de0c13cd2f8c6a0c0d87ef83e,"Bump eslint-plugin-import from 2.24.2 to 2.25.2 in /desktop (#3031)//Summary:/Bumps [eslint-plugin-import](https://github.com/import-js/eslint-plugin-import) from 2.24.2 to 2.25.2./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/import-js/eslint-plugin-import/releases"">eslint-plugin-import's releases</a>.</em></p>/<blockquote>/<h2>v2.25.2</h2>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.25.1...v2.25.2"">https://github.com/import-js/eslint-plugin-import/compare/v2.25.1...v2.25.2</a></p>/<h2>v2.25.1</h2>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.25.0...v2.25.1"">https://github.com/import-js/eslint-plugin-import/compare/v2.25.0...v2.25.1</a></p>/<h2>v2.25.0</h2>/<h2>What's Changed</h2>/<ul>/<li>[Tests] use ESLint class in <code>cli</code> test by <a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2208"">import-js/eslint-plugin-import#2208</a></li>/<li>[New] <code>no-unused-modules</code>: add eslint v8 support by <a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2194"">import-js/eslint-plugin-import#2194</a></li>/<li><code>no-restricted-paths</code> support glob patterns by <a href=""https://github.com/stropho""><code>@​stropho</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2219"">import-js/eslint-plugin-import#2219</a></li>/<li>[New] <code>no-unresolved</code>: add <code>caseSensitiveStrict</code> option by <a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1262"">import-js/eslint-plugin-import#1262</a></li>/<li>[New] no-unused-modules: support dynamic imports [2] by <a href=""https://github.com/Hypnosphi""><code>@​Hypnosphi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2212"">import-js/eslint-plugin-import#2212</a></li>/<li>[New] <code>no-unused-modules</code>: support dynamic imports  by <a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1660"">import-js/eslint-plugin-import#1660</a></li>/<li>[Refactor] switch to an internal replacement for <code>pkg-up</code> and <code>read-pkg-up</code> by <a href=""https://github.com/mgwalker""><code>@​mgwalker</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2047"">import-js/eslint-plugin-import#2047</a></li>/<li>[Fix] no-unresolved: ignore type-only imports by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2220"">import-js/eslint-plugin-import#2220</a></li>/<li>[Fix] <code>order</code>: Fix import ordering in TypeScript module declarations by <a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2226"">import-js/eslint-plugin-import#2226</a></li>/<li>[Tests] fix skip usage by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2232"">import-js/eslint-plugin-import#2232</a></li>/<li>[Refactor] <code>no-unresolved</code>, <code>no-extraneous-dependencies</code>: moduleVisitor usage by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2233"">import-js/eslint-plugin-import#2233</a></li>/<li>Resolve extended TypeScript configuration files by <a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2240"">import-js/eslint-plugin-import#2240</a></li>/<li>[New] Support for ESLint v8 by <a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2191"">import-js/eslint-plugin-import#2191</a></li>/<li>Release 2.25.0 by <a href=""https://github.com/ljharb""><code>@​ljharb</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2253"">import-js/eslint-plugin-import#2253</a></li>/</ul>/<h2>New Contributors</h2>/<ul>/<li><a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2194"">import-js/eslint-plugin-import#2194</a></li>/<li><a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1262"">import-js/eslint-plugin-import#1262</a></li>/<li><a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1660"">import-js/eslint-plugin-import#1660</a></li>/<li><a href=""https://github.com/mgwalker""><code>@​mgwalker</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2047"">import-js/eslint-plugin-import#2047</a></li>/<li><a href=""https://github.com/jablko""><code>@​jablko</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2220"">import-js/eslint-plugin-import#2220</a></li>/<li><a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2226"">import-js/eslint-plugin-import#2226</a></li>/<li><a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2240"">import-js/eslint-plugin-import#2240</a></li>/</ul>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.0"">https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.0</a></p>/</blockquote>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/import-js/eslint-plugin-import/blob/main/CHANGELOG.md"">eslint-plugin-import's changelog</a>.</em></p>/<blockquote>/<h2>[2.25.2] - 2021-10-12</h2>/<h3>Fixed</h3>/<ul>/<li>[Deps] update <code>eslint-module-utils</code> for real this time (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2255"">https://github.com/facebook/flipper/issues/2255</a>)</li>/</ul>/<h2>[2.25.1] - 2021-10-11</h2>/<h3>Fixed</h3>/<ul>/<li>[Deps] update <code>eslint-module-utils</code></li>/</ul>/<h2>[2.25.0] - 2021-10-11</h2>/<h3>Added</h3>/<ul>/<li>Support <code>eslint</code> v8 (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2191"">https://github.com/facebook/flipper/issues/2191</a>, thanks [<a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a>])</li>/<li>[<code>no-unresolved</code>]: add <code>caseSensitiveStrict</code> option (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/1262"">https://github.com/facebook/flipper/issues/1262</a>, thanks [<a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a>])</li>/<li>[<code>no-unused-modules</code>]: add eslint v8 support (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2194"">https://github.com/facebook/flipper/issues/2194</a>, thanks [<a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a>])</li>/<li>[<code>no-restricted-paths</code>]: add/restore glob pattern support (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2219"">https://github.com/facebook/flipper/issues/2219</a>, thanks [<a href=""https://github.com/stropho""><code>@​stropho</code></a>])</li>/<li>[<code>no-unused-modules</code>]: support dynamic imports (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/1660"">https://github.com/facebook/flipper/issues/1660</a>, <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2212"">https://github.com/facebook/flipper/issues/2212</a>, thanks [<a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a>], [<a href=""https://github.com/aladdin-add""><code>@​aladdin-add</code></a>], [<a href=""https://github.com/Hypnosphi""><code>@​Hypnosphi</code></a>])</li>/</ul>/<h3>Fixed</h3>/<ul>/<li>[<code>no-unresolved</code>]: ignore type-only imports (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2220"">https://github.com/facebook/flipper/issues/2220</a>, thanks [<a href=""https://github.com/jablko""><code>@​jablko</code></a>])</li>/<li>[<code>order</code>]: fix sorting imports inside TypeScript module declarations (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2226"">https://github.com/facebook/flipper/issues/2226</a>, thanks [<a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a>])</li>/<li>[<code>default</code>], <code>ExportMap</code>: Resolve extended TypeScript configuration files (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2240"">https://github.com/facebook/flipper/issues/2240</a>, thanks [<a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a>])</li>/</ul>/<h3>Changed</h3>/<ul>/<li>[Refactor] switch to an internal replacement for <code>pkg-up</code> and <code>read-pkg-up</code> (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2047"">https://github.com/facebook/flipper/issues/2047</a>, thanks [<a href=""https://github.com/mgwalker""><code>@​mgwalker</code></a>])</li>/<li>[patch] TypeScript config: remove <code>.d.ts</code> from [<code>import/parsers</code> setting] and [<code>import/extensions</code> setting] (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2220"">https://github.com/facebook/flipper/issues/2220</a>, thanks [<a href=""https://github.com/jablko""><code>@​jablko</code></a>])</li>/<li>[Refactor] [<code>no-unresolved</code>], [<code>no-extraneous-dependencies</code>]: moduleVisitor usage (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2233"">https://github.com/facebook/flipper/issues/2233</a>, thanks [<a href=""https://github.com/jablko""><code>@​jablko</code></a>])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/67103e698dcaa02a95f95145d2db6a04f1a573f8""><code>67103e6</code></a> Bump to v2.25.2</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/85739db0614b7b7935d359a8f3054f4b5622fd50""><code>85739db</code></a> [Deps] update <code>eslint-module-utils</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/9cc1654b05459929018bcdec6d7e7e7eae7851cd""><code>9cc1654</code></a> Bump to v2.25.1</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/6bdab3189da146c635573946ad650f4e738a3469""><code>6bdab31</code></a> [Deps] update <code>eslint-module-utils</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/b0131d2757bb28e8e1eb3f34670a2c59a3d7b9ff""><code>b0131d2</code></a> Bump to v2.25.0</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/7463de2aa3389ffb40dee465b1ec763bc4382361""><code>7463de2</code></a> utils: v2.7.0</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/900ac9a1856c4222756ba95c1b25d7292ec718a4""><code>900ac9a</code></a> [resolvers/webpack] [deps] update <code>is-core-module</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/c117be532152af7f55675607a92339361fe0968b""><code>c117be5</code></a> [Dev Deps] update <code>array.prototype.flatmap</code>, <code>glob</code>; remove `babel-preset-es2...</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/0e857b69f860d60d7486462101d5378783e5f079""><code>0e857b6</code></a> [Deps] update <code>array-includes</code>, <code>array.prototype.flat</code>, <code>is-core-module</code>, `is...</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/62e2d883f6a6c57a71aa6594a79ea11ad4a5939a""><code>62e2d88</code></a> [New] Support <code>eslint</code> v8</li>/<li>Additional commits viewable in <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.2"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint-plugin-import&package-manager=npm_and_yarn&previous-version=2.24.2&new-version=2.25.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/3031//Reviewed By: nikoant//Differential Revision: D32246973//Pulled By: mweststrate//fbshipit-source-id: 1224aa02d41312dd779d0d5dae6793e362356f8f",https://github.com/facebook/flipper/commit/d287a431956f220de0c13cd2f8c6a0c0d87ef83e,129283183,facebook/flipper,False,False
5,fd339c84797a69ecafaa1d131dbee609f77d99a9,"Allow strict writes to inexact objects//Summary:/Before this change, any write to an inexact object was forbidden, unless that/object had an own property with the given name or the write matched a/dictionary on that object.//This behavior also differs from ""instance"" types in Flow. In a later diff, I/make a change to model class statics as object types. But we run into this/issue, based on this pattern://```/class A {/  static p: number;/}//class B extends A {/}//B.p = 0; // should be allowed/```//Indeed, for some object `b` with proto `a`, where `a` has some property `p`, as/long as we allow `b <: a`, and we allow `a.p = x`, then we effectively also/allow `b.p = x` through subtyping.//For example, it wouldn't be effective to forbid `B.p = 0` above, because I/could just write this://```/var A_actually_b: Class<A> = B; // allowed by existing rules/A_actually_b.p = 0; // allowed by existing rules/```//This diff makes objects behave like instances, meaning that we allow writes/to objects if the written-to property appears in the prototype chain. To be clear,/this does not allow ""unsealed writes"" which could add arbitrary properties. I'm/calling this kind of write a ""strict write,"" borrowing language from `LookupT`.//Note that this does break the symmetry between ""sealed"" in objects and the/semantics of `Object.sealed` at runtime. However, note that the symmetry is/already broken through subtyping (see above), so if we wanted to model/runtime-sealedness, we should add subtype restrictions similar to those for/exact objects.//Still, maybe we should use a different name in our flags to avoid further/confusion. I'm open to suggestions.//Reviewed By: avikchaudhuri//Differential Revision: D5819897//fbshipit-source-id: e5f137ef7f82b001814db478c3ffcf41e5cc4f93",https://github.com/facebook/flow/commit/fd339c84797a69ecafaa1d131dbee609f77d99a9,25880891,facebook/flow,False,False
6,328b6c0b19fe08557cf410a2023e100a4599e3a4,"WL#5596 MTS//Here is the total cset combining all revisions done since Sep 2010./Comments from the original commits are pasted in reverse chronological order.//   ------------------------------------------------------------/   revno: 3364/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 17:09:22 +0300/   message:/   wl#5569 MTS//   Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained/   one binlog more than expected.//   @ mysql-test/suite/rpl/r/rpl_rotate_logs.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_rotate_logs.test/   Refining a method of verification of the binlog rotation due to its max size:/   we check if the first log has been rotated by comparing its name before and after/   feeding load to the master./   Notice, that as the former so the new current proof methods are not perfect/   as that part of the test really needs to demostrate every binlog file is less than/   @@max_binlog_size./   ------------------------------------------------------------/   revno: 3363/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 14:56:01 +0300/   message:/   updating result files that were left incorrect by the last merge./   ------------------------------------------------------------/   revno: 3362/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-08-18 14:44:59 +0300/   message:/   wl#5569 MTS//   Failure in recovery when binlog-checksum is active./   The reason of the failure was in that parsing of relay log /   by MTS recovery gaps computing/   did not make sure to use the relay-log own FormatDescriptor events that/   contain checksumming info for all events in the log.//   Fixed with taking care to find out the checksum algorithm for every relay log as the first step of/   MTS recovery gaps computing.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-master.opt/   forcing master to checksum.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-slave.opt/   forcing slave to *not* checksum.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum.test/   same as rpl_mixed_mts_rec_crash_safe but to run in master with checksum and slave without own checksum./   The test verifies that checksum does not affect recovery. Lack of own checksumming on slave/   allows to test more scenarios.//   @ sql/rpl_slave.cc/   Search for the checksum algorithm FD is added. /   Notice that the first three events to read is enough to /   find out the master side checksum alg./   ------------------------------------------------------------/   revno: 3361/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-08-17 11:21:23 +0300/   message:/   merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk./   ------------------------------------------------------------/   revno: 3360/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-27 08:56:14 +0100/   message:/   Fixed failure in test rpl_mts_check_concurrency when running in/   the mts collection./   ------------------------------------------------------------/   revno: 3359/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-26 19:46:41 +0100/   message:/   Added a test case that checks if MTS allows to concurrently access the replication/   tables, and as such, concurrently commit transactions that update different/   databases./   ------------------------------------------------------------/   revno: 3358/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 20:08:43 +0100/   message:/   Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid/   cluttering the error log with messages on unsafe execution. /   ------------------------------------------------------------/   revno: 3357/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 19:02:14 +0100/   message:/   This patch contains the following fixes://   . Removed suppressed warning introduced in the wrong test/   case (i.e. rpl_corruption) and put it in the correct one/   (i.e. rpl_row_corruption).//   . Introduced variable to avoid clutering the error log/   with several warning messages on unsafe execution./   ------------------------------------------------------------/   revno: 3356/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-22 11:01:12 +0100/   message:/   This patch has the following changes://   . Specific directories were created for the MTS runs in the default.push./   . Warning message was suppressed in the rpl_corruption.test./   . Annoying debug outputs were removed from the error log. However, this/   is a temporary solution as it forbids to enable traces./   ------------------------------------------------------------/   revno: 3355/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-20 11:56:40 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3354/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-19 22:26:30 +0300/   message:/   wl#5569 MTS//   valgrind reported a stack on rpl_savepoint./   The problem appears to be in that at computing slave_sql_running_state in show_mater_info()/   the sql thread proc_info pointer could refer to a value in a stack that has already gone.//   Fixed with making proc_info to point to a string literal./   ------------------------------------------------------------/   revno: 3353/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-19 17:46:43 +0100/   message:/   Suppressed warning messages that could potentially cause problems while/   running mts crash safe test cases./   ------------------------------------------------------------/   revno: 3352/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-18 21:46:45 +0300/   message:/   wl#5569 MTS//   Cosmetic changes are done to address readability and clearness of source code of the MTS patch.//   @ sql/binlog.cc/   Comments improved.//   @ sql/log_event.cc/   Warning text is improved.//   @ sql/log_event.h/   More comments are added.//   @ sql/rpl_rli.h/   More comments are added.//   @ sql/rpl_slave.cc/   Error constant was changed.//   @ sql/share/errmsg-utf8.txt/   Error constant is changed./   ------------------------------------------------------------/   revno: 3351/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-18 14:52:44 +0300/   message:/   wl#5569 MTS//   Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe./   ------------------------------------------------------------/   revno: 3350/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-17 00:51:45 +0300/   message:/   wl#5569 MTS//   fixing build issue for embedded./   Public visibility for Rows_log_event::do_apply_event() is restored./   ------------------------------------------------------------/   revno: 3349/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-16 20:08:31 +0300/   message:/   wl#5569 MTS//   The patch contains improvements after code review./   Changes are mostly consmetic.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   results updated.//   @ sql/binlog.cc/   correcting comments.//   @ sql/field.cc/   renaming.//   @ sql/log_event.cc/   renaming and separating out a block of code in Log_event::get_slave_worker()/   into a new method of Slave_job_group class;/   some cleanup.//   @ sql/log_event.h/   Extending and improving comments;/   renaming to follow is_, get_, set_ pattern;/   restoring the private access to do_apply_event() in Rows_log_event.//   @ sql/mysqld.cc/   removing extra declaration.//   @ sql/rpl_info_factory.cc/   Minor comments is added.//   @ sql/rpl_rli.cc/   renaming to make _cnt suffix to all entities that have counter meaning in mts;/   improving comments.//   @ sql/rpl_rli.h/   Renaming, and improving comments for the new members to Relay_log_info.//   @ sql/rpl_rli_pdb.cc/   remaning.//   @ sql/rpl_rli_pdb.h/   Improving comments readability through adding legengs/   defining MTS specific abbreviations.//   @ sql/rpl_slave.cc/   Renaming;/   minor cleanup in sql_slave_killed();/   adding comments on Seconds_behind_master update policy with MTS.//   @ sql/share/errmsg-utf8.txt/   Improving text of few errors./   ------------------------------------------------------------/   revno: 3348/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-16 02:11:11 +0300/   message:/   bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP//   MTS stopped with an error in the middle of the test./   The reason is that a group of events from the slave itself was processed partly to /   modify the group position. In the following restart the wrong group bondary made slave/   either to error out or assert.//   Fixed with locating a possible race condition allowin Coordinator to ignore/   actual failed status of a Worker./   So in the case of the test, the slave server group can't be started./   Notice, this is a trial patch since I can't catch the failure on available to me hosts at all.//   @ sql/rpl_rli_pdb.cc/   Changing the running status of the Worker before it releases assigned entries./   That ensure that the waiting in wait_for_workers_to_finish() Coordinator exits the function/   with a negative result and therefore stops without attempting to apply an event/   due to which it attempted synchronization./   Couple of diagnostics into error log are added. They may be removed in short while but/   currently might be helpful to provide details if the failure won't disappear after this push./   ------------------------------------------------------------/   revno: 3347/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-07-14 12:40:06 +0300/   message:/   WL#5569 MTS//   further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 /   revealed a race condition in that Coordinator might miss to catch not-running status/   for a Worker. That made Coordinator to skip only a part of a group of the slave server own events/   so the slave stops at not the bondary of a group.//   Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release.//   TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE/   if one is run at time of skipping self-originated events./   However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160.//   @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result/   results are updated.//   @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test/   tests is updated with a new text of a suppression.//   @ sql/log_event.cc/   Adding clarifying text to an error message when parallel execution fails.//   @ sql/rpl_rli_pdb.cc/   Moving marking of the errored-out Worker as failed prior to its APH entries release./   That ensures Coordinator always finds the non-running status in a case it has to/   know that (wait_for_workers_to_finish()).//   @ sql/share/errmsg-utf8.txt/   Adding a format specifier for a clarifying text./   ------------------------------------------------------------/   revno: 3346/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-07-14 08:03:55 +0100/   message:/   Post-push fixes for WL#5569//   Injecting faults while updating a myisam table requires to flush the/   changes before committing suicide. So we have introduced the follwing/   code://   DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"",/   -                       DBUG_SUICIDE(););/   +           sql_print_information(""Crashing crash_after_commit_and_update_pos."");/   +           flush_info(TRUE);/   +           DBUG_SUICIDE();//   Besides we improved some comments./   ------------------------------------------------------------/   revno: 3345/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-13 16:23:57 +0100/   message:/   WL#5569//   @ mysql-test/extra/rpl_tests/rpl_mts_crash_safe.inc/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/include/not_slave_worker_info_table.inc/   Removed this feature as option --slave-worker-info-repository was removed too.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_row_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mixed_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mts_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/rpl/t/rpl_stm_mts_rec_crash_safe-slave.opt/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ mysql-test/suite/sys_vars/t/slave_worker_info_repository_basic.test/   Removed this test case as option --slave-worker-info-repository was removed too.//   @ sql/binlog.cc/   Improved code as requested by reviewers.//   @ sql/lock.cc/   Removed mistake that got into sql/lock.cc after merging with trunk.//   @ sql/log_event.cc/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_info.h/   Updated doxygen comments and removed a change to avoid conflicts when merging with trunk.//   @ sql/rpl_info_factory.h/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository.//   @ sql/rpl_rli.cc/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_rli_pdb.cc/   Improved the code and introduced parameter force in commit_positions/   function to determine if flush must be executed regardless of sync options.//   @ sql/rpl_rli_pdb.h/   Introduced parameter force in commit_positions function to determine if/   flush must be executed regardless of sync options.//   @ sql/rpl_slave.cc/   Removed duplicated code.//   @ sql/sql_parse.cc/   Reintroduced flag removed by mistake when merging with trunk./   See also sql/lock.cc.//   @ sql/sys_vars.cc/   Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository./   ------------------------------------------------------------/   revno: 3344/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-13 00:10:43 +0300/   message:/   wl#5569 MTS//   merge trunk -> wl5569-tree/   ------------------------------------------------------------/   revno: 3343/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-12 23:36:17 +0300/   message:/   wl#5569 MTS//   adding suppression due to expected warning to rpl_circurlar_for_4_hosts;/   decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format./   ------------------------------------------------------------/   revno: 3342/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-12 14:46:23 +0300/   message:/   WL#5569 MTS///   Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like/   http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382.//   The reason of the mismatch was that when having two group of events to execute,/   the first for a Worker and the 2nd for Coordinator, Coordinator waited for/   the 1st group completion but did not verify success of synchronization./   So in a case of the failed applying of the 1st group processing of the 2nd /   could find an inconsistent state to end up with a segfault (even though only/   the mismatch has been seen so far).//   @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result/   results are updated.//   @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test/   Test is updated to include a part specific to MTS./   While all former conditions hold, the new section makes sure B server/   has two group of events to send which was not previously guaraneed nor necessary./   Further, when the first of the two fails with Duplicate entry at applying of the 2nd Coordinator/   senses the first failure and gives out the 2nd./   The first error remains to be seen in show-slave-status.//   @ sql/log_event.cc/   Checking wait_for_workers_to_finish() return code in case Coordinator executes a sequential-mode event./   Comments are deployed in few other places where that is unnecessary to do.//   @ sql/rpl_rli_pdb.cc/   Worker marks itself as failed to apply which fact is reported to Coordinator/   also through wait_for_workers_to_finish()./   Coodinator shall check the error code in a branch of a sequential event applying.//   @ sql/rpl_rli_pdb.h/   Adding a new state that Worker sets itself to indiate its failure to apply.//   @ sql/rpl_slave.cc/   Refining an assert as consequence of the new state and its actual setting by Worker./   ------------------------------------------------------------/   revno: 3341/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-10 22:40:01 +0100/   message:/   Avoiding busy waiting when running mts recovery tests./   ------------------------------------------------------------/   revno: 3340/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-09 23:11:58 +0100/   message:/   Removed --slave-checkpoint-period from MTS test cases./   ------------------------------------------------------------/   revno: 3339/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-09 23:08:07 +0100/   message:/   Improved test cases for the WL#5569./   ------------------------------------------------------------/   revno: 3338/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 22:40:52 +0300/   message:/   wl#5569 MTS//   The patch /   refines logics of applying phase of MTS-recovery to always applying events/   that are for Coordinator;/   fixes few tests to make them passable on PB;/   makes GAQ size to be of checkpoint_group value.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test/   attempting to decrease execution time that currently might be too much for some PB hosts.//   @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt/   Making the test to run in parallel mode with Workers having the table as their info storage.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result/   results updated.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test/   masking out the actual value of slave_checkpoint_period.//   @ sql/log_event.cc/   Never skip events that are for Coordinator as indicated by mts_execution_mode().//   @ sql/rpl_rli.h/   Improving comments.//   @ sql/rpl_slave.cc/   Simplifying while condition of the GAQ-progress loop and deploying an/   assert ensuring checkpoint_group parameter and GAQ state are combined correctly./   ------------------------------------------------------------/   revno: 3337/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 07:54:34 +0100/   message:/   Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30./   ------------------------------------------------------------/   revno: 3336/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-08 07:44:35 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3335/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-07-06 12:46:05 +0300/   message:/   wl#5569 MTS//   refining wait for db-hash entry release at event distribution./   The graceful STOP is not accepted at this point so Coordinator continues to/   stay in a loop./   ------------------------------------------------------------/   revno: 3334/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-07-05 20:43:04 +0300/   message:/   bug#12719875 possible MTS recovery issue.//   MTS stopped with an error after failing to apply an event./   It turned out that the event was sceduled incorrectly due to/   earlier stop by Single-Threaded Slave not at the group boundary/   but rather in the middle of it.//   Fixed with forcing CREATE..SELECT be logged as two groups./   The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces.//   @ mysql-test/suite/rpl/r/rpl_parallel_switch_sequential.result/   new results file is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential-slave.opt/   transaction retry is not supported yet by MTS.//   @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test/   Regression test for bug#12719875 is added./   Notice, created tables engine is Innodb also because with MyISAM stop-slave can be actually/   in the middle a group of myisam table events so the following restart fails with a dup key error./   CREATE-SELECT is not tested according to another bug as commented.//   @ sql/log_event.cc/   changing error report style to be actually effective: rli->report() does not make rli->info_thd to return/   from is_error() true./   my_error() message eventually gets to the show-slave-status sql-error at the end of slave sql thread.//   @ sql/rpl_slave.cc/   fixing a possible hanging that can happen due to errored-out worker at time of gaq is full and/   the worker was the first to update it;/   refining  asserts;/   shifting stop_workers() routine to a point where slave sql has not reset its errors which pleases/   a refined assert in slave_stop_workers(rli). /   ------------------------------------------------------------/   revno: 3333/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-07-04 18:14:09 +0300/   message:/   wl#5569 MTS//   Adding a rule to run PB with all suites in MTS with binlog-format ROW.//   @ .bzr-mysql/default.conf/   restoring commits@.//   @ mysql-test/collections/default.push/   adding a rule to run all suites in MTS with binlog-format ROW./   ------------------------------------------------------------/   revno: 3332/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-03 23:29:34 +0300/   message:/   wl5569 MTS//   cleanup in one file.//   @ sql/rpl_rli.cc/   removing traces of a mutex that was served in prototyping support for temporary tables./   ------------------------------------------------------------/   revno: 3331/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-07-03 23:16:02 +0300/   message:/   wl5569 MTS//   bzr commit mail address changed;/   a minor cleanup to make mts_is_worker() with const argument;/   releasing a test to run in MTS./   ------------------------------------------------------------/   revno: 3330/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-07-02 08:58:56 +0100/   message:/   Fixed use of the performance schema in the replication code and concurrency issue/   in the IO Thread.//   In particular, the IO Thread was calling flush_master_info without grabbing locks./   ------------------------------------------------------------/   revno: 3329/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 16:41:35 +0300/   message:/   wl5569 MTS//   merging from the main repo./   ------------------------------------------------------------/   revno: 3328/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 15:48:25 +0300/   message:/   wl#5569 MTS//   the final cleanup patch./   There are few glitches that were considered as tolerable at least for time/   of the total wl's code is being reviewed.//   That includes: //   - no support to old load-data events/   - no support for FK//   to add to the list, there are few places in the patch that suggests to deploy/   error branches each time flush_info() is called.//   @ sql/log_event.h/   cleanup.//   @ sql/rpl_reporting.cc/   introducing a new public method in order to be callable from Slave_worker executed code.//   @ sql/rpl_reporting.h/   the earlier do_report is renamed and /   a new do_report() is made a way to allow child classes to redefine its own way./   The child class is suppose to call child->report() and to have child::do_report() 's/   designed behaviour.//   @ sql/rpl_rli_pdb.cc/   addressing an OOM issue at delete of curr_group_exec_parts.//   @ sql/rpl_rli_pdb.h/   deploying do_`method' pattern.//   @ sql/rpl_slave.cc/   cleanup./   ------------------------------------------------------------/   revno: 3327/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-07-01 13:16:52 +0300/   message:/   wl#5569 MTS//   The patch cleans up some host of code.//   @ sql/log_event.cc/   cleanup, comments improved, logics of decision in Log_event::apply_event on mts execution mode/   is simplified./   Moving flush_info() of Rotate_log_event::do_update_pos() into inc_group_relay_log_pos().//   @ sql/log_event.h/   cleanup and merging logics of former mts_async_exec_by_coordinator() with /   mts_sequential_exec() which is turned to be called from a new mts_execution_mode()./   Reducing visibility of mts members of Log_event hierarchy to match the needs.//   @ sql/rpl_rli.cc/   cleanup, renames and moving flush_info() inside inc_group_relay_log_pos().//   @ sql/rpl_rli.h/   Cleanup and comments improved.//   @ sql/rpl_rli_pdb.cc/   Cleanup; renames; comments; a new Slave_worker::init_worker() is defined to be called/   at starting the Worker pool per each worker. Its initialization instructions are migrated/   from from slave_start_single_worker().//   @ sql/rpl_rli_pdb.h/   Cleanup and comments improved.//   @ sql/rpl_slave.cc/   cleanup; replacing collection of initializations for a Worker in/   slave_start_single_worker() into a new Worker::init_worker().//   @ sql/sql_class.h/   cleanup./   ------------------------------------------------------------/   revno: 3326/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-28 11:30:18 +0300/   message:/   wl#5569 MTS//   replacing views with regular tables for consistency verification in rpl_parallel_innodb. /   Also a minor cleanup in rpl_parallel is done./   ------------------------------------------------------------/   revno: 3325/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-27 20:31:45 +0300/   message:/   wl#5569 MTS//   Cleanup and addressing sporadic rpl_temp_table_mix_row failure in /   post-execution mtr.check_testcase().//   The check of the test failure was caused by faulty optimization in/   avoiding to migrate temporary tables from Coordinator to Workers in/   case of rows-event assignement./   while it's correct with the homogenous rows-event only load, the mixture/   can fail./   Fixed with removing the optimization so map_db_to_worker() always/   relocates which is somewhat suboptimal and should be improved in future.//   @ mysql-test/suite/rpl/t/rpl_temp_table_mix_row.test/   Adding slave synchronization.//   @ sql/log_event.cc/   cleanup to move circular_buffer releated definitions into rpl_rli_pdb that is specialized/   on objects dealing with Worker, its assignement etc./   improving comments;/   also instead of former separate flag indicating a T-event requires post-scheduling synchronization/   with the Worker is turned into a bit of existing Log_event::flags which also avoids ungliness of/   #if/#endif:s.//   @ sql/log_event.h/   instead of former separate flag indicating a T-event requires post-scheduling synchronization/   with the Worker is turned into a bit of existing Log_event::flags;//   @ sql/rpl_rli.cc/   cleanup: renaming.//   @ sql/rpl_rli.h/   cleanup: renaming, more comments./   The former mts_wqs_overrun is converted into two: the statistics parameter mts_wq_overrun_cnt/   and the internal control parameter mts_wq_excess.//   @ sql/rpl_rli_pdb.cc/   Included rpl_slave.h that holds two necessary declarations;/   Cleanup: accepting circular_buffer related definitions migrated from log_event,/   improved comments, renaming, removing dead code//   @ sql/rpl_rli_pdb.h/   Cleanup: renaming and more comments are added.//   @ sql/rpl_slave.cc/   Augmenting print-out of statistics at the end of MTS session;/   cleanup: renaming.//   @ sql/rpl_slave.h/   Introducing two constants to define range of worker_id domain and/   a magic value of undefined worker.//   @ sql/sys_vars.cc/   replacing a literal int value with a symbilic constant./   ------------------------------------------------------------/   revno: 3324/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-27 13:12:52 +0100/   message:/   Ensured that updates to the worker_info_repository are transactional and fixed/   the slave_checkpoint_group_basic test case./   ------------------------------------------------------------/   revno: 3323/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-26 13:02:59 +0100/   message:/   Fixed test case./   ------------------------------------------------------------/   revno: 3322/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-06-25 15:14:24 +0100/   message:/   Introduced test case for recovery with MTS and fixed bugs in recovery./   ------------------------------------------------------------/   revno: 3321/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 15:38:19 +0300/   message:/   wl#5569 MTS//   This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items./   ------------------------------------------------------------/   revno: 3320/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 12:38:34 +0300/   message:/   wl#5569 MTS//   this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views./   ------------------------------------------------------------/   revno: 3319/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-24 00:11:22 +0300/   message:/   wl#5569 MTS//   this is an exploratory patch to sort out if verification method what was based/   on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment./   ------------------------------------------------------------/   revno: 3318/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-23 07:56:15 +0300/   message:/   wl#5569 MTS//   fixing results of mysqld--help-win./   ------------------------------------------------------------/   revno: 3317/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 19:20:40 +0100/   message:/   merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3316/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 19:17:43 +0100/   message:/   In some platforms, such as Windows, thread's wait time is stored/   in 100ns units. However, when computing the difference between/   two values, the result value was not multiplied by 100.//   Besides, there was a casting problem when the aforementioned/   result value was assigned to an ulong./   ------------------------------------------------------------/   revno: 3315/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-22 18:54:23 +0100/   message:/   Fixed how mts copes with recovery./   ------------------------------------------------------------/   revno: 3314/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-21 19:10:54 +0300/   message:/   wl#5569 MTS//   Fixing valgrind warnings.//   @ sql/log_event.cc/   w->running_status is verfied to find out the actually sought running/   status of a Worker./   THD can be unavainlable that's what a valgrind report was about.//   @ sql/rpl_rli_pdb.cc/   commenting out an assert that valgrind does not like.//   @ sql/rpl_rli_pdb.h/   new method is added to be invoked at MTS shutdown.//   @ sql/rpl_slave.cc/   Invoking gaq cleanup at the end of MTS session./   ------------------------------------------------------------/   revno: 3313/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-21 18:15:43 +0300/   message:/   wl#5569 MTS//   rpl_parallel_start_stop.test could fail sporadicaly with timeout.//   @ mysql-test/include/wait_for_slave_param.inc/   Correcting comments and handling of passed by caller $slave_timeout to make sure/   the unit of 1 second really holds./   Introduced symbolic default_timeout, sleep_freq(uency) to procude time to sleep in between of/   two polls.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   Since the default time to wait is less than one for innodb's wait for lock,/   the time to wait for error is set explicitly./   ------------------------------------------------------------/   revno: 3312/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 23:21:56 +0100/   message:/   merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3311/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 23:19:06 +0100/   message:/   Fixed error when computing the Lower-Water-Mark.//   If two or more jobs were removed from the Group of assigned jobs/   and one of the jobs had a non-empty group relay log but the last/   one had an empty group relay log. The Lower-Water-Mark was not/   correctly updated, because the algorithm assumed that the group/   relay log was null./   ------------------------------------------------------------/   revno: 3310/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-20 11:52:44 +0100/   message:/   Fixed valgrind errors.//   Slave_job_group was silently being cast to LOG_POS_COORD while calling/   sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by/   consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *).//   This had two problems://   . The first two entries in the Slave_job_group were not a pointer to/   a char * and my_offset.//   . Even if the first two entries were char * and my_offset, such/   casting could lead to alignment problems.//   To fix the problem, we avoid this casting./   ------------------------------------------------------------/   revno: 3309/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 19:14:50 +0300/   message:/   wl#5569 MTS//   fixing slave_transaction_retries_basic_64.result/   ------------------------------------------------------------/   revno: 3308/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 16:11:25 +0300/   message:/   wl#5569 MTS//   fixing tests.//   @ mysql-test/extra/rpl_tests/rpl_extra_col_master.test/   MTS-supperssion is necessary because the test is supposed to stop slave due to an error.//   @ mysql-test/extra/rpl_tests/rpl_relayrotate.test/   Load decreasing to prove a warning was caused by slow environment/   so waiting to accept the killed status by SQL thread was/   ended by 1 min timeout.//   @ mysql-test/suite/rpl/r/rpl_relayrotate.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_stm_000001.test/   A macro is expanded in order to isolate which branch of two activities/   a suffered timeout failure belongs in.//   @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_64.result/   Fixing results of 64 version of the test that was editted in the prev push./   ------------------------------------------------------------/   revno: 3307/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 12:33:36 +0300/   message:/   wl#5569 MTS//   Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling/   of a Rotate event which does not split the current group and therefore has to be executed/   after all previously scheduled events.//   Fixing sensetivity of two other tests to mtr's invocation environment that includes/   inital values of slave_parallel_workers and slave_transaction_retries.//   @ mysql-test/suite/sys_vars/inc/slave_transaction_retries_basic.inc/   made test insensetive to the value of slave_transaction_retries in mtr env.//   @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result/   made test insensetive to the value of slave_parallel_workers in mtr env.//   @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_32.result/   made test insensetive to the value of slave_transaction_retries in mtr env.//   @ mysql-test/suite/sys_vars/t/slave_parallel_workers_basic.test/   made test insensetive to the value of slave_parallel_workers in mtr env.//   @ sql/log_event.cc/   get_slave_worker() passes need_temps argument as FALSE is case of rows-events./   Correcting the actual value of `mts_in_group' of mts_async_exec_by_coordinator()./   ------------------------------------------------------------/   revno: 3306/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-19 09:04:19 +0100/   message:/   Fixed some windows failures./   ------------------------------------------------------------/   revno: 3305/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sat 2011-06-18 19:58:21 +0100/   message:/   Fixed some recovery issues./   ------------------------------------------------------------/   revno: 3304/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 21:01:58 +0300/   message:/   wl#5569 MTS//   fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization/   failed (e.g rpl_row_log on win).//   @ mysql-test/extra/rpl_tests/rpl_loaddata.test/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_loaddata.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result/   MTS-suppression is added.//   @ mysql-test/suite/sys_vars/t/disabled.def/   constant nuisanse is disabled in the feature tree./   Todo: do not merge it when pushing to the main tree.//   @ sql/rpl_slave.cc/   Moved workers initialization after one of the coordinator so that/   failure in the former routine is handled with a proper state of coordinator./   ./   This fix eliminates segfault at the end of handle_slave_sql() for few tests but does not address the reason/   of worker initialization failure, like in rpl_row_log on win:/   110616  7:37:57 [Note] Info file G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0 cannot be accessed (errno 13). Most likely this is a new slave or you are  changing the repository type./   110616  7:37:57 [ERROR] G:/pb2/test/sb_1-3486364-1308189142.46/mysql-5.6.3-m5-win-x86_64-test/sql/Debug/mysqld.exe: File 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0' not found (Errcode: 13)/   110616  7:37:57 [ERROR] Failed to create a new info file (file 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0', errno 13)/   110616  7:37:57 [ERROR] Error reading slave worker configuration/   110616  7:37:57 [ERROR] Failed during slave worker thread create/   110616  7:37:57 [ERROR] Slave SQL: Failed during slave workers initialization, Error_code: 1593/   ------------------------------------------------------------/   revno: 3303/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 18:34:16 +0300/   message:/   wl#5569 MTS//   fixing tests.//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   making aux file names unique to please mtr, pb.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_filter_tables_not_exist.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_parallel_innodb.result/   making aux file names unique to please mtr, pb.//   @ mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/r/rpl_typeconv.result/   MTS-suppression is added.//   @ mysql-test/suite/rpl/t/rpl_filter_tables_not_exist.test/   MTS-suppression is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_typeconv.test/   MTS-suppression is added.//   @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result/   results updated.//   @ sql/sql_class.h/   Cleanup to remove early debug-related options.//   @ sql/sys_vars.cc/   Fixating slave_parallel_workers' max as 1024./   Cleanup to remove early debug-related options./   ------------------------------------------------------------/   revno: 3302/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 14:00:41 +0300/   message:/   wl#5569 MTS//   fixing rpl_row_basic_3innodb similarly to the previous patch.//   @ mysql-test/suite/rpl/r/rpl_row_basic_3innodb.result/   a suppression is added./   ------------------------------------------------------------/   revno: 3301/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 13:51:59 +0300/   message:/   wl#5569 MTS//   fixing few tests.//   1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave/   state with gaps thereby inconsistent./   2. Two tests that were used to time out due to reset master/slave was disabled in there.//   @ mysql-test/extra/rpl_tests/rpl_binlog_max_cache_size.test/   a suppression is added.//   @ mysql-test/extra/rpl_tests/rpl_row_basic.test/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_known_bugs_detection.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_basic_2myisam.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_event_max_size.result/   a suppression is added.//   @ mysql-test/suite/rpl/r/rpl_row_idempotency.result/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_known_bugs_detection.test/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt/   removing unnecessary options causing test to fail.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test/   removing an erronous assignment. The former disabling of reset was intended /   for benchmarking w/o binlog on the slave to please master-slave.inc.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt/   removing unnecessary options causing test to fail.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test/   removing an erronous assignment. The former disabling of reset was intended /   for benchmarking w/o binlog on the slave to please master-slave.inc.//   @ mysql-test/suite/rpl/t/rpl_row_event_max_size.test/   a suppression is added.//   @ mysql-test/suite/rpl/t/rpl_row_idempotency.test/   a suppression is added.//   @ sql/rpl_slave.cc/   Downgrading error to warning in a case of Coordinator fails due to a Worker error./   Improving messages. Merging two if:s to have just one report().//   @ sql/share/errmsg-utf8.txt/   Improved the text of an error;/   Added a new error code./   ------------------------------------------------------------/   revno: 3300/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Fri 2011-06-17 02:24:59 +0100/   message:/   Removed unnecessary test cases and augment others in order to test/   recovery./   ------------------------------------------------------------/   revno: 3299/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-16 19:46:22 +0300/   message:/   wl#5569 MTS//   fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS/   ------------------------------------------------------------/   revno: 3298/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-16 11:29:53 +0300/   message:/   wl#5569 MTS//   adding new tests to sys_vars.\/   ------------------------------------------------------------/   revno: 3297/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:41:32 +0100/   message:/   WL#5569//   Adding a global suppression for the warning that may appear when/   stopping the slave sql thread in the middle of a group. This /   should affect MTS mode only./   ------------------------------------------------------------/   revno: 3296/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:40:41 +0100/   message:/   WL#5569//   Renames worker-info-repository to slave-worker-info-repository in/   some tests option files./   ------------------------------------------------------------/   revno: 3295/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 01:32:37 +0100/   message:/   WL#5569//   More test fixes. Removing remaining prefixes 'mts' from mts variables,/   which have been renamed recently./   ------------------------------------------------------------/   revno: 3294/   committer: Luis Soares <luis.soares@oracle.com>/   branch nick: mysql-trunk-wl5569/   timestamp: Thu 2011-06-16 00:27:20 +0100/   message:/   WL#5569//   Fixing rpl_parallel result file./   ------------------------------------------------------------/   revno: 3293/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:41:33 +0300/   message:/   wl#5569 MTS//   correcting --slave-parallel-workers in few more files/   ------------------------------------------------------------/   revno: 3292/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:31:46 +0300/   message:/   wl#5569 MTS//   correcting --slave-parallel-workers in collections/default.push/   ------------------------------------------------------------/   revno: 3291/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 20:12:11 +0300/   message:/   wl#5569 MTS//   Cleanup, including//   1. decreasing number and renaming system variables./   Important for debugging command line options are replaced with reasonble constant values /   and only necessary are retained.//   2. Small encapsulation in ha_blackhole.cc is done.//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   cleanup.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load.test/   cleanup.//   @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test/   cleanup.//   @ mysql-test/r/mysqld--help-notwin.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   cleanup.//   @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   cleanup.//   @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test/   cleanup.//   @ mysql-test/suite/sys_vars/r/all_vars.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_group_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/r/slave_worker_info_repository_basic.result/   cleanup.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_group_basic.test/   cleanup.//   @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test/   cleanup.//   @ sql/log_event.cc/   removing experimental (for benchmarking) mts_slave_local_timestamp option.//   @ sql/mysqld.cc/   few debugging time options are replaced with constants./   Interface-variables are non needed anymore.//   @ sql/mysqld.h/   few debugging time options are replaced with constants./   Interface-variables are non needed anymore.//   @ sql/rpl_rli_pdb.cc/   few debugging time options are replaced with constants.//   @ sql/rpl_slave.cc/   few debugging time options are replaced with constants.//   @ sql/sys_vars.cc/   few debugging time options are replaced with constants;/   renaming the rest that deal with MTS to be prefixed with `slave_'./   ------------------------------------------------------------/   revno: 3290/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Wed 2011-06-15 15:59:23 +0100/   message:/   Fixed replication valgring failures caused by the MTS./   ------------------------------------------------------------/   revno: 3289/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 21:23:13 +0300/   message:/   wl#5569 MTS/   wl#5754 Query event parallel execution//   Fixing failing tests and a failure in gathering accessed databases that was caused/   by a recent merge from trunk.//   @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result/   results updated.//   @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result/   results updated.//   @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result/   results updated.//   @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test/   moving mtr.add_supp to eliminate possibility of warning in the slave's error;/   adding graceful termination lines the test.//   @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test/   moving mtr.add_supp to eliminate possibility of warning in the slave's error.//   @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test/   Suppression are added for errors that are expected by test logics;/   adding graceful termination lines the test.//   @ sql/log_event.cc/   fixing the last argument to report() which should be c-string;/   fixing gathering of db:s on the master side. Because of a query can be preceeded in binlog/   by engineered BEGIN (the current pattern of logging from the trunk) resetting in Query::write()/   can't be any longer. /   However another reset point exists at the end of the top-level query and that suffices.//   @ sql/rpl_rli.h/   is_mts_in_group() to mimic STS' is_in_group() is added though semantics are different.//   @ sql/rpl_slave.cc/   further cleanup in sql_slave_killed() as requested by reviewers./   ------------------------------------------------------------/   revno: 3288/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 13:35:20 +0300/   message:/   merge from trunk/   ------------------------------------------------------------/   revno: 3287/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Tue 2011-06-14 12:27:38 +0300/   message:/   wl#5569 MTS//   Fixing failing tests due to /   a. a flaw in `isolated parallel' mode implementation./   Isolation applies to a group of event rather than to an instance./   And event that contains over-max accessed db:s or event from Old master/   trigger marking the current being scheduled group. Such group will be executed /   having all prior scheduled done and nomore will be scheduled until the group/   is done.//   b. Notification to Coordinator about errored-out Worker is corrected.//   @ sql/log_event.cc/   isolation applies to a group of event rather than to an instance./   Logics of isolation while the group is still executed by a Worker/   is refined through use of `bool curr_group_isolated' that lasts the group /   sceduling time and is set and reset in Log_event::get_slave_worker_id()./   Assert is added to monitor tmp tables correct migration./   ./   get_slave_worker() is called with `need_temp_tables' set to TRUE.//   @ sql/log_event.h/   Renaming to indicate that isolation applies to a group of event./   Adding more candidate event to mts_do_isolate_group() assert.//   @ sql/rpl_rli.h/   Isolation mode related declaration.//   @ sql/rpl_rli_pdb.cc/   Refining notification logics. Coordinator needs both its THD::KILLED and signalling/   to slave_worker_hash_cond.//   @ sql/rpl_slave.cc/   Isolation mode related init-ion./   ------------------------------------------------------------/   revno: 3286/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-12 22:33:32 +0300/   message:/   wl#5569 MTS//   making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats./   ------------------------------------------------------------/   revno: 3285/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-12 22:05:05 +0300/   message:/   wl#5569 MTS//   manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded./   ------------------------------------------------------------/   revno: 3284/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-09 18:35:59 +0100/   message:/   Post-fixes for merge.//   Fixed compilation in Windows and removed an used options./   ------------------------------------------------------------/   revno: 3283/   committer: Alfranio Correia <alfranio.correia@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Thu 2011-06-09 16:27:47 +0100/   message:/   merge mysql-trunk --> mysql-next-mr-wl5569/   ------------------------------------------------------------/   revno: 3282/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-06-06 13:51:19 +0300/   message:/   wl#5569 MTS//   STOP SLAVE now stops consistently w/o gaps, KILL/   shall be used for an urgent stop, an error case behaves like the/   killed. For instance, a Worker errors out, it sends KILL to/   Coordinator through THD::awake(), and Coordinator kill the rest/   through setting a special Worker-running status to killed (which/   breaks the read-exec loop of a Worker).//   @ sql/log_event.cc/   Changing style of computing mts-in-group bool arg into mts_async_exec_by_coordinator().//   @ sql/rpl_rli.cc/   Changing style of computing mts-in-group arg of an if in stmt_done().//   @ sql/rpl_rli.h/   Adding more states to Coordinator's MTS-group view.//   @ sql/rpl_rli_pdb.cc/   Relocating notification of a Worker's failure by the Worker into/   the error-branch of a functioning releasing common resources (entries of APH hash)./   The failed Worker trying awakening possibly waiting for the signal Coordinator./   The latter's behaviour in it's turn is refined to not enter the waiting phase/   when it has been already killed.//   @ sql/rpl_slave.cc/   sql_slave_killed() is made of two flavors of the error branches./   STOPped MTS coordinator does not give out too early and wait till/   its MTS-group state allows that./   Notification with kill to Coordinator  from the errored-out or killed/   worker is moved into a functioning releasing common resources (entries of APH hash)./   This case designates a hard stop./   In case of the soft (SLAVE-STOPped) MTS, Coordinator is made to wait for/   Workers' assignements full completion before to mark their running status for stopping./   ------------------------------------------------------------/   revno: 3281/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Sun 2011-06-05 20:01:51 +0300/   message:/   wl#5569 MTS//   More cleanup, fixes due to found issues when running tests, some improvements/   incl in stopping Workers to make routine to distinguish between killed and gracefully stopped/   cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still).//   @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test/   decreasing execution time.//   @ mysql-test/suite/rpl/t/rpl_begin_commit_rollback.test/   Marking the test as limited to Single-Thread-Slave.//   @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test/   Marking the test as limited to Single-Thread-Slave.//   @ mysql-test/suite/rpl/t/rpl_slave_skip.test/   Marking the test as limited to Single-Thread-Slave.//   @ sql/log_event.cc/   addressing few reviewing comments;/   asserting do_update_pos() can't run by Workers;/   cleaning up and separating Slave_worker *Log_event::get_slave_worker_id()/   and its caller's interest to rli-> last_assigned_worker;/   Deploying MTS group status marking in Log_event::apply_event();/   Making Worker's exec loop break to obey to a new Worker's running status too;/   Deploying mts_checkpoint_routine() in Rotate_log_event::do_update_pos()/   (sim action for FD event's handler);/   Fixing relay-log update notification in Log_event::get_slave_worker_id();//   @ sql/log_event.h/   renaming and re-typing of func:s as suggested by reviewer;/   leaving  a todo item for the final cleanup;/   correcting logics of mts_async_exec_by_coordinator();//   @ sql/rpl_rli.cc/   Initialization of a new MTS group status proverty: mts_group_status(MTS_NOT_IN_GROUP);/   asserting Relay_log_info::stmt_done() can't be run by Workers;/   deploying mts_checkpoint_routine() alike Rotate_log_event::do_update_pos() this time/   in Relay_log_info::stmt_done() to cover FD-event case and consulting mts_group_status/   in order to decide which branch to follow;//   @ sql/rpl_rli.h/   Augmenting Relay_log_info with mts_group_status to contain/   MTS group status;//   @ sql/rpl_rli_pdb.cc/   Slave_worker::commit_positions() is fixed to carry update relay-log info/   further to the following checkpoint routine action;/   Slave_worker *get_slave_worker() was cleaned, interfaces improved,/   few asserts corrected;/   Slave_worker::slave_worker_ends_group() cleaned a bit, and now frees extra/   memory of CGEP dynarray./   wait_for_workers_to_finish() is made to set the Coordinator's state as not/   in MTS group after synchronization with all workers;//   @ sql/rpl_rli_pdb.h/   Slave_jobs_queue is augmented with  running_status member.//   @ sql/rpl_slave.cc/   apply_event_and_update_pos(): corrects asserts, synch with *all* Workers/   at the end of dynamically marked as End of group event (mts_is_event_isolated() -> TRUE);/   exec_relay_log_event(): correts NULL event read out case;/   slave_stop_workers(): simplifying logics of stopping Workers, to mark them with /   w->running_status= Slave_worker::KILLED instead of killing workers' thd./   ./   slave_stop_workers() finilizes reset of Coordinator's state with/   rli->mts_group_status= Relay_log_info::MTS_NOT_IN_GROUP/   to make sure a next restart will proceed with the reset value./   ------------------------------------------------------------/   revno: 3280/   committer: Andrei Elkin <andrei.elkin@oracle.com>/   branch nick: mysql-next-mr-wl5569/   timestamp: Mon 2011-05-30 13:05:07 +0300/   message:/   WL#5569 MTS/   WL#5754 Query event parallel applying//   -----------------------------------------------------------------/   Aggregating 7 commits that are not pushed yet to the wl5569 repo./   Find comments for each cset below./   ------------------------------------------------------------------//   The current patch addresses concurrent updating slave_open_temp_tables/   status counter./   The former declaration of the underlying server variable is changed from/   ulong to int32. While that might affect (shrink) the actual range, there has been/   no specified range and now after the number of bits is the same on all platforms/   the range cat be set to be//   [0, max(int32)]//   ******/   wl#5569 MTS/   Wl#5754 Query event parallel appying/   wl#5599 MTS recovery//   The patch includes/   some cleanup, including one for temp tables supp…",https://github.com/facebook/mysql-5.6/commit/328b6c0b19fe08557cf410a2023e100a4599e3a4,9454675,facebook/mysql-5.6,False,False
0,e4991f5a1ba59d9c9630b54c0ea82e80a48368d1,"support abbreviated git commits in SCS//Summary:/Since [the rollout](https://fb.workplace.com/groups/3112141815538647/permalink/5766056630147139/) of SCM query proxy redirection to SCS for git commits, we have seen that queries that use a shorthand for a git rev fail in SCS and use the fallback path.//This is because commit prefix resolution was not implemented in SCS for the GIT identity scheme.//This diff addresses that disparity by:/* adding a type: `GitSha1Prefix` that can return the min and max changeset for a given prefix/* implementing `get_in_range` on bonsai_git_mapping, which queries the `bonsai_git_mapping` database for any matching commit in the range defined by a `GitSha1Prefix`/* implementing the necessary boilerplate to call this implementation when the `repo_resolve_commit_prefix` endpoint on SCS is called with a the GIT identity scheme specified//The implementation follows the same pattern as the prefix resolution for Mercurial.//Reviewed By: yancouto//Differential Revision: D42102242//fbshipit-source-id: fc688ac28ce4c0013f792933eb3a1732e8918768",https://github.com/facebook/sapling/commit/e4991f5a1ba59d9c9630b54c0ea82e80a48368d1,58146669,facebook/sapling,False,False
1,41ace35007f65783c76d762ec09aac5e325695ba,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/relay/commit/41ace35007f65783c76d762ec09aac5e325695ba,40508605,facebook/relay,False,False
2,d136c088ae375ceeb60940689e3ca0556ad5ba32,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//@public//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/react-native/commit/d136c088ae375ceeb60940689e3ca0556ad5ba32,29028775,facebook/react-native,False,False
3,6c208c24d5946a598ccc9b089174a05db532c64d,"React Native sync for revisions fccf3a9...47cf4e5//Summary:/This sync includes the following changes:/- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...47cf4e5//jest_e2e[run_all_tests]//Reviewed By: sammy-SC//Differential Revision: D44090004//fbshipit-source-id: 6ac2d1d22a078d07ce011481063e78843bded28e",https://github.com/facebook/react-native/commit/6c208c24d5946a598ccc9b089174a05db532c64d,29028775,facebook/react-native,False,False
4,ea57c923b4f7bf6b207de015affddf906c7c7bdc,"React Native sync for revisions fccf3a9...f828bad//Summary:/This sync includes the following changes:/- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...f828bad//jest_e2e[run_all_tests]//Reviewed By: robhogan, rshest//Differential Revision: D44024996//fbshipit-source-id: 8ac9754c5ffe12bd5d9c3499515c0925bd411f70",https://github.com/facebook/react-native/commit/ea57c923b4f7bf6b207de015affddf906c7c7bdc,29028775,facebook/react-native,False,False
5,ca73087e18abcb8acb593686629d814c9a0644c4,"Add UnannotatedGlobalEnvironment.Overlay (update only)//Summary:/UnannotatedGlobalEnvironment is more complicated than ModuleTracker and AstEnvironment because - due to the wildcard import dependencies coming from preprocessing - it is the first layer where we have to start worrying about dependency fan-out.//As a result its update function needs to update the underlying AstEnvironment overlay and also filter down the invalidated_modules to only those that are ""owned"" by the overlay - this prevents us from fanning out unsaved changes to downstream wildcard imports.//For the same reason, this layer will eventually need a function that propagates parent updates, but that is out of scope for this diff: I want to get the basic functionality for an overlay (how does it behave given a static parent) in place before worrying about parent propagation.//The implementation of `read_only` here is nontrivial because there are so many data structures owned by `UnannotatedGlobalEnvironment`. The strategy is:/- for all functions of the form `all_.*`, we just use the parent environment; these functions are not used except by `pyre query`, debugging tools in `check`, and pysa - none of which should ever need overlay support/- for all other functions, we follow a standard pattern:/   - first do an ownership check for the key/   - if the key is not owned, proxy to the corresponding function on the parent/   - otherwise, use the read-only backed by our own `from_upstream_readonly` (which should contain only the overlay data, a ""skinny"" dataset)//Reviewed By: pradeep90//Differential Revision: D36992180//fbshipit-source-id: 63db0d82f6e317ee929ecca3558d994d5e102dce",https://github.com/facebook/pyre-check/commit/ca73087e18abcb8acb593686629d814c9a0644c4,110274488,facebook/pyre-check,False,False
6,f8d4bcd87fa6d99fd62db3392f59b7e7d50ec021,"Allow binding nativeFuncPtr directly to member functions//Summary:/The small number of ObjectData based native implementations/could have their member methods called directly by remapping//  Ret (Cls::*)(Args...)//to//  Ret (*)(ObjectData*, Args...)//thus skipping an unnecessary hop through a proxy function/which would otherwise have to do this unnecessary pattern://  Ret HHVM_METHOD(Foo, bar) {/    return static_cast<c_Foo>(this_)->bar();/  }//Reviewed By: alexmalyshev//Differential Revision: D2759021//fb-gh-sync-id: a5b5032750a5b84f1cc752abd0b76324c07f8576",https://github.com/facebook/hhvm/commit/f8d4bcd87fa6d99fd62db3392f59b7e7d50ec021,455600,facebook/hhvm,False,False
7,c68ba998d4fe9e7d6d8a3f2ae3db569792e26bef,"proxygen: use customized bigcache request/reply//Summary:/Titled.//1). Take different code paths depending on whether we are using the new RPC. There should better ways or patterns to handle this, let me know.//2). Allocate the request on the heap since we don't have the convenient wrapper `MemcacheClientIOBuf`. We also use `folly::MoveWrapper` to ensure the request lives long enough.//3). The lambda callbacks are not executed in mcrouter proxy threads. We need to explicitly enqueue the callback into the event base of proxygen worker thread for GET callbacks.//jmswen spalamarchuk I am not sure whether I should use pooled connection or internal connection. What's the difference and their use cases? Right now each proxygen thread holds its own cache client.//Reviewed By: jmswen//Differential Revision: D4632684//fbshipit-source-id: 015c292506a49c040b406ebc5573bff4349d8475",https://github.com/facebook/mcrouter/commit/c68ba998d4fe9e7d6d8a3f2ae3db569792e26bef,16211818,facebook/mcrouter,False,False
0,8b18019e86a5c1ced0f4818633a7b0e482a98a93,"Distinguish Singleton and Caching pattern//Summary: This diff distinguishes Caching pattern from Singleton pattern. Essentially, both patterns writes to (or say, initializes) a global variable when its value is null or does not exist. Yet, it is desired to distinguish if the written global variable is a collection or not: if the assignment directly writes to a collection (e.g. `Foo::$dic[$key] = $value`), then we assume it's a caching; otherwise, it is a singleton (e.g. `Foo::$bar = $x` or `(Foo::$dic[$key])->prop = $y`).//Reviewed By: lavenzg//Differential Revision: D40872670//fbshipit-source-id: 0ec2e66767ef3d1fe241749e4de9607c88222a3e",https://github.com/facebook/hhvm/commit/8b18019e86a5c1ced0f4818633a7b0e482a98a93,455600,facebook/hhvm,False,False
1,a2bdbd60708599aa3ce226697a5886006b0d95a6,"Recognize coalescing assignment for singleton//Summary: This diff simply recognizes coalescing assignment (of the format `$a ??= $b`) as the ""singleton"" pattern, when the assigned variable is global.//Reviewed By: jamesjwu//Differential Revision: D40763644//fbshipit-source-id: cc84f82b0d8a35e782c5f6e2e08af69baef0cafe",https://github.com/facebook/hhvm/commit/a2bdbd60708599aa3ce226697a5886006b0d95a6,455600,facebook/hhvm,False,False
2,ef6072246b499377ef3d67923f2f22bf4a568150,"commitcloud: do not make LocalSerivce as a singleton//Summary:/If LocalSerivce is a singleton, it will capture an `ui` object that might be/stale in in-process hg tests. `LocalSerivce` is cheap to construct so let's/just avoid the singleton pattern for test compatibility.//This fixes `test-commitcloud-rename-workspace` debugruntest compatibility as/the following text is now printed properly using the up-to-date `ui.debugflag`://  commitcloud local service: get_references for current version 2//Reviewed By: zzl0//Differential Revision: D42825822//fbshipit-source-id: 683dec345c4a36a6d79080e54a09050991c11dad",https://github.com/facebook/sapling/commit/ef6072246b499377ef3d67923f2f22bf4a568150,58146669,facebook/sapling,False,False
3,cc5798189f914a7af105f6640c91917b943575fc,"Recognize simple singleton patterns for global writes//Summary:/As suggested by our customer (MI), there are some common patterns for the detected global writes, which are benign in most cases. Thus, this diff introduces the following patterns:/  - Singleton (i.e. write to a global variable whose value is null)/  - CounterIncrement (i.e. increase a global variable by 1 or -1)/  - WriteEmptyOrNUll (i.e. assign null or empty string to a global variable)/  - WriteLiteral (i.e. assign a literal to a global variable)/  - WriteGlobalToGlobal (i.e. assign a global variable to another one)//Currently, all the patterns above are related with global writes, and later some patterns for global reads may be introduced as well.//Specifically, this diff starts with a simple case of the singleton pattern, in which a global object (or its mutable property) is written under the condition that its value is null.//To do:/- Handle a more complex case of the singleton pattern, in which the global object is a collection (e.g. dictionary) and functions like `idx` and `C\contains_key` are used./- To handle other patterns (e.g. WriteLiteral), we will need to track the reference of non-global variables as well. To be more precise, we need a general pointer analyzer, in which the data source of every local variable is maintained (not just the local variables that point to global variables as we do now).//Reviewed By: minjang//Differential Revision: D40181325//fbshipit-source-id: 475ce79d14df7fc2e6df38873a29388394e7d000",https://github.com/facebook/hhvm/commit/cc5798189f914a7af105f6640c91917b943575fc,455600,facebook/hhvm,False,False
4,28849fee1c3906b3bbdcaa30affe2e8b2d796404,Rename Protocol::fromStandard -> get//Summary: so it is less redundent and better matches exisiting singleton patterns.//Reviewed By: Mizuchi//Differential Revision: D36230963//fbshipit-source-id: 7874d76675079a987e0081c6ecfdd419432ede22,https://github.com/facebook/fbthrift/commit/28849fee1c3906b3bbdcaa30affe2e8b2d796404,11131631,facebook/fbthrift,False,False
5,f31744a7ae0e81955495541297d0c7b076634271,"Recognize singletons patterns via functions//Summary:/Compared with the previous diff D40181325 that can recognize the simple singleton pattern (in which the value of a global variable is directly checked, e.g. `Foo::$bar is null`), this diff handles some more complex cases, in which functions like `idx` or `C\contains_key` are used to access the elements of global collections.//Limitations:/- If the value of `C\contains_key` is stored in some local variable (instead of directly used in the conditional), then we lose track of the nullable variables./- There could be more functions like `C\contains_key` that checks the existence of some elements in the collection or `idx` that returns the given collection's element, but are not recognized by the current algorithm. If we encounter such functions, we will need to generalize our algorithm by using **an explicit list of such functions**.//Reviewed By: minjang//Differential Revision: D40420507//fbshipit-source-id: fd9ab68bcae827edc281aa332da55262b2b9ae39",https://github.com/facebook/hhvm/commit/f31744a7ae0e81955495541297d0c7b076634271,455600,facebook/hhvm,False,False
6,db011b8dce61f84a28aff7eb9a3c96884ca55054,"Define an actually empty Empty domain//Summary:/Until now the so-called ""Empty"" domain was actually a singleton domain. We define a new empty domain/that has no element, leveraging an empty ocaml type and unreachable patterns. The singleton domain is/renamed into Unit.//This domain may obviously not be used alone and is to be lifted for instance, with WithBottomTop to/define a ""boolean"" domain.//Note that there was only one occurrence of Empty in the code at/`infer/src/checkers/DisjunctiveDemo.ml`, which seems fine with the new Empty one.//Reviewed By: jvillard//Differential Revision: D39692860//fbshipit-source-id: 139e036d11c52c7f259b238766722f582281ffb8",https://github.com/facebook/infer/commit/db011b8dce61f84a28aff7eb9a3c96884ca55054,29857799,facebook/infer,False,False
7,407fb5c2384b13abba677789b8d86b21b6ace190,"Implement ability to emit device events from C++ TurboModules//Summary:/[Changelog][Internal]//This adds a method, `emitDeviceEvent` to the C++ API of TurboModules, which allows to make calls to JS's `RCTDeviceEventEmitter.emit` from a C++ TurboModules.//This is a very common pattern, specifically for the VR apps, but not only for them - e.g. Desktop fork also has a [custom implementation for this](https://www.internalfb.com/code/fbsource/third-party/microsoft-fork-of-react-native/react-native-utils/RCTEventEmitter.cpp).//Note that my original intent was to actually backport the latter, however there are some complications with wiring things in a robust way, without exposing too much stuff and relying on singletons or folly::dynamic.//So I ended up adding it to the TurboModule API itself and use the scheduler/JSI facilities instead.//This approach is arguably well self-contained, uses high level APIs, and shouldn't be abusable much.//Since I was trying to avoid usage of folly::dynamic in this case, I used a kind of ""value factory"" pattern instead in order to send the arguments to the JS thread in a thread safe way (see [the discussion here](https://fb.workplace.com/groups/rn.fabric/permalink/1398711453593610/)).//Reviewed By: christophpurrer//Differential Revision: D43466326//fbshipit-source-id: a3cb8359d08a46421559edd0f854772863cb5c39",https://github.com/facebook/react-native/commit/407fb5c2384b13abba677789b8d86b21b6ace190,29028775,facebook/react-native,False,False
8,769baee7cfc13705e523b25d10a05856ac61e01f,"Type restrictions for value patterns//Summary:/# This diff//The value and singleton patterns implicitly also impose typing restrictions.//Singleton pattern was already working, because it was being translated using `is`, and we handle type refinement with `is`.//The `value` in a value pattern can only be a literal/constant*, so using `is` is equivalent. This diff changes translation of `value` to use `is`.//*The reason the AST uses an expression is that it could either be a one of builtin types' constant (which maps to `Expression.Constant` in the AST) or an enumeration constant (which maps to an attribute in the AST). We add a test in here to make sure refinement is working for enums as well.//# Broader context//See D32027190 (https://github.com/facebook/pyre-check/commit/0d16c9b5206fefc2d00327df9078703eef93f76f).//Reviewed By: pradeep90//Differential Revision: D32624003//fbshipit-source-id: a72c247099c9abbba1d9d428f5e96279e0e250d6",https://github.com/facebook/pyre-check/commit/769baee7cfc13705e523b25d10a05856ac61e01f,110274488,facebook/pyre-check,False,False
9,af9f0015ea1cb1eeb6c9b775e4c728aefdcd2eee,"MatchTranslate: singleton pattern//Summary:/# This diff//`True`, `False`, and `None` are special and are matched with `is`.//# Context//Locally, starts at: D32455895 (https://github.com/facebook/pyre-check/commit/202d5dabee53599e4480fb72d0a63e83aca2addb); more broadly see D32027190 (https://github.com/facebook/pyre-check/commit/0d16c9b5206fefc2d00327df9078703eef93f76f).//Reviewed By: shannonzhu//Differential Revision: D32572743//fbshipit-source-id: af63b2b38d504c5a26f8a046d6985a37cea19900",https://github.com/facebook/pyre-check/commit/af9f0015ea1cb1eeb6c9b775e4c728aefdcd2eee,110274488,facebook/pyre-check,False,False
10,72cae4aa80874e09df854e01c432e9ed03d8766b,"Remove special inlining for static property singleton pattern//Summary: No need to special case this pattern, regular inlining can handle it.//Reviewed By: paulbiss//Differential Revision: D15484334//fbshipit-source-id: de2c0811dde0edc58a901bdb37e5686c76ef2625",https://github.com/facebook/hhvm/commit/72cae4aa80874e09df854e01c432e9ed03d8766b,455600,facebook/hhvm,False,False
11,75ea3dc45bff9c15ca656f30e4ccfe60722c6b65,"Awful bytecode pattern-matcher thing//Summary: I needed something to pattern-match on bytecodes in order to detect and/inline singleton patterns, so here it is.//Reviewed By: jdelong//Differential Revision: D1344595",https://github.com/facebook/hhvm/commit/75ea3dc45bff9c15ca656f30e4ccfe60722c6b65,455600,facebook/hhvm,False,False
12,3943a732248c4335e0aeb84989ee318e2f426efc,"Fix double-inlining bug w/ singleton inlining//Summary: My singleton inlining machinery assumed that the regular inliner could/never inline singleton patterns.  If this is false, we'll sometimes/inline a function twice, which appears to be happening in practice in/perflab.//I'll try to move the singleton stuff into the new inlining machinery/that I have diffs up for now.//Reviewed By: @bertmaher//Differential Revision: D1412015",https://github.com/facebook/hhvm/commit/3943a732248c4335e0aeb84989ee318e2f426efc,455600,facebook/hhvm,False,False
13,8ed6ad738c230991eaaab7e656e9d37e5591aa91,"[resolved-env] Correctly compute hint of RHS of assignment using providers//Summary:/Changelog: [internal]//In D36831460 (https://github.com/facebook/flow/commit/e7e380484ba64290ff5102e508e396cd58dc52a6), I attempted to fix the broken hint propagation in assignments. Unfortunately, the fix doesn't really work for two reasons://1. The location we passed to `Env_api.Provider_api.providers_of_def` is the location of an entire assignment, which is not something in the loc_env./2. The identifier expressions we synthesized will be treated as reads, but the locations are write locations.//The problem 2 happened to be hidden by problem 1, and everything appeared to work before because we are incorrectly checking missing-local-annot.//In this diff, I first fixed problem 1 by using the location of LHS pattern./I fixed problem 2 by creating a special kind of hint node: `ProvidersHint`, which takes in a list of provider locations, which will be resolved by querying the type at the write locations in env_resolution. This change makes all the remaining `ValueHint` only takes a singleton list, so I changed `ValueHint` to take a single expression as well. (`ValueHint` is first changed to take a `Nel.t` in D36831460 (https://github.com/facebook/flow/commit/e7e380484ba64290ff5102e508e396cd58dc52a6), but since we determined that the fix is bad, we should revert that).//Reviewed By: mvitousek//Differential Revision: D37369998//fbshipit-source-id: a36d05469b1c4d31ff850963827d79cb3e32ad19",https://github.com/facebook/flow/commit/8ed6ad738c230991eaaab7e656e9d37e5591aa91,25880891,facebook/flow,False,False
14,c8deadc518a2c08ecda9e5fa6bb3b7ed5707735a,"precedence games w/Singletons//Summary:/Unintended consequences from moving Singleton autoconversion/rules to bottom of pattern match. This moves them just under/union/intersection rules, which gets the job done and fixes/the regressions.//Reviewed By: jeffmo//Differential Revision: D2765429//fb-gh-sync-id: a90ff071c6d173a8909c0bf9cd8a8377d27db759",https://github.com/facebook/flow/commit/c8deadc518a2c08ecda9e5fa6bb3b7ed5707735a,25880891,facebook/flow,False,False
15,7c3390f7dcf886b0b39acfa505446614641ecb92,"make $Values on a frozen object return singleton literals//Summary:/on a frozen object, StrT, NumT and BoolT values can't be changed so we/can treat them as singletons. this makes this pattern work://```/const Enum = Object.freeze({/  X: 'x',/  Y: 'y',/});/type EnumT = $Values<typeof Enum>/('a': EnumT); // error instead of StrT ~> StrT/```//Reviewed By: avikchaudhuri//Differential Revision: D6232529//fbshipit-source-id: d24339d7a7a607e24a9312d637f83d5c92a97a15",https://github.com/facebook/flow/commit/7c3390f7dcf886b0b39acfa505446614641ecb92,25880891,facebook/flow,False,False
16,8b5918ee4db4ef8b08a33688bd3bba8ad93ebc87,"demote singleton LB conversion rules//Summary:/Because we use UnionT to represent enums of literals, we're vulnerable/to pathological behavior when big enums are checked against each other/or themselves. The recent addition of an opportunistic membership check/(which fires when an incoming LB is exactly equal to a member of a/UnionT UB) was prevented from firing in many such cases because/unions of literals are represented by collections of Singleton/types, which we currently autoconvert to the corresponding/constrained primitive type when they appear as lower bounds.//As a short term fix, this diff demotes the Singleton conversion/rules by moving them below the UnionT rules in the flow pattern/match. This gives the list membership trap a chance to fire/on the unconverted Singleton ~> UnionT of Singletons type pair.//Longer term, we need to do two things://Reviewed By: avikchaudhuri//Differential Revision: D2764128//fb-gh-sync-id: ef86f11a9118a51049ff8887664ec9125001ffa7",https://github.com/facebook/flow/commit/8b5918ee4db4ef8b08a33688bd3bba8ad93ebc87,25880891,facebook/flow,False,False
17,9fbf12be2c73617fb22829bb4c02b311346b491d,"Try to inline singleton pattern functions//Summary: We see a lot of code roughly of the form//  function getSingletonFoo() {/    static $instance = null;/    if ($instance === null) {/      // Do some stuff and set $instance./    }/    return $instance;/  }//Let's optimistically assume that such patterns are in fact singleton/patterns (as opposed to, say, some means of inter-method communication/to avoid threading arguments) and try to inline these checks.  The first/time we hit each callsite, we'll side-exit to do the call, and/subsequent calls will simply return the value at $instance, assuming the/checks still pass.//We also introduce a TransFlags struct which we thread through BindJmp/requests and into the translation routines so that we turn the inlining/off in the stub.//Presently, this inlining strategy is restricted to non-resumable/functions with no arguments passed and which don't return refs.//Reviewed By: bertrand//Differential Revision: D1344602",https://github.com/facebook/hhvm/commit/9fbf12be2c73617fb22829bb4c02b311346b491d,455600,facebook/hhvm,False,False
18,5ae78a0bb6fada9844b9e64402b000b768788c46,"Add utility function to temporarily drop context//Summary:/Same motivation as the last diff (D22050978), we need to provide a way to allow singleton pattern (done through usage of `__Memoize`) at the presence of contexts./This diff adds two helper functions (for async and regular functions) to call a function without any context./Needlessly to say, this is an escape hatch and it should only be used at these specific places where context does not matter. Ideally, it should always call functions that are annotated with `__NoContext`. Making this a runtime enforcement might be useful but I'm not sure if it is necessary.//Reviewed By: paulbiss//Differential Revision: D22121970//fbshipit-source-id: f4f0c7fbc30d3409ca9c0f12283c0693725afbcf",https://github.com/facebook/hhvm/commit/5ae78a0bb6fada9844b9e64402b000b768788c46,455600,facebook/hhvm,False,False
19,ffdcf1146dce2f5e7f47d9abb5605fa181626a87,"shortcut for negative number literals//Summary:/before, the unary minus operator was handled such that `-x` corresponds to `type of x ~> UnaryMinusT (tout)`, regardless of what `x` is. `__flow` then recognizes the `NumT (Literal) ~> UnaryMinusT` case and multiplies the literal value by -1.//this means that the type of the AST node `-1` is an unresolved tvar rather than a `NumT (Literal -1)`. in a few places, we pattern match on these syntactically generated types directly, rather than via constraints. one such place is when `Object.freeze` generates the resulting object type; if a prop's value type is a `NumT`, we generate a `SingletonNumT`, but if it's an OpenT then we don't. if we don't, then the `NumT` gets summarized to `number` rather than the singleton value.//by example: `let x = Object.freeze({ foo: -1, bar: 2 }); type T = $Values<typeof x>`/the `-1` generates a `NumT ~> UnaryMinusT (tout)`, and the `$Values` generates a `obj ~> GetValuesT`. the latter special cases literal values in frozen objects, but in this case the `tout` is not a literal, even though it will always resolve to exactly one. so we get `type T = number | 2`.//anyway, this diff special cases the unary minus on a number literal to directly create a NumT instead of a tvar, so that the above special case generates a SingletonNumT instead of generalizing.//in this example, now `type T = -1 | 2`//Reviewed By: samwgoldman//Differential Revision: D7506793//fbshipit-source-id: fc995d9c1468ed94bc9744ccb2780e0af7311092",https://github.com/facebook/flow/commit/ffdcf1146dce2f5e7f47d9abb5605fa181626a87,25880891,facebook/flow,False,False
20,90eb4245c95a1a7c7a59c92cb799e21839cba911,"[hack] Fully expand type variables in Tgenerics//Summary: Typing_expand.fully_expand is used whenever we need to fully expand out any/type variables. One instance where this occurs is making sure we do not store/polymorphic value into a static scoped variable. The reason this is unsound is/demonstrated in the test case I added static_var_no_generic.php//Essientially due to the way static scoped variables, new static(), and/self::method() work, it is possible to trick the type checker that a type/parameter is bound to the improper type. In order to safely use the pattern/in static_var_no_generic.php a type constant should be used instead. Then if we/only know that a type is a ##Singleton## the get method will return an abstract/type.//The reason this is currently not an error is because the ""this"" type is/represented as a generic so we never expand the type variables that are/substituted for its type parameters. That combined with the fact in/don't detect this error case.//Reviewed By: @int3//Differential Revision: D2165262",https://github.com/facebook/flow/commit/90eb4245c95a1a7c7a59c92cb799e21839cba911,25880891,facebook/flow,False,False
21,a671928b9da749b777e907fc3855a468a08fc543,"Add basic support for configurable partial mode checks//Summary:/HF wants a way to more gradually migrate partial mode files to strict. Doing them per file doesn't match how they work (codemods fixing a certain problem across all files). They would like a mechanism to gradually remove certain problems from being allowed in partial mode.//This diff implements the basic infrastructure for the global configuration, an abstraction to help checking if an error case should be reported, and a single example for testing.//There are some gross things in here. It expands global state with the new configurable list - and it's a singleton no less! Also, the implementations will sprinkle hard-coded error codes around the codebase. Partly this is because the errors are provided from across most of the compiler, so the partial mode checks kind of need to be somewhat global in their scope. Existing implementations do that via global scope, so I continued the pattern rather than making yet another global scope. Also there aren't a whole lot of places that are shared by parser/naming/typing. There aren't any good spots where I could inject logic that knows about both the error codes and the file mode. Threading file mode through the error could would mean touching a few hundred functions (and all of their callsites), whereas changing the strict checks means touching a few dozen callsites.//The hardcoded codes are distasteful, but the error code enums aren't exposed as part of the module. Since that hasn't changed over the lifetime of the codebase, I suspect there's some compelling reason I shouldn't publicize them. Beyond that, the entire point of this exercise is to kill partial mode. Ideally, in a few months we'll be reverting this entire stack. If not, then we can refactor this a bit to make the codes more legible.//Reviewed By: shiqicao, vassilmladenov//Differential Revision: D15470732//fbshipit-source-id: 5bba1daab574552f56327d49c088497fbe654169",https://github.com/facebook/hhvm/commit/a671928b9da749b777e907fc3855a468a08fc543,455600,facebook/hhvm,False,False
22,6bb640c02927d0c418d46f2318f4fe304fe0d5d3,"Fully expand type variables in Tgenerics//Summary: Typing_expand.fully_expand is used whenever we need to fully expand out any/type variables. One instance where this occurs is making sure we do not store/polymorphic value into a static scoped variable. The reason this is unsound is/demonstrated in the test case I added static_var_no_generic.php//Essientially due to the way static scoped variables, new static(), and/self::method() work, it is possible to trick the type checker that a type/parameter is bound to the improper type. In order to safely use the pattern/in static_var_no_generic.php a type constant should be used instead. Then if we/only know that a type is a ##Singleton## the get method will return an abstract/type.//The reason this is currently not an error is because the ""this"" type is/represented as a generic so we never expand the type variables that are/substituted for its type parameters. That combined with the fact in/don't detect this error case.//Reviewed By: @int3//Differential Revision: D2165262",https://github.com/facebook/hhvm/commit/6bb640c02927d0c418d46f2318f4fe304fe0d5d3,455600,facebook/hhvm,False,False
0,3c1d4b841d33d0b6e90ca676d9bf4a1402354b91,"Do not use superconsole::State in TimedList//Summary:/`TimedList` component now grabs `&SuperConsoleState` in constructor instead of fetching it from the state.//So `TimedList` is statically typed now. No more errors because code compiles but does not work because forgot to put something in the state.//Code is a bit rough, `SuperConsoleState` is too much for `TimedList`. Can be cleaned up later, even as is I consider this version a big improvement.//Next step would be:/* use this pattern everywhere else in buck2/* remove `State` from `superconsole` and recommend this pattern as default/* similarly we can remove `DrawMode` from `superconsole`//Reviewed By: bobyangyf//Differential Revision: D44814677//fbshipit-source-id: c7a0ca14c71bff9c226cd13a49156cbb44cc7ae9",https://github.com/facebook/buck2/commit/3c1d4b841d33d0b6e90ca676d9bf4a1402354b91,450625045,facebook/buck2,False,False
1,72c71c007e7bdf667e3fe69bf7dc3a87ae44c0ac,"fixing deploy script//to conform to new [envvar pattern](https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/), fixes #851 upstream",https://github.com/facebook/Rapid/commit/72c71c007e7bdf667e3fe69bf7dc3a87ae44c0ac,161120445,facebook/Rapid,False,False
2,2a34c5b8edb70315fe2c7ef63faefcb9359d2c63,"fby35: cl: revise PMIC error VinB_UV pattern (#1009)//Summary:/Revise PMIC error VinB_UV pattern.//Pull Request resolved: https://github.com/facebook/OpenBIC/pull/1009//Test Plan:/Build and test pass on fby35 system./1. Inject VinB_UV and check SEL root@bmc-oob:~# log-util all --print/2023 Mar 27 01:57:34 log-util: User cleared all logs/2    slot2    2023-03-27 01:57:53    ipmid            SEL Entry: FRU: 2, Record: Standard (0x02), Time: 2023-03-27 01:57:53, Sensor: PMIC_ERR (0xB4), Event Data: (050A00) DIMM A7 Vin Bulk UV Assertion/2    slot2    2023-03-27 01:57:56    gpiod            FRU: 2, System powered OFF/2    slot2    2023-03-27 01:57:58    ipmid            SEL Entry: FRU: 2, Record: Standard (0x02), Time: 2023-03-27 01:57:58, Sensor: ME_POWER_STATE (0x16), Event Data: (000000) RUNNING Assertion//Reviewed By: williamspatrick, tao-ren//Differential Revision: D44477822//Pulled By: amithash//fbshipit-source-id: a0f71027f518b42aa0de7b20f5b88f50381eb20a",https://github.com/facebook/OpenBIC/commit/2a34c5b8edb70315fe2c7ef63faefcb9359d2c63,335709078,facebook/OpenBIC,False,False
3,cc325bac6738435b253f646344df404247fc09a6,"thrift struct node template//Summary:/simplifying the migration and establishing a pattern to follow in switch state nodes//- define USE_THRIFT_COW(NODE)/- define base as ThriftStructNode<NODE, THRIFT_TYPE>/- provide explicit template instantiation in corresponding cpp file.//for maps similar pattern exist//- define Traits/- define base as ThriftMapNode<MAP, Traits>/- provide explicit template instantiation in corresponding cpp file.//Following this address all compiler errors and avoid copy.//Reviewed By: peygar//Differential Revision:/D40918338//LaMa Project: L1125642//fbshipit-source-id: 6a3236a25ddbfc9d830db48650baad632832e210",https://github.com/facebook/fboss/commit/cc325bac6738435b253f646344df404247fc09a6,31927407,facebook/fboss,False,False
4,e4c05c8fe17d83a85f1105bc8580533317c1f7d6,"[clang] New preanalysis to substitute away mock pointers//Summary:/This aims to substitute away mock pointers from the code. This consists of a programming pattern where developers use global variables that contain a function pointer, where the function pointer points to the real function that we want to call in the production code, and gets swapped by a dummy function for testing.//Before, we had some support for this pattern in Pulse, but now we add support in the frontend: we identify such global function pointers, substitute their use with the actual function and remove the initializer code for such global variables.//The result is simpler code where Pulse analysis is easier to debug, and the analysis is also more performant, since fewer global variables are convoluting the state, and the method calls don't involve an extra step of calling the global initializer.//I left the Pulse support around because that's not specific to mock pointers, but works for any global function pointers.//Reviewed By: ezgicicek//Differential Revision:/D43838894//Privacy Context Container: L1122176//fbshipit-source-id: 3d3cbe9e2295b183b8ceeb26b5537dfbdeb4f979",https://github.com/facebook/infer/commit/e4c05c8fe17d83a85f1105bc8580533317c1f7d6,29857799,facebook/infer,False,False
5,07ea96ffe140089ed19b54cef31d4d144d4f437c,"Add multiline_parser support//Summary://FluentBit added support for multiline parsers on v1.8 (https://docs.fluentbit.io/manual/v/1.9-pre/administration/configuring-fluent-bit/multiline-parsing). On this commit we are adding support to the coobook to be able to configure them based on configurations.//While the `tail` input had multiline support in older version (via the `multiline` boolean property), the new one allows for more complex rules. (https://docs.fluentbit.io/manual/v/1.9-pre/pipeline/inputs/tail#multiline-support)//The parsers.conf will be appended according to the following:/```/node.default['fb_fluentbit']['multiline_parser']['my_multi_parse'] = {/  'type' => 'regex',/  'flush_timeout' => '1000',/  'rules' => [/    {/      'state_name' => 'start_state',/      'pattern' => '/^\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2},\d+ .*$/',/      'next_state' => 'cont',/    },/    {/      'state_name' => 'cont',/      'pattern' => '/^ - .*/',/      'next_state' => 'cont',/    },/  ],/}/```//Please read the FluentBit documentation for proper rules definitions: (https://docs.fluentbit.io/manual/v/1.9-pre/administration/configuring-fluent-bit/multiline-parsing#rules-definition)//Reviewed By: joshuamiller01, leoswaldo//Differential Revision: D41417395//fbshipit-source-id: 5380865d63ea07ce8da012fb6fcf16d4b45c465c",https://github.com/facebook/chef-cookbooks/commit/07ea96ffe140089ed19b54cef31d4d144d4f437c,48260686,facebook/chef-cookbooks,False,False
6,c826dc50de288758a0b783b2fd37b40a3b512fc4,"Add (Client) Functions as Form Actions (#26674)//This lets you pass a function to `<form action={...}>` or `<button//formAction={...}>` or `<input type=""submit formAction={...}>`. This will//behave basically like a `javascript:` URL except not quite implemented//that way. This is a convenience for the `onSubmit={e => {//e.preventDefault(); const fromData = new FormData(e.target); ... }`//pattern.////You can still implement a custom `onSubmit` handler and if it calls//`preventDefault`, it won't invoke the action, just like it would if you//used a full page form navigation or javascript urls. It behaves just//like a navigation and we might implement it with the Navigation API in//the future.////Currently this is just a synchronous function but in a follow up this//will accept async functions, handle pending states and handle errors.////This is implemented by setting `javascript:` URLs, but these only exist//to trigger an error message if something goes wrong instead of//navigating away. Like if you called `stopPropagation` to prevent React//from handling it or if you called `form.submit()` instead of//`form.requestSubmit()` which by-passes the `submit` event. If CSP is//used to ban `javascript:` urls, those will trigger errors when these//URLs are invoked which would be a different error message but it's still//there to notify the user that something went wrong in the plumbing.////Next up is improving the SSR state with action replaying and progressive//enhancement.",https://github.com/facebook/react/commit/c826dc50de288758a0b783b2fd37b40a3b512fc4,10270250,facebook/react,False,False
7,12a1d140e366aa8d95338e4412117f16da79a078,"Don't prerender siblings of suspended component  (#26380)//Today if something suspends, React will continue rendering the siblings//of that component.////Our original rationale for prerendering the siblings of a suspended//component was to initiate any lazy fetches that they might contain. This//was when we were more bullish about lazy fetching being a good idea some//of the time (when combined with prefetching), as opposed to our latest//thinking, which is that it's almost always a bad idea.////Another rationale for the original behavior was that the render was I/O//bound, anyway, so we might as do some extra work in the meantime. But//this was before we had the concept of instant loading states: when//navigating to a new screen, it's better to show a loading state as soon//as you can (often a skeleton UI), rather than delay the transition.//(There are still cases where we block the render, when a suitable//loading state is not available; it's just not _all_ cases where//something suspends.) So the biggest issue with our existing//implementation is that the prerendering of the siblings happens within//the same render pass as the one that suspended — _before_ the loading//state appears.////What we should do instead is immediately unwind the stack as soon as//something suspends, to unblock the loading state.////If we want to preserve the ability to prerender the siblings, what we//could do is schedule special render pass immediately after the fallback//is displayed. This is likely what we'll do in the future. However, in//the new implementation of `use`, there's another reason we don't//prerender siblings: so we can preserve the state of the stack when//something suspends, and resume where we left of when the promise//resolves without replaying the parents. The only way to do this//currently is to suspend the entire work loop. Fiber does not currently//support rendering multiple siblings in ""parallel"". Once you move onto//the next sibling, the stack of the previous sibling is discarded and//cannot be restored. We do plan to implement this feature, but it will//require a not-insignificant refactor.////Given that lazy data fetching is already bad for performance, the best//trade off for now seems to be to disable prerendering of siblings. This//gives us the best performance characteristics when you're following best//practices (i.e. hoist data fetches to Server Components or route//loaders), at the expense of making an already bad pattern a bit worse.////Later, when we implement resumable context stacks, we can reenable//sibling prerendering. Though even then the use case will mostly be to//prerender the CPU-bound work, not lazy fetches.",https://github.com/facebook/react/commit/12a1d140e366aa8d95338e4412117f16da79a078,10270250,facebook/react,False,False
8,034d76860cead1fa640edf49fdc0ee3f06c65be8,remove wildcard pattern matches of FlowLsp.server_state//Summary:/i am considering adding another constructor to this variant and so want it to be safe//Changelog: [internal]//Reviewed By: samwgoldman//Differential Revision: D38141733//fbshipit-source-id: 8af7435eb9ead47fb1122413b9affc5931a67045,https://github.com/facebook/flow/commit/034d76860cead1fa640edf49fdc0ee3f06c65be8,25880891,facebook/flow,False,False
9,0ffb15ecad9193d7f96036219f7eb2bab5b47332,refactor restoring packages from saved state//Summary:/moves restoring packages into the RestoreHeaps timer and makes it follow the same pattern as parsed and unparsed.//I didn't make it use the workers since there aren't that many packages and the overhead of workers on Windows is so high. perhaps we could have one set of workers do all 3 kinds of jobs though.//Changelog: [internal]//Reviewed By: samwgoldman//Differential Revision: D41061833//fbshipit-source-id: 541d39415f49fe46666c3e3c3e1af4d33cda6d0a,https://github.com/facebook/flow/commit/0ffb15ecad9193d7f96036219f7eb2bab5b47332,25880891,facebook/flow,False,False
10,6bab7e0924fb0a3e727db654b37554dfd6cf95f9,"GT/GTI: FW-util: Change GPU SXM from 0-based to 1-based (#3627)//Summary:/According to NV online#1069815 ""NVIDIA HGX Baseboard Redfish Design Collaterals"".//• Id pattern for GPUs are 1-based. Example: ""GPU_SXM_<1N>""//X-link: https://github.com/facebookexternal/openbmc.quanta/pull/3627//Test Plan:/1. Get version (Pass)/root@bmc-oob:~# fw-util hgx  --version/erot-gpu1 Version: 00.02.0083.0000_n00/erot-gpu2 Version: 00.02.0083.0000_n00/erot-gpu3 Version: 00.02.0083.0000_n00/erot-gpu4 Version: 00.02.0083.0000_n00//2. Update FW (Pass)/root@bmc-oob:~# fw-util hgx --update gpu3-fw /tmp/nvfw_HGX-H100x8_0003_230122.3.0_prod-signed.fwpkg target: {""HttpPushUriTargets"":[""/redfish/v1/UpdateService/FirmwareInventory/HGX_FW_GPU_SXM_3""]} Started update task: 0/The task with id 0 has started./Image '96.00.51.00.03' is being transferred to 'HGX_FW_GPU_SXM_3'. Awaiting for an action to proceed with activating image '96.00.51.00.03' on 'HGX_FW_GPU_SXM_3'. The task with id 0 has Completed./Update completed with state: Completed status: OK/Upgrade of hgx : gpu3-fw succeeded//Reviewed By: zhdaniel12//Differential Revision: D43504108//fbshipit-source-id: 0fbbcf9a14b73aacbfeffdc9d96c591db059611f",https://github.com/facebook/openbmc/commit/6bab7e0924fb0a3e727db654b37554dfd6cf95f9,31917712,facebook/openbmc,False,False
11,9686fab9332fee4fe724ce029cde36fca59e3cf7,"Refactor OptionsModal into UseModal//Summary:/We had a `useOptionsModal` utility, which creates a modal, adds it to a global state, then adds proper listeners for closing the modal on escape key, or if you click the 'x' in the top right, and sets up the right width for it, etc.//In this diff, I expand this to a more general `useModal` hook. This allows you to either use the more direct `{type: 'confirm', message: ..., buttons: ...}` API, or a more customizable `{type: 'custom', component: ...}` API. For file-a-bug, we'll use the more complicated API.//Without such a useModal util, right now you'd have to add a new <Modal> render on <App>, which needs its own global state management, then your own dismissing logic. This is sometimes needed, for example the Comparison View which does a lot of custom stuff.//But many smaller modals will fit a `useModal` pattern. For example, we may add a modal flow for Landing code, which would need custom rendering.//This API extension works like this://```tsx/function SomeComponent() {/  const showModal = useModal();/  return <div>/    <button onClick={async () => {/       const result = await showModal({/         type: 'custom',/         component: MyModalRendererComponent,/         title: 'hello'/       });/       // now result is what the modal returned to us, which we can use for further processing/    }/  </div>/}//type MyData = {foo: string};//function MyModalRendererComponent({returnResultAndDismiss}: {returnResultAndDismiss: (data: MyData) => void}) {/  return <div>/    Custom modal content!/    <button onClick={() => {/      returnResultAndDismiss({foo: 'bar'});/    }}>Return some data</button>/  </div>;/}/```//We'll use this API later in the stack for file-a-bug, where the modal contains all the file-a-bug fields (title, description, ...),/and it returns that data to the code path where we open the modal.//Reviewed By: bolinfest//Differential Revision: D42818652//fbshipit-source-id: 4616690363f744762f6a46abf677123008127813",https://github.com/facebook/sapling/commit/9686fab9332fee4fe724ce029cde36fca59e3cf7,58146669,facebook/sapling,False,False
12,30adbcc06404e8bd034b2d6909c3886a86456954,"service: remove race between mount shutdown and Thrift calls//Summary:/The isSafeForInodeAccess is used to know when the root inode is initialized and/valid, but this is used in racy context. For instance, the getMountPoints/collects all the mounts whose root inode is initialized, but then releases the/lock on the mountPoints_ list, subsequently, the EdenMount's root Inode is/accessed without checking. If the EdenMount is shutdown prior to the root Inode/being copied, the root Inode might be a nullptr, causing a NULL-dereference.//This pattern can be found in all of the Thrift entry points that play with/mounts and thus are all potentially sources of EdenFS crashes. To solve this,/we need to guarantee 2 things:/ - isSafeForInodeAccess must only change state while the mountPoints_ lock is/   held, specifically at shutdown time,/ - The root inode must be copied while the mountPoints_ lock is held.//This diff does both. For the second one in particular EdenServer::getMount is/modified to also return the root Inode. This is done instead of introducing a new/function to prevent future bugs from seeping in that may be missed at review time.//Reviewed By: chadaustin//Differential Revision: D42563083//fbshipit-source-id: c0267277a54c425f330bbd58d1dc86ec3746502d",https://github.com/facebook/sapling/commit/30adbcc06404e8bd034b2d6909c3886a86456954,58146669,facebook/sapling,False,False
13,c650da95c4afe57eef72e4d224144d08d3454ae1,"1/3 add ServerProgress.Errors library//Summary:/This diff adds an API, `ServerProgress.Errors`, for the streaming error file. This is its design:/```/OVERVIEW OF STREAMING ERRORS FILE//Errors is a file in /tmp/hh_server/<repo>/errors.bin which is written/by server during a typecheck. The file is first created when the server/starts its first typecheck, gets errors appended to it as the typecheck/discovers them, is unlinked and then another one with the same name/created each time the server starts another typecheck, and the file is finally/unlinked upon server exit. A ""typecheck"" can be thought of as a typecheck of the/entire program, and hence the errors file will contain every error reported in WWW./But in reality the server does tricks to typecheck a smaller number of files just/so long as it still manages to report every error into the file.//Therefore: a client can at any time open an file descriptor to this file,/and ""tail -f -n +1"" (i.e. read from the start and then follow) to follow/the typecheck that is currently underway or most recently completed, from its/start to its end. It will still be able to read the file descriptor through/to its end even if, in the meantime, a new typecheck has started and the old/file has been unlinked. Note that a given file-descriptor will only ever point/to a file which monitonically grows.//The server can have its typecheck interrupted. Some interruptions like watchman/will cause the current typecheck to be cancelled, then a new typecheck started./In this case the existing errors file will be unlinked, a new errors file created/for the new typecheck, and a sentinel will be written into the old file descriptor/to show that it ended before completing. Other interruptions like from/""hh --type-at-pos"" will have no effect: the current typecheck file can continue/being read just fine. If a client reads a file descriptor on its sentinel, that is/a guarantee that a new errors file is already in place and can be opened (or,/if no errors file exists, that can only be because the server has terminated).//If file does not exist, the client knows that either there is no server, or there/is one but it has not yet started typechecking (it might still be loading saved state)./In either case it is appropriate for the client to clientConnect {autostart_server=true}/in the normal way, until it establishes a connection to the server, and then it can/wait for the errors file.//SEMANTICS OF ERRORS-FILE CONTENTS//* An errors-file is tied to a particular watchman clock value. It reflects/  all file-changes that happened prior to the clock. (As to whether it reflects/  any file-changes that happened after the clock, that is impossible to tell.)/* As mentioned above, when the errors-file is complete, it contains the full/  set of errors that hh_server knows about for the project./* Each error report is an Errors.error list Relative_path.map, i.e. it encompasses/  several files, and for each file it has a list of errors. Currently we make/  one report for all ""duplicate name"" errors across the project if any, followed by/  one report per batch that had errors. This means that a file might be mentioned/  twice, once in a ""duplicate name"" report, once later. This will change in future/  so that each file is reported only once./* It currently does not write empty reports, though that might change in future/  (e.g. we might decide to write ""no errors in file a.php"" for a file which/  previously did have errors)./* Within a single report, the error list has been sorted and de-duped./```//There are a few design decisions not mentioned in the doc-comments which I'll note here.../1. I decided to stick this into the existing `ServerProgress.ml` rather than making a new file or new buck target. That's because it feels like progress.json and errors.bin are so very similar./   1. However, ServerProgressLwt.ml has to be a separate module, because hh_server isn't allowed to link to Lwt/   2. We have an existing convention that ""server/monitorConnection"" is a low-level module that combines RPC types, writing and reading functions. Similarly, ""server/serverProgress"" is a module that combines RPC types, writing and reading functions./2. I decided to make all the functions global. That reflects the fact that `root` is already global in both the server and client binaries (e.g. through Relative_path.set_prefix). It also reflects the fact that only one instance of hh_server can even exist for a given repository. That's as global as you can get!/3. We have to deal with what happens when a client connects to an errors.bin that was written by a later or earlier version of hh_server. I copied our existing pattern from monitorConnection, of having a loosely typed field `extra : Hh_json.json`, to allow for forward and backward compatibility without breaking the serialization format./4. `ignore_hh_version` is currently controlled by the server, and I preserved that behavior. Thus for instance `hh start --ignore-hh-version` will allow all versions of the client to connect to it. (But using the flag in the client doesn't allow it to connect to arbitrary versions of the server).//## How to review this diff/1. Although it says ""1300 lines changed in this diff"", 650 of them are tests and 100 of them are docblocks, so it's really only 550 lines.../2. Read the big block of text in the summary/3. Read the `test_completed` and `test_async_read_completed ` unit tests. They show straightforward success cases that illustrate the API for consuming errors./4. Focus on the producing side now. Read the ServerProgress.mli docblock on `write_state`, and docblocks for the other producing APIs in this module `new_empty_file`, `report`, `complete`, `unlink`. Now read the unit test case `test_produce_disordered`. This shows the ""state-machine model"" for producing errors./5. Read ServerProgress.ml for the implementation. From a concurrency correctness perspective, focus on `with_lock`, `write_message`, `read_message`, `unlink_sentinel_close`. The rest of the methods are straightforward./6. Read SeverProgressLwt.{mli,ml}//Reviewed By: CatherineGasnier//Differential Revision: D44159582//fbshipit-source-id: d469c91de267947fa490d3d47e152843439c97c3",https://github.com/facebook/hhvm/commit/c650da95c4afe57eef72e4d224144d08d3454ae1,455600,facebook/hhvm,False,False
14,d8aee3da2aa57ec373a0aa01c396b47d7f59e9f2,"Implement nested operations whereby RSC is set during render (and nested render) phase, and LSC is set during layout (and nested layout) phase//Summary:/In this diff, an RSC is set on the CC during the render phase, and a LSC is set during layout phase. In between these phases, the respective context is cleared.//This diff also introduces this pattern for ""nested"" operations, such as during component.measure & layout.measureNestedTree - which both save the ""current"" state-context, then set their own sequence of RSC & LSC, and finish by restoring the previous state-context.//For tests, the major difference here is that we no longer simply need to set a LSC-for-tests. Instead, an RSC is usually expected. To that end, a new set-RSC-for-tests method has been added to CC.//All litho tests and test helpers have been adapted to this new paradigm//Reviewed By: astreet//Differential Revision: D39502953//fbshipit-source-id: 7630fb996ef09d46096dcdb317834296073f4d94",https://github.com/facebook/litho/commit/d8aee3da2aa57ec373a0aa01c396b47d7f59e9f2,80179724,facebook/litho,False,False
15,075de45076be8634339d20ecd0f8a92bb7b4ae3a,"Bump react-refresh from 0.11.0 to 0.14.0 in /desktop (#4540)//Summary:/Bumps [react-refresh](https://github.com/facebook/react/tree/HEAD/packages/react) from 0.11.0 to 0.14.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/releases"">react-refresh's releases</a>.</em></p>/<blockquote>/<h2>v0.14.0</h2>/<p>See <a href=""http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html"">http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html</a>.</p>/<h2>v0.13.3</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>clipPath</code> element and attribute for SVG</li>/<li>Improved warnings for deprecated methods in plain JS classes</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Loosened <code>dangerouslySetInnerHTML</code> restrictions so <code>{__html: undefined}</code> will no longer throw</li>/<li>Fixed extraneous context warning with non-pure <code>getChildContext</code></li>/<li>Ensure <code>replaceState(obj)</code> retains prototype of <code>obj</code></li>/</ul>/<h3>React with Add-ons</h3>/<h3>Bug Fixes</h3>/<ul>/<li>Test Utils: Ensure that shallow rendering works when components define <code>contextTypes</code></li>/</ul>/<h2>v0.13.2</h2>/<h3>React Core</h3>/<h4>New Features</h4>/<ul>/<li>Added <code>strokeDashoffset</code>, <code>flexPositive</code>, <code>flexNegative</code> to the list of unitless CSS properties</li>/<li>Added support for more DOM properties:/<ul>/<li><code>scoped</code> - for <code>&lt;style&gt;</code> elements</li>/<li><code>high</code>, <code>low</code>, <code>optimum</code> - for <code>&lt;meter&gt;</code> elements</li>/<li><code>unselectable</code> - IE-specific property to prevent user selection</li>/</ul>/</li>/</ul>/<h4>Bug Fixes</h4>/<ul>/<li>Fixed a case where re-rendering after rendering null didn't properly pass context</li>/<li>Fixed a case where re-rendering after rendering with <code>style={null}</code> didn't properly update <code>style</code></li>/<li>Update <code>uglify</code> dependency to prevent a bug in IE8</li>/<li>Improved warnings</li>/</ul>/<h3>React with Add-Ons</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Immutabilty Helpers: Ensure it supports <code>hasOwnProperty</code> as an object key</li>/</ul>/<h3>React Tools</h3>/<ul>/<li>Improve documentation for new options</li>/</ul>/<h2>v0.13.1</h2>/<h3>React Core</h3>/<h4>Bug Fixes</h4>/<ul>/<li>Don't throw when rendering empty <code>&lt;select&gt;</code> elements</li>/<li>Ensure updating <code>style</code> works when transitioning from <code>null</code></li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/facebook/react/blob/main/CHANGELOG.md"">react-refresh's changelog</a>.</em></p>/<blockquote>/<h2>0.14.0 (October 7, 2015)</h2>/<h3>Major changes</h3>/<ul>/<li>Split the main <code>react</code> package into two: <code>react</code> and <code>react-dom</code>.  This paves the way to writing components that can be shared between the web version of React and React Native.  This means you will need to include both files and some functions have been moved from <code>React</code> to <code>ReactDOM</code>.</li>/<li>Addons have been moved to separate packages (<code>react-addons-clone-with-props</code>, <code>react-addons-create-fragment</code>, <code>react-addons-css-transition-group</code>, <code>react-addons-linked-state-mixin</code>, <code>react-addons-perf</code>, <code>react-addons-pure-render-mixin</code>, <code>react-addons-shallow-compare</code>, <code>react-addons-test-utils</code>, <code>react-addons-transition-group</code>, <code>react-addons-update</code>, <code>ReactDOM.unstable_batchedUpdates</code>).</li>/<li>Stateless functional components - React components were previously created using React.createClass or using ES6 classes.  This release adds a <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">new syntax</a> where a user defines a single <a href=""https://reactjs.org/docs/reusable-components.html#stateless-functions"">stateless render function</a> (with one parameter: <code>props</code>) which returns a JSX element, and this function may be used as a component.</li>/<li>Refs to DOM components as the DOM node itself. Previously the only useful thing you can do with a DOM component is call <code>getDOMNode()</code> to get the underlying DOM node. Starting with this release, a ref to a DOM component <em>is</em> the actual DOM node. <strong>Note that refs to custom (user-defined) components work exactly as before; only the built-in DOM components are affected by this change.</strong></li>/</ul>/<h3>Breaking changes</h3>/<ul>/<li><code>React.initializeTouchEvents</code> is no longer necessary and has been removed completely. Touch events now work automatically.</li>/<li>Add-Ons: Due to the DOM node refs change mentioned above, <code>TestUtils.findAllInRenderedTree</code> and related helpers are no longer able to take a DOM component, only a custom component.</li>/<li>The <code>props</code> object is now frozen, so mutating props after creating a component element is no longer supported. In most cases, <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> should be used instead. This change makes your components easier to reason about and enables the compiler optimizations mentioned above.</li>/<li>Plain objects are no longer supported as React children; arrays should be used instead. You can use the <a href=""https://reactjs.org/docs/create-fragment.html""><code>createFragment</code></a> helper to migrate, which now returns an array.</li>/<li>Add-Ons: <code>classSet</code> has been removed. Use <a href=""https://github.com/JedWatson/classnames"">classnames</a> instead.</li>/<li>Web components (custom elements) now use native property names.  Eg: <code>class</code> instead of <code>className</code>.</li>/</ul>/<h3>Deprecations</h3>/<ul>/<li><code>this.getDOMNode()</code> is now deprecated and <code>ReactDOM.findDOMNode(this)</code> can be used instead. Note that in the common case, <code>findDOMNode</code> is now unnecessary since a ref to the DOM component is now the actual DOM node.</li>/<li><code>setProps</code> and <code>replaceProps</code> are now deprecated. Instead, call ReactDOM.render again at the top level with the new props.</li>/<li>ES6 component classes must now extend <code>React.Component</code> in order to enable stateless function components. The <a href=""https://reactjs.org/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages"">ES3 module pattern</a> will continue to work.</li>/<li>Reusing and mutating a <code>style</code> object between renders has been deprecated. This mirrors our change to freeze the <code>props</code> object.</li>/<li>Add-Ons: <code>cloneWithProps</code> is now deprecated. Use <a href=""https://reactjs.org/docs/react-api.html#cloneelement""><code>React.cloneElement</code></a> instead (unlike <code>cloneWithProps</code>, <code>cloneElement</code> does not merge <code>className</code> or <code>style</code> automatically; you can merge them manually if needed).</li>/<li>Add-Ons: To improve reliability, <code>CSSTransitionGroup</code> will no longer listen to transition events. Instead, you should specify transition durations manually using props such as <code>transitionEnterTimeout={500}</code>.</li>/</ul>/<h3>Notable enhancements</h3>/<ul>/<li>Added <code>React.Children.toArray</code> which takes a nested children object and returns a flat array with keys assigned to each child. This helper makes it easier to manipulate collections of children in your <code>render</code> methods, especially if you want to reorder or slice <code>this.props.children</code> before passing it down. In addition, <code>React.Children.map</code> now returns plain arrays too.</li>/<li>React uses <code>console.error</code> instead of <code>console.warn</code> for warnings so that browsers show a full stack trace in the console. (Our warnings appear when you use patterns that will break in future releases and for code that is likely to behave unexpectedly, so we do consider our warnings to be “must-fix” errors.)</li>/<li>Previously, including untrusted objects as React children <a href=""http://danlec.com/blog/xss-via-a-spoofed-react-element"">could result in an XSS security vulnerability</a>. This problem should be avoided by properly validating input at the application layer and by never passing untrusted objects around your application code. As an additional layer of protection, <a href=""https://github-redirect.dependabot.com/facebook/react/pull/4832"">React now tags elements</a> with a specific <a href=""http://www.2ality.com/2014/12/es6-symbols.html"">ES2015 (ES6) <code>Symbol</code></a> in browsers that support it, in order to ensure that React never considers untrusted JSON to be a valid element. If this extra security protection is important to you, you should add a <code>Symbol</code> polyfill for older browsers, such as the one included by <a href=""https://babeljs.io/docs/usage/polyfill/"">Babel’s polyfill</a>.</li>/<li>When possible, React DOM now generates XHTML-compatible markup.</li>/<li>React DOM now supports these standard HTML attributes: <code>capture</code>, <code>challenge</code>, <code>inputMode</code>, <code>is</code>, <code>keyParams</code>, <code>keyType</code>, <code>minLength</code>, <code>summary</code>, <code>wrap</code>. It also now supports these non-standard attributes: <code>autoSave</code>, <code>results</code>, <code>security</code>.</li>/<li>React DOM now supports these SVG attributes, which render into namespaced attributes: <code>xlinkActuate</code>, <code>xlinkArcrole</code>, <code>xlinkHref</code>, <code>xlinkRole</code>, <code>xlinkShow</code>, <code>xlinkTitle</code>, <code>xlinkType</code>, <code>xmlBase</code>, <code>xmlLang</code>, <code>xmlSpace</code>.</li>/<li>The <code>image</code> SVG tag is now supported by React DOM.</li>/<li>In React DOM, arbitrary attributes are supported on custom elements (those with a hyphen in the tag name or an <code>is=&quot;...&quot;</code> attribute).</li>/<li>React DOM now supports these media events on <code>audio</code> and <code>video</code> tags: <code>onAbort</code>, <code>onCanPlay</code>, <code>onCanPlayThrough</code>, <code>onDurationChange</code>, <code>onEmptied</code>, <code>onEncrypted</code>, <code>onEnded</code>, <code>onError</code>, <code>onLoadedData</code>, <code>onLoadedMetadata</code>, <code>onLoadStart</code>, <code>onPause</code>, <code>onPlay</code>, <code>onPlaying</code>, <code>onProgress</code>, <code>onRateChange</code>, <code>onSeeked</code>, <code>onSeeking</code>, <code>onStalled</code>, <code>onSuspend</code>, <code>onTimeUpdate</code>, <code>onVolumeChange</code>, <code>onWaiting</code>.</li>/<li>Many small performance improvements have been made.</li>/<li>Many warnings show more context than before.</li>/<li>Add-Ons: A <a href=""https://github-redirect.dependabot.com/facebook/react/pull/3355""><code>shallowCompare</code></a> add-on has been added as a migration path for <code>PureRenderMixin</code> in ES6 classes.</li>/<li>Add-Ons: <code>CSSTransitionGroup</code> can now use <a href=""https://github.com/facebook/react/blob/48942b85/docs/docs/10.1-animation.md#custom-classes"">custom class names</a> instead of appending <code>-enter-active</code> or similar to the transition name.</li>/</ul>/<h3>New helpful warnings</h3>/<ul>/<li>React DOM now warns you when nesting HTML elements invalidly, which helps you avoid surprising errors during updates.</li>/<li>Passing <code>document.body</code> directly as the container to <code>ReactDOM.render</code> now gives a warning as doing so can cause problems with browser extensions that modify the DOM.</li>/<li>Using multiple instances of React together is not supported, so we now warn when we detect this case to help you avoid running into the resulting problems.</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/facebook/react/commit/3603d45157e6c1b21cda7ed96683408b319ae619""><code>3603d45</code></a> v0.14.0</li>/<li><a href=""https://github.com/facebook/react/commit/693dd3567b6648fdccfd602702192bb22f405e63""><code>693dd35</code></a> Update to fbjs@0.3</li>/<li><a href=""https://github.com/facebook/react/commit/4a4174b9e8d1f554a5368da5df274746a8e332d1""><code>4a4174b</code></a> 0.14.0-rc1</li>/<li><a href=""https://github.com/facebook/react/commit/c04d02e5e8de18436ac95037ab856ac5ba7d29b9""><code>c04d02e</code></a> Add warnings to React module</li>/<li><a href=""https://github.com/facebook/react/commit/52b4c9eabf6c5930a906df4584c8480db5ec6e9e""><code>52b4c9e</code></a> Upgrade to fbjs, fbjs-scripts @ 0.2</li>/<li><a href=""https://github.com/facebook/react/commit/b38509cade7e5e31bffd2da93fb0213ad58681bf""><code>b38509c</code></a> Merge pull request <a href=""https://github.com/facebook/react/tree/HEAD/packages/react/issues/4540"">https://github.com/facebook/flipper/issues/4540</a> from scottburch/ie8-fix</li>/<li><a href=""https://github.com/facebook/react/commit/ecb34de5747a6d4578dc4be920a033db9f81370f""><code>ecb34de</code></a> Upgrade ESLint, fix code</li>/<li><a href=""https://github.com/facebook/react/commit/3f6bca7b1638ee940bb01989377abc9864edb6fe""><code>3f6bca7</code></a> 0.14.0-beta3</li>/<li><a href=""https://github.com/facebook/react/commit/5f01a90954405d26439d00af2b6f5dbfa535ef9d""><code>5f01a90</code></a> Update addons.js</li>/<li><a href=""https://github.com/facebook/react/commit/1da2b29897781d3faa7b555e4962d7eb5b6a2707""><code>1da2b29</code></a> added suggested comment to get file to pass es-lint</li>/<li>Additional commits viewable in <a href=""https://github.com/facebook/react/commits/v0.14.0/packages/react"">compare view</a></li>/</ul>/</details>/<details>/<summary>Maintainer changes</summary>/<p>This version was pushed to npm by <a href=""https://www.npmjs.com/~gnoff"">gnoff</a>, a new releaser for react-refresh since your current version.</p>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=react-refresh&package-manager=npm_and_yarn&previous-version=0.11.0&new-version=0.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4540//Reviewed By: ivanmisuno//Differential Revision: D44215184//Pulled By: mweststrate//fbshipit-source-id: e8f33dfbfbe887d49c27f2dabbbc1548de3d10e9",https://github.com/facebook/flipper/commit/075de45076be8634339d20ecd0f8a92bb7b4ae3a,129283183,facebook/flipper,False,False
16,23a11539ba3f5ca0d374afdb1f1049eeac789eb3,"Return Result types for Failed Queries rather than throwing exceptions//Summary:/**TLDR**: Instead of propagating exceptions due to failed queries all the way up the call stack to be caught, instead return Result types to be processed by the caller.//The reason we want to return result types is that we already know in advance that it's a very possible circumstance that we will encounter a query error. Borrowing from a principle in functional programming, we are adapting an either type pattern where we will return either a valid response, or a Failure. In case you have no context on this topic, here's a helpful article (https://dev.to/anthonyjoeseph/either-vs-exception-handling-3jmg)//The purpose of this diff stack is to log exceptions for LSP events to scuba. Before that can be done, there are issues in which I cannot log exceptions to scuba because they are being caught at too low a level to be written to telemetry. This diff focuses on getting us to a state where we can log those exceptions, and in a future diff, we will actually perform that logging.//I changed the unit tests to reflect that most of the operations throw exceptions now rather than returning empty responses.//Reviewed By: stroxler//Differential Revision: D40239217//fbshipit-source-id: 8bb70c4d08c7e7cf520810d681ad564bbd517da6",https://github.com/facebook/pyre-check/commit/23a11539ba3f5ca0d374afdb1f1049eeac789eb3,110274488,facebook/pyre-check,False,False
17,2ed12e1a1486afa418244f68dac4ac4979a3492f,Exception handling in absint//Summary:/The current absint framework provides a Exception CFG but it/handles exception edges as normal edges. We separate the two notions/when computing the predecessor abstraction of a node and we carefully/turn an exception state into a normal state when reaching a handler./We activate this framework on Pulse and test it on simple Java resource/open/close patterns relying on try..finally./We don't handle `catch` very precisely for the moment since we do not record/the thrown exception object.//Reviewed By: skcho//Differential Revision: D33017691//fbshipit-source-id: 1c4759e6d8,https://github.com/facebook/infer/commit/2ed12e1a1486afa418244f68dac4ac4979a3492f,29857799,facebook/infer,False,False
18,4feee43eb38cb10bc62504b0965590dba7e9f73c,"invert the sense of happly_decl_has_no_reified_generics()//Summary:/This is the first place in hackc we call a DeclProvider to resolve external/classnames. I started to refine it's api to be a tri-state so we can distinguish/""I don't know"" cases from ""definitely yes"" and ""definitely no"", but managed/to hopelessly confuse myself with double negatives.//This diff flips the sense of the API to match the comment, and adds some/asserts and exhaustive pattern matches, but should result in no bytecode changes/(with or without DeclProviders).//Reviewed By: aorenste//Differential Revision: D34617436//fbshipit-source-id: a0f581a243edeb95b432f6c87f5291014e3ec421",https://github.com/facebook/hhvm/commit/4feee43eb38cb10bc62504b0965590dba7e9f73c,455600,facebook/hhvm,False,False
19,85d8b6f947d4d1b02c4831108754fe403e72f37a,Refactor naming_coroutine_check away from iter_with_state pattern//Summary: Refactor check away from using the `iter_with_state` pattern.//Reviewed By: kmeht//Differential Revision: D14296228//fbshipit-source-id: 81258033359628081fa3208311163449c1f00363,https://github.com/facebook/hhvm/commit/85d8b6f947d4d1b02c4831108754fe403e72f37a,455600,facebook/hhvm,False,False
20,6af568b764e9540771aaddf3e18fec5a37b477d2,"interprocedural analysis and allowing benign code patterns in clinit_may_have_side_effects//Summary:/Static initializers often contain actually benign code. Benign meaning here code that 1) doesn’t trigger other clinits with side-effects, and 2) doesn’t mutate any observable state. (Let’s ignore more obscure issues such as exceptions and non-termination for now. )//In this diff, we do a very simple interprocedural analysis to peek into a clinit's callees, and we white-list certain external framework references. Some framework references are ""clearly"" benign (pattern 1), some are ""probably"" benign (pattern 2), and some are ""clearly not, but in since we've been doing it in the past, probably"" benign (pattern 3).//Clearly, this analysis is not sound, as it doesn't do a precise data-flow analysis, and then just look at pattern 2 and 3... However, to me it still seems to strike a reasonable balance between clearly non-benign code while keeping the overhead of static initialization reasonable. We can keep improving on this later, while increasing the fidelity of static initialization semantics now.//PATTERN 1: CERTAINLY BENIGN EXTERNAL REFERENCES/Static initializers often creates instances of framework classes like an ArrayList, and maybe adding some elements to it.//PATTERN 2: PROBABLY BENIGN EXTERNAL REFERENCES/Static initializers also often create instances of classes like an HashSet, and add elements to it. That isn’t actually guaranteed to be benign, as it may execute potentially arbitrary code by invoking .hashCode and .equals methods. While we could do some sophisticated analysis to figure this out, it’s probably benign.//PATTERN 3: CLEARLY SIDE-EFFECTING EXTERNAL METHODS THAT STILL DON’T ACTUALLY MATTER/Calls to java.util.logging.Logger.log will clearly have an observable side-effect, and yet, it probably doesn’t matter for app functionality. Moving around the time java.lang.System.currentTimeMillis() is called clearly has some implications, but if we used to do that in the past, it’s probably not a functional issue...//Reviewed By: kathryngray//Differential Revision: D31257522//fbshipit-source-id: 7c5bde31ffc66f8c5c6c6d9207fe083638a50007",https://github.com/facebook/redex/commit/6af568b764e9540771aaddf3e18fec5a37b477d2,54664770,facebook/redex,False,False
21,e890c6d772816c9d9b90b6c8bf5da18994ee27c0,"Have AstEnvironment fully own the module tracker//Summary:/The root cause of a lot of our problems with testing APIs -/which also makes production codepaths harder to understand - is that/instead of creating the entire environment stack at once we create/some of the bottom layers first and then pass them into higher layers.//This dependency injection pattern might be good for its flexibility,/except that there's a catch: the control flow in push updates means/that we need a higher-level environment layer to *completely* own/lower levels, because it creates illegal states if the lower levels/are ever updated without updating the higher levels.//This is something we can fix by having appropriate creation apis/at all layers so that they can construct their own (hidden) inner/layers, which guarantees that the update rules are never violated.//To do this, we need to have three creation apis:/- create, used for all from-scratch environments in production/- load, used to load from a saved state/- create_for_testing, used to create an environment that is backed/  by in-memory sources (and cannot be updated).//This commit updates AstEnvironment to expose these three apis,/in the next commit I'll update the higher-level environments to/do the same.//Differential Revision: D36881932//fbshipit-source-id: dfb58aa4361157bfbb5bdce1e7a88972504485c2",https://github.com/facebook/pyre-check/commit/e890c6d772816c9d9b90b6c8bf5da18994ee27c0,110274488,facebook/pyre-check,False,False
22,68ab9bde9bc018dc1947f2b178b6abbe6ebbe8a6,"Refactor nast_reactivity_check away from iter_with_state_pattern//Summary: This check was added on 2/22/2019 (D14121615), and is likely responsible for some performance regressions. Moving away from this iter with state pattern should improve the issue.//Differential Revision: D14307779//fbshipit-source-id: a9078e7bade6971612ff4b2f7f79de3f70deb0b5",https://github.com/facebook/hhvm/commit/68ab9bde9bc018dc1947f2b178b6abbe6ebbe8a6,455600,facebook/hhvm,False,False
23,c6e9525d3bfa02d89a1ea651f11d4c54e278dbc9,"refactor context_control_check away from iter_with_state pattern//Summary:/I'm hoping to test the performance of the `iter_with_state` pattern with these diffs.//Also, moves some of the ctx fields to the environment fields on nast_check so other checks can take advantage of them.//Reviewed By: kmeht//Differential Revision: D14297741//fbshipit-source-id: f63fcb05a64b3c15d561b5b79a0d177db59d89e7",https://github.com/facebook/hhvm/commit/c6e9525d3bfa02d89a1ea651f11d4c54e278dbc9,455600,facebook/hhvm,False,False
24,c8b9f407afeffc258b1d1660463f30d49561f531,"Protect getProgrammedState with a mutex//Summary:/Acquire mutex to guard against picking up a stale programmed/state. A state update maybe in progress. A common pattern in/tests is to get the current programmedState, make changes to/it and then call applyNewState. If a state update is in/progress when you query programmedState_, you risk undoing/the changes of ongoing state update.//Reviewed By: shri-khare//Differential Revision: D23258181//fbshipit-source-id: d14312f168b3d29884a0c19e7fd22aaeda4a45e9",https://github.com/facebook/fboss/commit/c8b9f407afeffc258b1d1660463f30d49561f531,31927407,facebook/fboss,False,False
25,86ead2eb964e09b25fa38f35ed622a54acde87f8,"Tighten companion-by-udid invariants//Summary:/The intent here is to take domain logic out of the CompanionSet. This makes it even more of a dumb wrapper around state.//As a result of this change, we can tighten invariants within the ManagementClient://- Companion spawning will fail earlier if there's no matching target for a given udid./- Explicit fallback of ""no local targets"" when running in ""companionless"" environments./- No re-raising of exceptions/- Case analysis (closer to pattern matching) for all of the ""companion by udid"" cases.//Reviewed By: jbardini//Differential Revision: D31994843//fbshipit-source-id: be92077cef16f0f719f86c8daa9cd65256076d24",https://github.com/facebook/idb/commit/86ead2eb964e09b25fa38f35ed622a54acde87f8,41870517,facebook/idb,False,False
26,3a64804b41df9af1ebb1b7f97586f74278a89edb,"[erl-pulse] Bugfix in handling dynamic types//Summary:/Pulse models for built-in Erlang functions sometimes have the pattern/""if type of x is T, then access these fields of x"". The ""if"" part was/sometimes producing a subtly unsatisfiable state: attributes say that x/is an invalid reference, but path condition requires that x has type T./This led to a crash.//The fix here works by not producing ""subtly unsatisfiable"" states, but/by explicitly pruning the exploration of such execution paths.//Reviewed By: mmarescotti//Differential Revision: D31543370//fbshipit-source-id: 88cd4299e",https://github.com/facebook/infer/commit/3a64804b41df9af1ebb1b7f97586f74278a89edb,29857799,facebook/infer,False,False
27,875b48aba30cf7dcb03ecb3d5cb16f1ccfda6843,"[inline-requires] Make named imports work (#246)//Patterns like `import {name} from 'module'` were not working properly.//This adds support for that pattern.////In addition, state is local to the traversal, to avoid leaking paths after using the plugin.",https://github.com/facebook/fbjs/commit/875b48aba30cf7dcb03ecb3d5cb16f1ccfda6843,36469177,facebook/fbjs,False,False
28,25d8341f9750a8825dcdb7762d0bc9843814520f,Optimize ConcatStrStr pairs to ConcatStr3//Summary:/When we see a pattern where/```/t1 = ConcatStrStr a b/t2 = ConcatStrStr t1 c/```/we can convert this into/```/t2 = ConcatStr3 a b c/```/if all uses of `t1` are/* `t2 = ConcatStrStr t1 c`/* `Decref t1`/* `StStk` in catch traces//Note: `StStk` in catch traces comes from bringing the unwinder to a consistent state so that it properly unwind the stack.//Reviewed By: ottoni//Differential Revision: D28293952//fbshipit-source-id: 216c47d2400af57bb89fd8d9df1acdc357b00a90,https://github.com/facebook/hhvm/commit/25d8341f9750a8825dcdb7762d0bc9843814520f,455600,facebook/hhvm,False,False
29,5724348689c7b6f51a3bbca5723af2185b77653e,"Revamp, optimize new experimental clock cache (#10626)//Summary:/* Consolidates most metadata into a single word per slot so that more/can be accomplished with a single atomic update. In the common case,/Lookup was previously about 4 atomic updates, now just 1 atomic update./Common case Release was previously 1 atomic read + 1 atomic update,/now just 1 atomic update./* Eliminate spins / waits / yields, which likely threaten some ""lock free""/benefits. Compare-exchange loops are only used in explicit Erase, and/strict_capacity_limit=true Insert. Eviction uses opportunistic compare-/exchange./* Relaxes some aggressiveness and guarantees. For example,/  * Duplicate Inserts will sometimes go undetected and the shadow duplicate/    will age out with eviction./  * In many cases, the older Inserted value for a given cache key will be kept/  (i.e. Insert does not support overwrite)./  * Entries explicitly erased (rather than evicted) might not be freed/  immediately in some rare cases./  * With strict_capacity_limit=false, capacity limit is not tracked/enforced as/  precisely as LRUCache, but is self-correcting and should only deviate by a/  very small number of extra or fewer entries./* Use smaller ""computed default"" number of cache shards in many cases,/because benefits to larger usage tracking / eviction pools outweigh the small/cost of more lock-free atomic contention. The improvement in CPU and I/O/is dramatic in some limit-memory cases./* Even without the sharding change, the eviction algorithm is likely more/effective than LRU overall because it's more stateful, even though the/""hot path"" state tracking for it is essentially free with ref counting. It/is like a generalized CLOCK with aging (see code comments). I don't have/performance numbers showing a specific improvement, but in theory, for a/Poisson access pattern to each block, keeping some state allows better/estimation of time to next access (Poisson interval) than strict LRU. The/bounded randomness in CLOCK can also reduce ""cliff"" effect for repeated/range scans approaching and exceeding cache size.//## Hot path algorithm comparison/Rough descriptions, focusing on number and kind of atomic operations:/* Old `Lookup()` (2-5 atomic updates per probe):/```/Loop:/  Increment internal ref count at slot/  If possible hit:/    Check flags atomic (and non-atomic fields)/    If cache hit:/      Three distinct updates to 'flags' atomic/      Increment refs for internal-to-external/      Return/  Decrement internal ref count/while atomic read 'displacements' > 0/```/* New `Lookup()` (1-2 atomic updates per probe):/```/Loop:/  Increment acquire counter in meta word (optimistic)/  If visible entry (already read meta word):/    If match (read non-atomic fields):/      Return/    Else:/      Decrement acquire counter in meta word/  Else if invisible entry (rare, already read meta word):/    Decrement acquire counter in meta word/while atomic read 'displacements' > 0/```/* Old `Release()` (1 atomic update, conditional on atomic read, rarely more):/```/Read atomic ref count/If last reference and invisible (rare):/  Use CAS etc. to remove/  Return/Else:/  Decrement ref count/```/* New `Release()` (1 unconditional atomic update, rarely more):/```/Increment release counter in meta word/If last reference and invisible (rare):/  Use CAS etc. to remove/  Return/```//## Performance test setup/Build DB with/```/TEST_TMPDIR=/dev/shm ./db_bench -benchmarks=fillrandom -num=30000000 -disable_wal=1 -bloom_bits=16/```/Test with/```/TEST_TMPDIR=/dev/shm ./db_bench -benchmarks=readrandom -readonly -num=30000000 -bloom_bits=16 -cache_index_and_filter_blocks=1 -cache_size=${CACHE_MB}000000 -duration 60 -threads=$THREADS -statistics/```/Numbers on a single socket Skylake Xeon system with 48 hardware threads, DEBUG_LEVEL=0 PORTABLE=0. Very similar story on a dual socket system with 80 hardware threads. Using (every 2nd) Fibonacci MB cache sizes to sample the territory between powers of two. Configurations://base: LRUCache before this change, but with db_bench change to default cache_numshardbits=-1 (instead of fixed at 6)/folly: LRUCache before this change, with folly enabled (distributed mutex) but on an old compiler (sorry)/gt_clock: experimental ClockCache before this change/new_clock: experimental ClockCache with this change//## Performance test results/First test ""hot path"" read performance, with block cache large enough for whole DB:/4181MB 1thread base -> kops/s: 47.761/4181MB 1thread folly -> kops/s: 45.877/4181MB 1thread gt_clock -> kops/s: 51.092/4181MB 1thread new_clock -> kops/s: 53.944//4181MB 16thread base -> kops/s: 284.567/4181MB 16thread folly -> kops/s: 249.015/4181MB 16thread gt_clock -> kops/s: 743.762/4181MB 16thread new_clock -> kops/s: 861.821//4181MB 24thread base -> kops/s: 303.415/4181MB 24thread folly -> kops/s: 266.548/4181MB 24thread gt_clock -> kops/s: 975.706/4181MB 24thread new_clock -> kops/s: 1205.64 (~= 24 * 53.944)//4181MB 32thread base -> kops/s: 311.251/4181MB 32thread folly -> kops/s: 274.952/4181MB 32thread gt_clock -> kops/s: 1045.98/4181MB 32thread new_clock -> kops/s: 1370.38//4181MB 48thread base -> kops/s: 310.504/4181MB 48thread folly -> kops/s: 268.322/4181MB 48thread gt_clock -> kops/s: 1195.65/4181MB 48thread new_clock -> kops/s: 1604.85 (~= 24 * 1.25 * 53.944)//4181MB 64thread base -> kops/s: 307.839/4181MB 64thread folly -> kops/s: 272.172/4181MB 64thread gt_clock -> kops/s: 1204.47/4181MB 64thread new_clock -> kops/s: 1615.37//4181MB 128thread base -> kops/s: 310.934/4181MB 128thread folly -> kops/s: 267.468/4181MB 128thread gt_clock -> kops/s: 1188.75/4181MB 128thread new_clock -> kops/s: 1595.46//Whether we have just one thread on a quiet system or an overload of threads, the new version wins every time in thousand-ops per second, sometimes dramatically so. Mutex-based implementation quickly becomes contention-limited. New clock cache shows essentially perfect scaling up to number of physical cores (24), and then each hyperthreaded core adding about 1/4 the throughput of an additional physical core (see 48 thread case). Block cache miss rates (omitted above) are negligible across the board. With partitioned instead of full filters, the maximum speed-up vs. base is more like 2.5x rather than 5x.//Now test a large block cache with low miss ratio, but some eviction is required:/1597MB 1thread base -> kops/s: 46.603 io_bytes/op: 1584.63 miss_ratio: 0.0201066 max_rss_mb: 1589.23/1597MB 1thread folly -> kops/s: 45.079 io_bytes/op: 1530.03 miss_ratio: 0.019872 max_rss_mb: 1550.43/1597MB 1thread gt_clock -> kops/s: 48.711 io_bytes/op: 1566.63 miss_ratio: 0.0198923 max_rss_mb: 1691.4/1597MB 1thread new_clock -> kops/s: 51.531 io_bytes/op: 1589.07 miss_ratio: 0.0201969 max_rss_mb: 1583.56//1597MB 32thread base -> kops/s: 301.174 io_bytes/op: 1439.52 miss_ratio: 0.0184218 max_rss_mb: 1656.59/1597MB 32thread folly -> kops/s: 273.09 io_bytes/op: 1375.12 miss_ratio: 0.0180002 max_rss_mb: 1586.8/1597MB 32thread gt_clock -> kops/s: 904.497 io_bytes/op: 1411.29 miss_ratio: 0.0179934 max_rss_mb: 1775.89/1597MB 32thread new_clock -> kops/s: 1182.59 io_bytes/op: 1440.77 miss_ratio: 0.0185449 max_rss_mb: 1636.45//1597MB 128thread base -> kops/s: 309.91 io_bytes/op: 1438.25 miss_ratio: 0.018399 max_rss_mb: 1689.98/1597MB 128thread folly -> kops/s: 267.605 io_bytes/op: 1394.16 miss_ratio: 0.0180286 max_rss_mb: 1631.91/1597MB 128thread gt_clock -> kops/s: 691.518 io_bytes/op: 9056.73 miss_ratio: 0.0186572 max_rss_mb: 1982.26/1597MB 128thread new_clock -> kops/s: 1406.12 io_bytes/op: 1440.82 miss_ratio: 0.0185463 max_rss_mb: 1685.63//610MB 1thread base -> kops/s: 45.511 io_bytes/op: 2279.61 miss_ratio: 0.0290528 max_rss_mb: 615.137/610MB 1thread folly -> kops/s: 43.386 io_bytes/op: 2217.29 miss_ratio: 0.0289282 max_rss_mb: 600.996/610MB 1thread gt_clock -> kops/s: 46.207 io_bytes/op: 2275.51 miss_ratio: 0.0290057 max_rss_mb: 637.934/610MB 1thread new_clock -> kops/s: 48.879 io_bytes/op: 2283.1 miss_ratio: 0.0291253 max_rss_mb: 613.5//610MB 32thread base -> kops/s: 306.59 io_bytes/op: 2250 miss_ratio: 0.0288721 max_rss_mb: 683.402/610MB 32thread folly -> kops/s: 269.176 io_bytes/op: 2187.86 miss_ratio: 0.0286938 max_rss_mb: 628.742/610MB 32thread gt_clock -> kops/s: 855.097 io_bytes/op: 2279.26 miss_ratio: 0.0288009 max_rss_mb: 733.062/610MB 32thread new_clock -> kops/s: 1121.47 io_bytes/op: 2244.29 miss_ratio: 0.0289046 max_rss_mb: 666.453//610MB 128thread base -> kops/s: 305.079 io_bytes/op: 2252.43 miss_ratio: 0.0288884 max_rss_mb: 723.457/610MB 128thread folly -> kops/s: 269.583 io_bytes/op: 2204.58 miss_ratio: 0.0287001 max_rss_mb: 676.426/610MB 128thread gt_clock -> kops/s: 53.298 io_bytes/op: 8128.98 miss_ratio: 0.0292452 max_rss_mb: 956.273/610MB 128thread new_clock -> kops/s: 1301.09 io_bytes/op: 2246.04 miss_ratio: 0.0289171 max_rss_mb: 788.812//The new version is still winning every time, sometimes dramatically so, and we can tell from the maximum resident memory numbers (which contain some noise, by the way) that the new cache is not cheating on memory usage. IMPORTANT: The previous generation experimental clock cache appears to hit a serious bottleneck in the higher thread count configurations, presumably due to some of its waiting functionality. (The same bottleneck is not seen with partitioned index+filters.)//Now we consider even smaller cache sizes, with higher miss ratios, eviction work, etc.//233MB 1thread base -> kops/s: 10.557 io_bytes/op: 227040 miss_ratio: 0.0403105 max_rss_mb: 247.371/233MB 1thread folly -> kops/s: 15.348 io_bytes/op: 112007 miss_ratio: 0.0372238 max_rss_mb: 245.293/233MB 1thread gt_clock -> kops/s: 6.365 io_bytes/op: 244854 miss_ratio: 0.0413873 max_rss_mb: 259.844/233MB 1thread new_clock -> kops/s: 47.501 io_bytes/op: 2591.93 miss_ratio: 0.0330989 max_rss_mb: 242.461//233MB 32thread base -> kops/s: 96.498 io_bytes/op: 363379 miss_ratio: 0.0459966 max_rss_mb: 479.227/233MB 32thread folly -> kops/s: 109.95 io_bytes/op: 314799 miss_ratio: 0.0450032 max_rss_mb: 400.738/233MB 32thread gt_clock -> kops/s: 2.353 io_bytes/op: 385397 miss_ratio: 0.048445 max_rss_mb: 500.688/233MB 32thread new_clock -> kops/s: 1088.95 io_bytes/op: 2567.02 miss_ratio: 0.0330593 max_rss_mb: 303.402//233MB 128thread base -> kops/s: 84.302 io_bytes/op: 378020 miss_ratio: 0.0466558 max_rss_mb: 1051.84/233MB 128thread folly -> kops/s: 89.921 io_bytes/op: 338242 miss_ratio: 0.0460309 max_rss_mb: 812.785/233MB 128thread gt_clock -> kops/s: 2.588 io_bytes/op: 462833 miss_ratio: 0.0509158 max_rss_mb: 1109.94/233MB 128thread new_clock -> kops/s: 1299.26 io_bytes/op: 2565.94 miss_ratio: 0.0330531 max_rss_mb: 361.016//89MB 1thread base -> kops/s: 0.574 io_bytes/op: 5.35977e+06 miss_ratio: 0.274427 max_rss_mb: 91.3086/89MB 1thread folly -> kops/s: 0.578 io_bytes/op: 5.16549e+06 miss_ratio: 0.27276 max_rss_mb: 96.8984/89MB 1thread gt_clock -> kops/s: 0.512 io_bytes/op: 4.13111e+06 miss_ratio: 0.242817 max_rss_mb: 119.441/89MB 1thread new_clock -> kops/s: 48.172 io_bytes/op: 2709.76 miss_ratio: 0.0346162 max_rss_mb: 100.754//89MB 32thread base -> kops/s: 5.779 io_bytes/op: 6.14192e+06 miss_ratio: 0.320399 max_rss_mb: 311.812/89MB 32thread folly -> kops/s: 5.601 io_bytes/op: 5.83838e+06 miss_ratio: 0.313123 max_rss_mb: 252.418/89MB 32thread gt_clock -> kops/s: 0.77 io_bytes/op: 3.99236e+06 miss_ratio: 0.236296 max_rss_mb: 396.422/89MB 32thread new_clock -> kops/s: 1064.97 io_bytes/op: 2687.23 miss_ratio: 0.0346134 max_rss_mb: 155.293//89MB 128thread base -> kops/s: 4.959 io_bytes/op: 6.20297e+06 miss_ratio: 0.323945 max_rss_mb: 823.43/89MB 128thread folly -> kops/s: 4.962 io_bytes/op: 5.9601e+06 miss_ratio: 0.319857 max_rss_mb: 626.824/89MB 128thread gt_clock -> kops/s: 1.009 io_bytes/op: 4.1083e+06 miss_ratio: 0.242512 max_rss_mb: 1095.32/89MB 128thread new_clock -> kops/s: 1224.39 io_bytes/op: 2688.2 miss_ratio: 0.0346207 max_rss_mb: 218.223//^ Now something interesting has happened: the new clock cache has gained a dramatic lead in the single-threaded case, and this is because the cache is so small, and full filters are so big, that dividing the cache into 64 shards leads to significant (random) imbalances in cache shards and excessive churn in imbalanced shards. This new clock cache only uses two shards for this configuration, and that helps to ensure that entries are part of a sufficiently big pool that their eviction order resembles the single-shard order. (This effect is not seen with partitioned index+filters.)//Even smaller cache size:/34MB 1thread base -> kops/s: 0.198 io_bytes/op: 1.65342e+07 miss_ratio: 0.939466 max_rss_mb: 48.6914/34MB 1thread folly -> kops/s: 0.201 io_bytes/op: 1.63416e+07 miss_ratio: 0.939081 max_rss_mb: 45.3281/34MB 1thread gt_clock -> kops/s: 0.448 io_bytes/op: 4.43957e+06 miss_ratio: 0.266749 max_rss_mb: 100.523/34MB 1thread new_clock -> kops/s: 1.055 io_bytes/op: 1.85439e+06 miss_ratio: 0.107512 max_rss_mb: 75.3125//34MB 32thread base -> kops/s: 3.346 io_bytes/op: 1.64852e+07 miss_ratio: 0.93596 max_rss_mb: 180.48/34MB 32thread folly -> kops/s: 3.431 io_bytes/op: 1.62857e+07 miss_ratio: 0.935693 max_rss_mb: 137.531/34MB 32thread gt_clock -> kops/s: 1.47 io_bytes/op: 4.89704e+06 miss_ratio: 0.295081 max_rss_mb: 392.465/34MB 32thread new_clock -> kops/s: 8.19 io_bytes/op: 3.70456e+06 miss_ratio: 0.20826 max_rss_mb: 519.793//34MB 128thread base -> kops/s: 2.293 io_bytes/op: 1.64351e+07 miss_ratio: 0.931866 max_rss_mb: 449.484/34MB 128thread folly -> kops/s: 2.34 io_bytes/op: 1.6219e+07 miss_ratio: 0.932023 max_rss_mb: 396.457/34MB 128thread gt_clock -> kops/s: 1.798 io_bytes/op: 5.4241e+06 miss_ratio: 0.324881 max_rss_mb: 1104.41/34MB 128thread new_clock -> kops/s: 10.519 io_bytes/op: 2.39354e+06 miss_ratio: 0.136147 max_rss_mb: 1050.52//As the miss ratio gets higher (say, above 10%), the CPU time spent in eviction starts to erode the advantage of using fewer shards (13% miss rate much lower than 94%). LRU's O(1) eviction time can eventually pay off when there's enough block cache churn://13MB 1thread base -> kops/s: 0.195 io_bytes/op: 1.65732e+07 miss_ratio: 0.946604 max_rss_mb: 45.6328/13MB 1thread folly -> kops/s: 0.197 io_bytes/op: 1.63793e+07 miss_ratio: 0.94661 max_rss_mb: 33.8633/13MB 1thread gt_clock -> kops/s: 0.519 io_bytes/op: 4.43316e+06 miss_ratio: 0.269379 max_rss_mb: 100.684/13MB 1thread new_clock -> kops/s: 0.176 io_bytes/op: 1.54148e+07 miss_ratio: 0.91545 max_rss_mb: 66.2383//13MB 32thread base -> kops/s: 3.266 io_bytes/op: 1.65544e+07 miss_ratio: 0.943386 max_rss_mb: 132.492/13MB 32thread folly -> kops/s: 3.396 io_bytes/op: 1.63142e+07 miss_ratio: 0.943243 max_rss_mb: 101.863/13MB 32thread gt_clock -> kops/s: 2.758 io_bytes/op: 5.13714e+06 miss_ratio: 0.310652 max_rss_mb: 396.121/13MB 32thread new_clock -> kops/s: 3.11 io_bytes/op: 1.23419e+07 miss_ratio: 0.708425 max_rss_mb: 321.758//13MB 128thread base -> kops/s: 2.31 io_bytes/op: 1.64823e+07 miss_ratio: 0.939543 max_rss_mb: 425.539/13MB 128thread folly -> kops/s: 2.339 io_bytes/op: 1.6242e+07 miss_ratio: 0.939966 max_rss_mb: 346.098/13MB 128thread gt_clock -> kops/s: 3.223 io_bytes/op: 5.76928e+06 miss_ratio: 0.345899 max_rss_mb: 1087.77/13MB 128thread new_clock -> kops/s: 2.984 io_bytes/op: 1.05341e+07 miss_ratio: 0.606198 max_rss_mb: 898.27//gt_clock is clearly blowing way past its memory budget for lower miss rates and best throughput. new_clock also seems to be exceeding budgets, and this warrants more investigation but is not the use case we are targeting with the new cache. With partitioned index+filter, the miss ratio is much better, and although still high enough that the eviction CPU time is definitely offsetting mutex contention://13MB 1thread base -> kops/s: 16.326 io_bytes/op: 23743.9 miss_ratio: 0.205362 max_rss_mb: 65.2852/13MB 1thread folly -> kops/s: 15.574 io_bytes/op: 19415 miss_ratio: 0.184157 max_rss_mb: 56.3516/13MB 1thread gt_clock -> kops/s: 14.459 io_bytes/op: 22873 miss_ratio: 0.198355 max_rss_mb: 63.9688/13MB 1thread new_clock -> kops/s: 16.34 io_bytes/op: 24386.5 miss_ratio: 0.210512 max_rss_mb: 61.707//13MB 128thread base -> kops/s: 289.786 io_bytes/op: 23710.9 miss_ratio: 0.205056 max_rss_mb: 103.57/13MB 128thread folly -> kops/s: 185.282 io_bytes/op: 19433.1 miss_ratio: 0.184275 max_rss_mb: 116.219/13MB 128thread gt_clock -> kops/s: 354.451 io_bytes/op: 23150.6 miss_ratio: 0.200495 max_rss_mb: 102.871/13MB 128thread new_clock -> kops/s: 295.359 io_bytes/op: 24626.4 miss_ratio: 0.212452 max_rss_mb: 121.109//Pull Request resolved: https://github.com/facebook/rocksdb/pull/10626//Test Plan: updated unit tests, stress/crash test runs including with TSAN, ASAN, UBSAN//Reviewed By: anand1976//Differential Revision: D39368406//Pulled By: pdillinger//fbshipit-source-id: 5afc44da4c656f8f751b44552bbf27bd3ca6fef9",https://github.com/facebook/rocksdb/commit/5724348689c7b6f51a3bbca5723af2185b77653e,6934395,facebook/rocksdb,False,False
0,9a52cc8bcd580238f4a8b12036e698823847fd65,"Convert ReactLazy-test to waitFor pattern (#26304)//I'm in the process of codemodding our test suite to the waitFor pattern.//See #26285 for full context.////This module required a lot of manual changes so I'm doing it as its own//PR. The reason is that most of the tests involved simulating an async//import by wrapping them in `Promise.resolve()`, which means they would//immediately resolve the next time the microtask queue was flushed. I//rewrote the tests to resolve the simulated import explicitly.////While converting these tests, I also realized that the `waitFor` helpers//weren't properly waiting for the entire microtask queue to recursively//finish — if a microtask schedules another microtask, the subsequent one//wouldn't fire until after `waitFor` had resolved. To fix this, I used//the same strategy as `act` — wait for a real task to finish before//proceeding, such as a message event.",https://github.com/facebook/react/commit/9a52cc8bcd580238f4a8b12036e698823847fd65,10270250,facebook/react,False,False
1,1f5cdf8c77182fc51910787e48384ec4620dc40d,"Update Suspense fuzz tests to use `act` (#26498)//This updates the Suspense fuzz tester to use `act` to recursively flush//timers instead of doing it manually.////This still isn't great because ideally the fuzz tester wouldn't fake//timers at all. It should resolve promises using a custom queue instead//of Jest's fake timer queue, like we've started doing in our other//Suspense tests (i.e. the `resolveText` pattern). That's because our//internal `act` API (not the public one, the one we use in our tests)//uses Jest's fake timer queue as a way to force Suspense fallbacks to//appear.////However I'm not interested in upgrading this test suite to a better//strategy right now because if I were writing a Suspense fuzzer today I//would probably use an entirely different approach. So this is just an//incremental improvement to make it slightly less decoupled to React//implementation details.",https://github.com/facebook/react/commit/1f5cdf8c77182fc51910787e48384ec4620dc40d,10270250,facebook/react,False,False
2,ddba780c0cb44d75d41fc252d8212181040a3020,"fix: Change checkout cache strategy (#35259)//Summary:/This PR updates he cache strategy for the `checkout_with_cache command`.//The previous strategy was using three keys in descending priority order to restore from the cache:/* `<< parameters.checkout_base_cache_key >>-{{ arch }}-{{ .Branch }}-{{ .Revision }}`/* `<< parameters.checkout_base_cache_key >>-{{ arch }}-{{ .Branch }}`/*`<< parameters.checkout_base_cache_key >>-{{ arch }}`//When it saves, it always saves using the first key.//The restore works as it follows:/1. It tries to restore the cache using the first key/2. If it fails, it checks whether there is a cache hit for a key that matches the second key as a pattern/3. If it fails, it checks whether there is a cache hit for a key that matches the third pattern/4. Otherwise, it is a cache miss.//This does not work well. Imagine that you submit some code in commit `xxxx` for branch `abc`./The CI run the first time, it misses all the three keys and checks out the code normally./Then, it stores the checked out code in the `checkout_key-abc-xxxx` key.//Then, you submit a commit `yyyy` in the same branch./The CI starts, it tries with the key `checkout_key-abc-yyyy` but it misses/It tries with the key `checkout_key-abc` and it finds the cache for `checkout_key-abc-xxxx` and it restores it, forgetting about your changes.//While doing the release, we created a tag in a commit X. Then we manually had to remove it, but the CI had a cached version of .git with the tag for/the `0.71-stable` branch. And the release failed because the tag was already existing.//### Why this should work//With this solution, we are going to cache using the commit. If there is no cache for a specific commit, it will be a miss. It won't try to be smart and/retrieve the code from previous caches.//This should prevent stale caches and if we manually remove a tag, and then we do a new commit, it should work.//This is a good trade-off that allows to pay the checkout cost only for the first batch of jobs of the pipeline.//**NOTE:** This still won't work if we don't do a new commit.//## Changelog//[General] [Fixed] - Change Cache strategy to avoid cache bumps in Release//Pull Request resolved: https://github.com/facebook/react-native/pull/35259//Test Plan: 1. CircleCI must be green//Reviewed By: jacdebug//Differential Revision: D41120895//Pulled By: cipolleschi//fbshipit-source-id: 2b45da01803197dbe4a25a313a9dfc53a976d096",https://github.com/facebook/react-native/commit/ddba780c0cb44d75d41fc252d8212181040a3020,29028775,facebook/react-native,False,False
3,fe61ebd6c9f83a016edb5587ece9f2640d9d5dc8,"[new-env] Use refined value for initialization for identifiers in object destructuring patterns//Summary:/Right now in the new env, when we encounter an object destructuring patterns like `{a:{b:c}} = obj`, we have no understanding that `c` refers to `obj.a.b.c`, which is problematic for refinements as `obj.a.b.c` might be refined.//In the old env in [`destrucuring.ml`](https://github.com/facebook/flow/blob/309dcc932686fcf36fbcfae2fd3f8343f306bb99/src/typing/destructuring.ml#L110-L130), we build up an member expression as we go deeper into the object pattern, and use that to track refinements. This diff mirrors the same strategy, except that we only query for existing refinements when we reached the leaf of the pattern, and then use that refined value to initialize the id. Before querying the refinement, we will read the synthetic object, so that all the refinements, including those on `object` subexpressions, will be recorded and picked up by `destructuring.ml`//Changelog: [internal]//Reviewed By: jbrown215//Differential Revision: D35268179//fbshipit-source-id: 737d216b1750710022d5acb70fae0f0f203d6569",https://github.com/facebook/flow/commit/fe61ebd6c9f83a016edb5587ece9f2640d9d5dc8,25880891,facebook/flow,False,False
4,e96f741bcb157177a13eb2a547514a45ed5544d0,"[resolved-env] Use refined type if it exists when resolving a selector//Summary:/Changelog: [internal]//In D35268179 (https://github.com/facebook/flow/commit/fe61ebd6c9f83a016edb5587ece9f2640d9d5dc8), I implemented the support to make initialized names in an object destructuring pattern to read refined values in new-env. Here in resolved-env, we are currently always using destructuring to initialize the names without considering these possible refinements.//In this diff, I made the resolution of selector binding to first check whether the refinement exists. If it does, we directly return the refined type, and we will only fallback to normal destructuring if there is no refinement available. This strategy is consistent with the current implementation in destructuring.ml.//Reviewed By: mvitousek//Differential Revision: D37363784//fbshipit-source-id: d8690c083147f6dd6e42fd657d62176cbe05125b",https://github.com/facebook/flow/commit/e96f741bcb157177a13eb2a547514a45ed5544d0,25880891,facebook/flow,False,False
5,ca73087e18abcb8acb593686629d814c9a0644c4,"Add UnannotatedGlobalEnvironment.Overlay (update only)//Summary:/UnannotatedGlobalEnvironment is more complicated than ModuleTracker and AstEnvironment because - due to the wildcard import dependencies coming from preprocessing - it is the first layer where we have to start worrying about dependency fan-out.//As a result its update function needs to update the underlying AstEnvironment overlay and also filter down the invalidated_modules to only those that are ""owned"" by the overlay - this prevents us from fanning out unsaved changes to downstream wildcard imports.//For the same reason, this layer will eventually need a function that propagates parent updates, but that is out of scope for this diff: I want to get the basic functionality for an overlay (how does it behave given a static parent) in place before worrying about parent propagation.//The implementation of `read_only` here is nontrivial because there are so many data structures owned by `UnannotatedGlobalEnvironment`. The strategy is:/- for all functions of the form `all_.*`, we just use the parent environment; these functions are not used except by `pyre query`, debugging tools in `check`, and pysa - none of which should ever need overlay support/- for all other functions, we follow a standard pattern:/   - first do an ownership check for the key/   - if the key is not owned, proxy to the corresponding function on the parent/   - otherwise, use the read-only backed by our own `from_upstream_readonly` (which should contain only the overlay data, a ""skinny"" dataset)//Reviewed By: pradeep90//Differential Revision: D36992180//fbshipit-source-id: 63db0d82f6e317ee929ecca3558d994d5e102dce",https://github.com/facebook/pyre-check/commit/ca73087e18abcb8acb593686629d814c9a0644c4,110274488,facebook/pyre-check,False,False
6,689922dc8eb36a83bf0461408c202b5bd0d66924,"WL#5347: Refactor optimizer function at_sjmat_pos()/  /Renamed at_sjmat_pos() to semijoin_order_allows_materialization(), simplified/arguments to this function, and simplified the code slightly./Added Doxygen header./   /Descriptions of allowed table patterns for MaterializeLookup and/MaterializeScan were added to the function header of/setup_semijoin_dups_elimination(). Added Doxygen header./  /sql/sql_select.cc/  Rewritten at_sjmat_pos(), new name semijoin_order_allows_materialization./  Added description about use pattern for materialization strategies.//revid:roy.lyseng@sun.com-20100429121506-0vz5ofnwh2i548fw",https://github.com/facebook/mysql-5.6/commit/689922dc8eb36a83bf0461408c202b5bd0d66924,9454675,facebook/mysql-5.6,False,False
7,9fbf12be2c73617fb22829bb4c02b311346b491d,"Try to inline singleton pattern functions//Summary: We see a lot of code roughly of the form//  function getSingletonFoo() {/    static $instance = null;/    if ($instance === null) {/      // Do some stuff and set $instance./    }/    return $instance;/  }//Let's optimistically assume that such patterns are in fact singleton/patterns (as opposed to, say, some means of inter-method communication/to avoid threading arguments) and try to inline these checks.  The first/time we hit each callsite, we'll side-exit to do the call, and/subsequent calls will simply return the value at $instance, assuming the/checks still pass.//We also introduce a TransFlags struct which we thread through BindJmp/requests and into the translation routines so that we turn the inlining/off in the stub.//Presently, this inlining strategy is restricted to non-resumable/functions with no arguments passed and which don't return refs.//Reviewed By: bertrand//Differential Revision: D1344602",https://github.com/facebook/hhvm/commit/9fbf12be2c73617fb22829bb4c02b311346b491d,455600,facebook/hhvm,False,False
8,5abe7aa53bf9abe78c9446c1a4c0b515eb37ec6e,"Encapsulate intrusive OCaml value caching in RcOc//Summary:/The PositionedToken type wraps its implementation in an `Rc`, since tokens are shared between many nodes in a positioned CST (since each node holds on to references to the leading token in its first child and the trailing token in its last child). Originally, we preserved this sharing while converting to OCaml by maintaining a HashMap from the token address to the converted OCaml value in a SerializationContext. In {D16541139}, we improved performance by storing this mapping intrusively instead. AIUI, we used `mem::transmute` here rather than `Cell` because of the use of `catch_unwind` in the parser--since `Cell` does not implement `RefUnwindSafe`, we used unsafe code to hide our use of internal mutability from the compiler.//In {D17772800}, we are considering adding fields to RelativePath to implement the same intrusive-caching strategy. I'm proposing here that instead, we encapsulate this pattern in a type named `RcOc`, and use `RcOc` rather than `Rc` in situations where conversion-to-OCaml performance is critical. I did not find that `Cell` not being `RefUnwindSafe` was a problem for this implementation, so this diff just uses `Cell`s rather than transmutes.//Reviewed By: shiqicao, losvald//Differential Revision: D17955577//fbshipit-source-id: b33567f54914ac569ba26b61dcb6ca0d32e1d933",https://github.com/facebook/hhvm/commit/5abe7aa53bf9abe78c9446c1a4c0b515eb37ec6e,455600,facebook/hhvm,False,False
9,845398eecb173a718ae7730f4db9d2e723ab9c8a,"Bug#12664936: Same query executed as where subquery gives different/              results on in() compare #2//Step 1 of 2 - Refactoring//This is a local refactoring done before the actual bugfix./It makes get_best_combination() a public member function of class/JOIN, and splits the main work over a few smaller functions./It also changes the order of some evaluations so that compiled/semi-join information is now available in the JOIN_TAB objects at/an earlier stage./get_best_combination() should actually be private, because it is/only called from make_join_statistics(), which is a free function/that should also be a private member function of class JOIN.//sql/sql_select.cc/  get_best_combination() is refactored according to pseudo code:/   - Fix semi-join strategies after table order selection./   - Create the new JOIN_TAB array./   - A loop that initializes this JOIN_TAB array./   - A function set_semijoin_info() that sets semi-join information/     for the selected table order in the JOIN_TAB array./   - A function set_access_methods() that sets up access methods/     based on key information./   - Update dependencies between tables based on the selected/     key access patterns.//sql/sql_select.h/  Defined get_best_combination() as public member function of JOIN./  Created set_semijoin_info() and set_access_methods() as private/  member functions of class JOIN.",https://github.com/facebook/mysql-5.6/commit/845398eecb173a718ae7730f4db9d2e723ab9c8a,9454675,facebook/mysql-5.6,False,False
10,b11a6f4fa90ecfc581866fb9c6c4d307c9b369b1,"Bug#13541406: Wrong result with loosescan on select .. where .. in //To explain this problem, let's look at the query in the attached test://SELECT ot1.col_int_key AS field1/FROM t2 AS ot1, t2 AS ot2/WHERE (ot1.col_varchar_key, ot2.col_varchar_nokey) IN (/    SELECT it2.col_varchar_nokey, it1.col_varchar_key/    FROM t2 AS it1 JOIN t1 AS it2 ON it2.col_int_key = it1.pk);//The selected plan for this query is (abbreviated):/ ot2  ALL/ it1  index                      col_varchar_key  ... LooseScan/ it2  ref(it1.pk)                col_int_key      FirstMatch(it1)/ ot1  ref(it2.col_varchar_nokey) col_varchar_key  Using index//In English, this means:/- The outermost loop is over the outer table ot2./- For each row of ot2, we perform a loose scan over it1./  (Notice that we could have used a ref access using index/   col_varchar_key, but loosescan and ref access cannot be combined yet)./- We use FirstMatch on table it2 to weed out duplicate rows from the/  subquery./- We use a ref access to look up rows in ot1, based on values from it2.//However, this means that there is a dependency from it2 to ot1 and/FirstMatch is only able to handle dependencies to outer tables that/are earlier in the join prefix. Hence, LooseScan (combined with FirstMatch)/is not a valid strategy for this query.//The source of the problem is that get_bound_sj_equalities() sets the/zeroth bit in bound_sj_equalities, even though the Loose_scan_opt/function add_keyuse() performs a complete analysis of bound_sj_equalities/and handled_sj_equalities later. Setting the zeroth bit has fatal/consequences in few cases, because it is later overwritten or ignored,/but it did have consequences in this case.//Thus, the problem is solved by removing get_bound_sj_equalities() and/initializing bound_sj_equalities to the empty set. As for the question/on equality propagation inside the function, I do not think that is a/problem because separate keyuse objects are set up for individual/fields of a multiple equality.//mysql-test/include/subquery_sj.inc/  Added test case for bug#13541406./  Make sure that LooseScan is not selected.//mysql-test/r/subquery_sj_all.result/mysql-test/r/subquery_sj_all_bka.result/mysql-test/r/subquery_sj_all_bka_nixbnl.result/mysql-test/r/subquery_sj_all_bkaunique.result/mysql-test/r/subquery_sj_dupsweed.result/mysql-test/r/subquery_sj_dupsweed_bka.result/mysql-test/r/subquery_sj_dupsweed_bka_nixbnl.result/mysql-test/r/subquery_sj_dupsweed_bkaunique.result/mysql-test/r/subquery_sj_firstmatch.result/mysql-test/r/subquery_sj_firstmatch_bka.result/mysql-test/r/subquery_sj_firstmatch_bka_nixbnl.result/mysql-test/r/subquery_sj_firstmatch_bkaunique.result/mysql-test/r/subquery_sj_loosescan.result/mysql-test/r/subquery_sj_loosescan_bka.result/mysql-test/r/subquery_sj_loosescan_bka_nixbnl.result/mysql-test/r/subquery_sj_loosescan_bkaunique.result/mysql-test/r/subquery_sj_mat.result/mysql-test/r/subquery_sj_mat_bka.result/mysql-test/r/subquery_sj_mat_bka_nixbnl.result/mysql-test/r/subquery_sj_mat_bkaunique.result/mysql-test/r/subquery_sj_mat_nosj.result/mysql-test/r/subquery_sj_none.result/mysql-test/r/subquery_sj_none_bka.result/mysql-test/r/subquery_sj_none_bka_nixbnl.result/mysql-test/r/subquery_sj_none_bkaunique.result/  Added test case results for bug#13541406.//sql/sql_planner.cc/  Removed the function get_bound_sj_equalities() and initialized/  bound_sj_equalities to an empty set./  Comment updates.//sql/sql_select.h/  Comment updates in allowed table patterns for semi-join strategies.//sql/sql_select.h/  Fixed a minor documentation inconsistency.",https://github.com/facebook/mysql-5.6/commit/b11a6f4fa90ecfc581866fb9c6c4d307c9b369b1,9454675,facebook/mysql-5.6,False,False
11,694dfc9351ac171c70aa303243d19cacf31d9fa2,"WL#5561 - Enable semi-join transformation with outer join queries//mysql-test/include/join_cache.inc/  Turned off semi-join to preserve plan for an existing test.//mysql-test/include/subquery_sj.inc/  Added new tests for queries that combine outer join with semi-join./  See HLS of WL#5561 for a basic description of the new tests./  The tests are grouped according to the ""subquery patterns"" defined/  in the WL.//mysql-test/r/derived.result/  Test result changes//mysql-test/r/explain_json_all.result/  Test result changes//mysql-test/r/join_cache_bka.result/mysql-test/r/join_cache_bka_nixbnl.result/mysql-test/r/join_cache_bkaunique.result/mysql-test/r/join_cache_bnl.result/mysql-test/r/join_cache_nojb.result/  Turned off semi-join to preserve plan for an existing test.//mysql-test/r/join_outer.result/mysql-test/r/join_outer_bka.result/mysql-test/r/join_outer_bka_nixbnl.result/  Test result changes//mysql-test/r/subquery_all.result/mysql-test/r/subquery_all_bka.result/mysql-test/r/subquery_all_bka_nixbnl.result/mysql-test/r/subquery_mat.result/mysql-test/r/subquery_mat_all.result/  Some queries containing inner joins and outer joins that previously/  where executed as ""DEPENDENT SUBQUERY"" are now transformed/  to semi-joins.//mysql-test/r/subquery_sj_all.result/mysql-test/r/subquery_sj_all_bka.result/mysql-test/r/subquery_sj_all_bka_nixbnl.result/mysql-test/r/subquery_sj_all_bkaunique.result/mysql-test/r/subquery_sj_dupsweed.result/mysql-test/r/subquery_sj_dupsweed_bka.result/mysql-test/r/subquery_sj_dupsweed_bka_nixbnl.result/mysql-test/r/subquery_sj_dupsweed_bkaunique.result/mysql-test/r/subquery_sj_firstmatch.result/mysql-test/r/subquery_sj_firstmatch_bka.result/mysql-test/r/subquery_sj_firstmatch_bka_nixbnl.result/mysql-test/r/subquery_sj_firstmatch_bkaunique.result/mysql-test/r/subquery_sj_loosescan.result/mysql-test/r/subquery_sj_loosescan_bka.result/mysql-test/r/subquery_sj_loosescan_bka_nixbnl.result/mysql-test/r/subquery_sj_loosescan_bkaunique.result/mysql-test/r/subquery_sj_mat.result/mysql-test/r/subquery_sj_mat_bka.result/mysql-test/r/subquery_sj_mat_bka_nixbnl.result/mysql-test/r/subquery_sj_mat_bkaunique.result/mysql-test/r/subquery_sj_mat_nosj.result/mysql-test/r/subquery_sj_none.result/mysql-test/r/subquery_sj_none_bka.result/mysql-test/r/subquery_sj_none_bka_nixbnl.result/mysql-test/r/subquery_sj_none_bkaunique.result/  Contains new results for tests added in WL#5561./  Some queries containing inner joins and outer joins that previously/  where executed as ""DEPENDENT SUBQUERY"" are now transformed/  to semi-joins./  Some results are reordered because of the new plans.//mysql-test/r/subselect_innodb.result/  Some plans changed because of semi-join transformation.//mysql-test/r/type_time.result/  Turned off semi-join to preserve plan for an existing test.//mysql-test/r/user_var.result/  Test case results for bug#14058892.//mysql-test/r/view.result/  One result reordering because plan was changed.//mysql-test/suite/opt_trace/r/general_no_prot_all.result/mysql-test/suite/opt_trace/r/general_ps_prot_all.result/mysql-test/suite/opt_trace/r/general_no_prot_all.result/mysql-test/suite/opt_trace/r/general_ps_prot_all.result/  Changed optimizer trace because plans were changed.//mysql-test/t/join_outer.test/  Test case for bug#13980954.//mysql-test/t/type_time.test/  Turned off semi-join to preserve plan for an existing test.//mysql-test/t/user_var.test/  Test case for bug#14058892.//sql/item_func.cc/  Item_func::fix_fields() was called for a previously fixed item./  In order to avoid having yet another test in the caller, the/  DBUG_ASSERT(fixed == 0) was removed and fix_fields() will instead/  exit early when the item is already fixed./  See LLD section 2.1.//sql/item_subselect.cc/  Removed setting of const_item_cache from fix_after_pullout()./  Changed name of materialized subquery table from ""materialized subselect""/  to ""materialized-subquery"".//sql/sql_class.h/  Added field copy_field_count to class Semijoin_mat_exec.//sql/sql_executor.cc/  do_sj_dups_weedout(): Corrected bug in NULL handling when writing/  duplicate weedout row./  See LLD section 2.7./  evaluate_null_complemented_join_record(): Made sure that/  duplicate weedout table is properly reset also when we add a/  null complemented row./  See LLD section 2.6.//sql/sql_optimizer.cc/  record_semijoin_nests() was split out from simplify_joins(), because/  sometimes a semi-join nest was recorded twice./  Simplifying the complex simplify_joins() (sic) was also reasonable./  See LLD section 2.9./  semijoin_types_allow_materialization(): Small interface change./  optimize_semijoin_nests(): as a short-term measure, disallow/  materialization when there are dependencies to the outer tables./  See LLD section 2.2./  build_bitmap_for_nested_join(): Updated to use the new nj_xxx fields./  Record tables belonging in semi-join nests in the embedding outer join/  nest (if any)./  See LLD section 2.5./  convert_subquery_to_semijoin(): Removed disabling of semi-join/  transformation when there are outer joins in the outer query./  See LLD chapter 1./  convert_subquery_to_semijoin(): Made changes to on_expr to be/  reflected in the permanent data as well (prep_on_expr)./  See LLD section 2.4./  make_outerjoin_info(): Updated to use the new nj_xxx fields./  See LLD section 2.5.//sql/sql_optimizer.h/  Added definition of function set_prefix_tables().//sql/sql_planner.cc/  check_interleaving_with_nj(): Updated to ignore join nests without/  nj_map information, and use new nj_xxx fields./  backout_nj_sj_state(): Updated to use new nj_xxx fields.//sql/sql_select.cc/  setup_semijoin_dups_elimination(): Code that assures that duplicate/  weedout extends across all tables of an outer join operation./  See LLD section 2.8./  setup_join_buffering(): Eliminated use of join cache when there/  is an outer join operation and first match strategy is used.//sql/sql_select.h/  Added fields prefix_tables_map and added_tables_map to class/  JOIN_TAB.//sql/table.cc/  When resolving a view, call fix_fields() on the view's WHERE/  condition only once. This fix_fields() call enables some needed/  initial transformations to the condition, and is prerequisite to/  separate out the view check option. However for subsequent/  executions, the view condition is part of complete query condition,/  and will be resolved as part of this. There was a crash because of/  this, because fix_fields() did non-permanent transformations on/  subquery transformed to semi-join on second execution.//sql/table.h/  Replaced fields used to analyze nested joins with new ones:/  nj_total, nj_counter, nj_map./  See LLD section 2.5.",https://github.com/facebook/mysql-5.6/commit/694dfc9351ac171c70aa303243d19cacf31d9fa2,9454675,facebook/mysql-5.6,False,False
0,17875005dcd92f239cb5bf939770e43d34b9269b,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/mariana-trench/commit/17875005dcd92f239cb5bf939770e43d34b9269b,317710554,facebook/mariana-trench,False,False
1,e3844c5dca777bdadbaa2e7118904239049f062c,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/SPARTA/commit/e3844c5dca777bdadbaa2e7118904239049f062c,132040907,facebook/SPARTA,False,False
2,e63392938400904ce979468349cabf2940abf690,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/redex/commit/e63392938400904ce979468349cabf2940abf690,54664770,facebook/redex,False,False
3,362a8172b648514a5d1f66cb03d9ce9745507d37,"Unhack generator option handling//Summary:/`t_generation_context` consists of generator output options and a source manager with the manager added there only to avoid changing numerous generator ctors. Now that the latter is not a problem add source manager as a parameter to the generator ctor where it should be, move output options to `process_options` and remove `t_generation_context`. Apply the template method pattern to `process_options` to guarantee that some options are always handled by the base generator and processing of the rest can be overridden by subclasses.//Remove `thrift/compiler/test/t_mstch_generator_test.cc` which doesn't add a lot of value.//And finally rename (the inverse of) `is_out_path_absolute` to `add_gen_dir` because this option has nothing to do with absolute paths. It controls whether to add `gen-<name>` directory to the output directory.//Reviewed By: avalonalex//Differential Revision: D38812260//fbshipit-source-id: 07070a3b9122fd53a4b59408fa8f1aa5c4ebc6b5",https://github.com/facebook/fbthrift/commit/362a8172b648514a5d1f66cb03d9ce9745507d37,11131631,facebook/fbthrift,False,False
4,e9dd65bffabdfbc7bd1883cca4c61a676cdf7499,"FPushCuf: Optimize the case where callable is an (obj, staticstr)//The pattern call_user_func(array($obj, ""staticString""), ...)/is pretty common, and it's basically the same as FPushObjMethodD/except it warns instead of fataling when the method is not defined./Catch this pattern and turn it into a similar IR sequence, and add a/template flag to methodCacheSlowPath to warn instead of fataling.//Reviewed By: @swtaarrs//Differential Revision: D1042143",https://github.com/facebook/hhvm/commit/e9dd65bffabdfbc7bd1883cca4c61a676cdf7499,455600,facebook/hhvm,False,False
5,47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,"New Props parsing infrastructure for perf improvements: visitor pattern vs random-map-access pattern (ViewProps, minus YogaLayoutableShadowNode)//Summary:/Perf numbers for this stack are given in terms of before-stack and after-stack, but the changes are split up for ease of review, and also to show that this migration CAN happen per-component and is 100% opt-in. Most existing C++ components do not /need/ to change at all.//# Problem Statement//During certain renders (select critical scenarios in specific products), UIManagerBinding::createNode time takes over 50% of JS thread CPU time. This could be higher or lower depending on the specific product and interaction, but overall createNode takes a lot of CPU time. The question is: can we improve this? What is the minimal overhead needed?//The vast, vast majority of time is taken up by prop parsing (specifically, converting JS values across the JSI into concrete values on the C++ props structs). Other methods like appendChild, etc, do not take up a significant amount of time; so we conclude that createNode is special, and the JSI itself, or calling into C++, is not the problem. Props parsing is the perf problem.//Can we improve it? (Spoiler: yes)//# How does props parsing work today?//Today, props parsing works as follows://1. The ConcreteComponentDescriptor will construct a RawPropsParser (one per component /type/, per application: so one for View, one for Image, one for Text... etc)/2. Once per component type per application, ConcreteComponentDescriptor will call ""prepare"" on the RawPropsParser with an empty, default-constructed ConcreteProps struct. This ConcreteProps struct will cause RawProps.at(field) for every single field./3. Based on the RawProps::at calls in part 2, RawPropsParser constructs a Map from props string names (width, height, position, etc) to a position within a ""value index"" array./4. The above is what happens before any actual props are parsed; and the RawPropsParser is now ready to parse actual Props./5. When props are actually being parsed from a JSI dictionary, we now have two phases:/  1. The RawPropsParser `preparse`s the RawProps, by iterating over the JSI map and filling in two additional data structures: a linear list of RawValues, and a mapping from the ValueIndex array (`keyIndexToValueIndex_`; see step 3) to a value's position in the values list (`value_` in RawPropsParser/RawProps);/  2. The ConcretePropT constructor is called, which is the same as in step 2/3, which calls `fieldValue = rawProps.at(""fieldName"")` repeatedly./  3. For each `at` call, the RawProps will look up a prop name in the Map constructed in step 3, and either return an empty value, or map the key name to the `keyIndexToValueIndex_` array, which maps to a value in `values_`, which is then returned and further parsed.//So, a few things that become clear with the current architecture://1. Complexity is a property of the number of /possible/ props that /can/ be parsed, not what is actually used in product code. This violates the ""only pay for what you use"" principal. If you have `<View opacity={0.5} />`, the ViewProps constructor will request ~170 properties, not 1!/2. There's a lot of pre-parsing which isn't free/3. The levels of indirection aren't free, and make cache misses more likely and pipelining is more challenging/4. The levels of indirection also require more memory - minor, but not free//# How can we improve it?//The goal is to improve props parsing with minimal or zero impact on backwards-compability. We should be able to migrate over components when it's clear there's a performance issue, without requiring everything gets migrated over at once. This both (1) helps us prove out the new architecture, (2) derisks the project, (3) gives us time, internally and externally, to perfect the APIs and gradually migrate everything over before deleting the old infrastructure code entirely.//Thus, the goal is to do something that introduces a zero-cost abstraction. This isn't entirely possible in practice, and in fact this method slightly regresses components that do not use the new architecture /at all/, while dramatically improving migrated components and causing the impact of the /old/ architecture to be minimal.//# Solution//1. We still keep the existing system in place entirely./2. After Props are constructed (see ConcreteComponentDescriptor changes) we iterate over all the /values/ set from JS, and call PropsT::setProp. Incidentally, this allows us to easily reuse the same prop for multiple values for ""free"", which was expensive in the old system./3. It's worth noting that this makes a Props struct ""less immutable"" than it was before, and essentially now we have a ""builder pattern"" for Props. (If we really wanted to, we could still require a single constructor for Props, and then actually use an intermediate PropsBuilder to accumulate values - but I don't think this overhead would be worth for the conceptual ""immutability"" win, and instead a ""Construct/Set/Seal"" model works fine, and we still have all the same guarantees of immutability after the parsing phase)//# Implementation Details/# How to properly construct a single Prop value//Minor detail: parsing a single prop is a 3-step process. We imagine two scenarios: (1) Creating a new ShadowNode/Props A from nothing/void, so the previous Props value is just the default constructor. (2) Cloning a ShadowNode A->B and therefore Props A must be copied to Props B before parsing.//We will denote this as a clone from A->B, where A may or may not be a previous node or a default-constructed Props node; and imagine in particular that we're setting the ""opacity"" value for PropsB.//We must first (1) copy a value over from the previous version of the Props struct, so B.opacity = A.opacity; (2) Determine if opacity has been set from JS. If so, and there is a value, B.opacity = parse(JSValue). (3) If JS has passed in a value for the prop, BUT the value is `null`, it means that JS is resetting or deleting the prop, so we must set it BACK to the default. In this case we set PropsB.opacity = DefaultConstructedProps.opacity.//We must take care in general to ensure that the correct behavior is achieved here, which should help to explain some of the code below.//## String comparisons vs hash comparisons//In the previous system, a RawPropsKey is three `const char*` strings, concatenated together repeatedly /at runtime/. In practice, the ONLY reason we have the prefix, name, suffix Key structure is for the templated prop parsing in ViewProps and YogaStyableProps - that's it. It's not used anywhere else. Further, the key {""margin"", ""Left"", ""Width""} is identical to the key {""marginLeftWidth"", null, null} and we don't do anything fancy with matching prefixes before comparing the whole string, or similar. Before comparison, keys are concatenated into a single string and then we use `strcmp`. The performance of this isn't terrible, but it's nonzero overhead.//I think we can do better and it's sufficient to compare hashed string values; even better, we can construct most of these /at compile time/ using constexpr, and using `switch` statements guarantee no hash collisions within a single Props struct (it's possible there's a collision between Props.cpp and ViewProps.cpp, for example, since they're different switch statements). We may eventually want to be more robust against has collisions; I personally don't find the risk to be too great, hash collisions with these keys are exceedingly unlikely (or maybe I just like to live dangerously). Thus, at runtime, each setProp requires computing a single hash for the value coming from JS, and then int comparisons with a bunch of pre-compiled values.//If we want to be really paranoid, we could be robust to hash collisions by doing `switch COMPILED_HASH(""opacity""): if (strcmp(strFromJs, ""opacity"") == 0)`. I'm happy to do this if there's enough concern.//## Macros//Yuck! I'm using lots of C preprocessor macros. In general I found this way, way easier in reducing code and (essentially) doing codegen for me vs templated code for the switch cases and hashing prop names at compile-time. Maybe there's a better way.//Changelog: [Added][Fabric] New API for efficient props construction//Reviewed By: javache//Differential Revision: D37050215//fbshipit-source-id: d2dcd351a93b9715cfeb5197eb0d6f9194ec6eb9",https://github.com/facebook/react-native/commit/47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,29028775,facebook/react-native,False,False
0,011a3922c7134b204d4f415b0a6cab0ad0102a10,"Refactor template literal tests//Summary:/Refactor template literal tests before I make changes, removing function in array pattern which is no longer required now that I added support for `declare const`, enabling `all=true`, etc.//Changelog: [internal]//Reviewed By: SamChou19815//Differential Revision: D42731498//fbshipit-source-id: fbe07fd52436d8865a5915b7b0b1e33c09de75ba",https://github.com/facebook/flow/commit/011a3922c7134b204d4f415b0a6cab0ad0102a10,25880891,facebook/flow,False,False
1,cc325bac6738435b253f646344df404247fc09a6,"thrift struct node template//Summary:/simplifying the migration and establishing a pattern to follow in switch state nodes//- define USE_THRIFT_COW(NODE)/- define base as ThriftStructNode<NODE, THRIFT_TYPE>/- provide explicit template instantiation in corresponding cpp file.//for maps similar pattern exist//- define Traits/- define base as ThriftMapNode<MAP, Traits>/- provide explicit template instantiation in corresponding cpp file.//Following this address all compiler errors and avoid copy.//Reviewed By: peygar//Differential Revision:/D40918338//LaMa Project: L1125642//fbshipit-source-id: 6a3236a25ddbfc9d830db48650baad632832e210",https://github.com/facebook/fboss/commit/cc325bac6738435b253f646344df404247fc09a6,31927407,facebook/fboss,False,False
2,e3844c5dca777bdadbaa2e7118904239049f062c,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/SPARTA/commit/e3844c5dca777bdadbaa2e7118904239049f062c,132040907,facebook/SPARTA,False,False
3,17875005dcd92f239cb5bf939770e43d34b9269b,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/mariana-trench/commit/17875005dcd92f239cb5bf939770e43d34b9269b,317710554,facebook/mariana-trench,False,False
4,e63392938400904ce979468349cabf2940abf690,"Make the base abstract domain class non polymorphic//Summary:/# Context/The base class for all abstract domains is `AbstractDomain`, which uses CRTP, in addition with pure virtual methods to enforce children to implement its interface.//# Problem/Using virtual methods has the downside of making all children classes polymorphic, which means that all instances have to store a virtual table pointer, in addition to their members./This can be costly and is actually never necessary, since `AbstractDomain` also uses CRTP (Curiously Recurring Template Pattern). We would never upcast a children class (say `ConstantAbstractDomain`) into the base class (`AbstractDomain<ConstantAbstractDomain>`) since it is templated by the child class. All virtual calls can actually be resolved statically, since all implementations are marked with `final`.//Also note that each time we wrap an abstract domain in another one, this adds a virtual table pointer. A domain product of N domains will hence have N+1 virtual table pointers (one for each element and one for the top level class).//# Solution/The proposed solution here is to remove all virtual methods from the `AbstractDomain` class, and rely on static asserts to check that children implement the interface properly.//The downside is readability, since static asserts are pretty verbose and require the use of C++ traits./Compiler errors are also worse, since one would now get a static error with obscure traits when forgetting or mistyping a method from the interface, instead of having an error about a missing virtual method./Since sparta aims at speed and performance, I believe this is a necessary cost.//In the future, we could probably use C++ concepts (in C++20) for better readability.//Reviewed By: arnaudvenet//Differential Revision: D45236059//fbshipit-source-id: 78b7f73252465f0f4c4430815697016d3a7d32de",https://github.com/facebook/redex/commit/e63392938400904ce979468349cabf2940abf690,54664770,facebook/redex,False,False
5,19715cf4fb11640d07b973a3eb0e918ee27691ac,"Add .metro-health-check to .gitignore//Summary:/Changelog:/[General][Changed] - Add Metro health check files to the template's `.gitignore`//We're adding an opt-in watcher health check to Metro, which can occasionally leave files named `.metro-health-check*` in the project. To ensure this doesn't clutter people's repos accidentally if enabled, we preemptively add this as a pattern to `.gitignore` in the new project template. We also add it to the React Native repo's `.gitignore` file just in case.//Reviewed By: arushikesarwani94//Differential Revision: D40352040//fbshipit-source-id: 261803b684d79292c014205084e61d5e4f7aeb3d",https://github.com/facebook/react-native/commit/19715cf4fb11640d07b973a3eb0e918ee27691ac,29028775,facebook/react-native,False,False
6,154ea30aea0f5097cd1992c310f78fa26c6ae7c7,simplify field_ref mustache template//Summary:/This diff added two mustache node//1. use_field_ref?/2. field_ref_type//This simplifies repeating patterns in mustache template//Reviewed By: iahs//Differential Revision: D33901209//fbshipit-source-id: 0e07dec1c9f367af837abf618a564c60603788da,https://github.com/facebook/fbthrift/commit/154ea30aea0f5097cd1992c310f78fa26c6ae7c7,11131631,facebook/fbthrift,False,False
7,78e1481b9f061c963d9e1816c69b7b3c86b9c2ed,Fix regex to support Systemd template units//Summary://Systemd supports [template units](https://www.freedesktop.org/software/systemd/man/systemd.unit.html) whose instances are appended as `@` after the unit name. The current job reaper regex does not support this pattern and ends up cleaning active units only to be recreated again later. This patch adds the `@` as one of the supported unit file patterns.//Reviewed By: joshuamiller01//Differential Revision: D33958894//fbshipit-source-id: 89e879baaf652fda5759ad49ccf18623be02de46,https://github.com/facebook/chef-cookbooks/commit/78e1481b9f061c963d9e1816c69b7b3c86b9c2ed,48260686,facebook/chef-cookbooks,False,False
8,24955e404ad437aaae43c1edd423c31a7aa3671b,jfconfig: add proprietary to northdome//Summary:/The northdome platform is affected by anything in the/`proprietary/meta-amd/yaap` directory.  Add capability to the jf/template to specify per-machine patterns and add yaap to northdome.//Test Plan: Visually inspect the jfconfig for changes.//Reviewed By: garnermic//fbshipit-source-id: e0727360bb296fa1c100084fb2c5e272fd12c4b2,https://github.com/facebook/openbmc/commit/24955e404ad437aaae43c1edd423c31a7aa3671b,31917712,facebook/openbmc,False,False
9,411c2fb240dd8ef2f5d7a52c8e0d58d57742b2cd,"Add file picker to text field//Summary:/See Previous diff for context about image uploading.//If a user doesn't know about drag&drop and pasting images, it's hard to learn about. By having an explicit *click to upload file* UX, it becomes discoverable. Also some users may struggle with drag&drop but can handle a click-to-upload.//(TODO: we should handle keyboard-only opening of the file picker for accessibility)//In this diff I add the notion of the EditorToolbar for a CommitInfoField. This is a button bar floating at the bottom of the text area that can include various buttons/editor status/messages. This is a common UI pattern for adding features to a text area.//Here we add the file upload button and later add the status of ongoing uploads and let you cancel ongoing uploads.//In the future we may add additional buttons to this toolbar, like filling from a template or whatever//The file picker itself is an icon button using a paperclip icon. That's the typical icon used for attaching files (email, facebook composer, etc). Surprisingly vscode codicons doesn't have a paperclip icon, so I had to make one myself. I styled it with width that roughly matches codicons. I might make a PR to codicons to add this icon.//The file picker is handled as an `<input type=""file"" />`. To customize rendering, we need to use a `<label>` & hide the input, so clicking on the label opens the input even though it's hidden.//Reviewed By: quark-zju//Differential Revision: D43332597//fbshipit-source-id: bfce7e9a866c2993e6280d0054c7751c8f366179",https://github.com/facebook/sapling/commit/411c2fb240dd8ef2f5d7a52c8e0d58d57742b2cd,58146669,facebook/sapling,False,False
10,ef091a7390e9f9887187d2337bd295bc505e8b06,"montblanc: use yocto lf-master (#1477)//Summary:/- add montblanc in openbmc-init-build-env and use lf-master branch/- modify config file to able build the image//## TestPlan:/- able to build the image/- able to run image on qemu/```/ssinprem@cthgd050:~/OPENBMC/facebookexternal$ . openbmc-init-build-env montblanc build_mb/Init build environment for platform 'meta-montblanc' with distro lf-master.../You had no conf/local.conf file. This configuration file has therefore been/created for you from /home/ssinprem/OPENBMC/facebookexternal_wedge400/meta-facebook/meta-montblanc/conf/templates/default/local.conf.sample/You may wish to edit it to, for example, select a different MACHINE (target/hardware).//You had no conf/bblayers.conf file. This configuration file has therefore been/created for you from /home/ssinprem/OPENBMC/facebookexternal_wedge400/meta-facebook/meta-montblanc/conf/templates/default/bblayers.conf.sample/To add additional metadata layers into your configuration please add entries/to conf/bblayers.conf.//The Yocto Project has extensive documentation about OE including a reference/manual which can be found at:/    https://docs.yoctoproject.org//For more information about OpenEmbedded see the website:/    https://www.openembedded.org///Common targets are:/    montblanc-image/ssinprem@cthgd050:~/OPENBMC/facebookexternal/build_mb$ bitbake montblanc-image/NOTE: Your conf/bblayers.conf has been automatically updated./WARNING: You have included the meta-security layer, but 'security' has not been enabled in your DISTRO_FEATURES. Some bbappend files and preferred version setting may not take effect. See the meta-security README for details on enabling security support./WARNING: You are using a local hash equivalence server but have configured an sstate mirror. This will likely mean no sstate will match from the mirror. You may wish to disable the hash equivalence use (BB_HASHSERVE), or use a hash equivalence server alongside the sstate mirror./Loading cache: 100% |                                                                                                                                                                                                      | ETA:  --:--:--/Loaded 0 entries from dependency cache./Parsing recipes: 100% |#####################################################################################################################################################################################################| Time: 0:00:23/Parsing of 2925 .bb files complete (0 cached, 2925 parsed). 4535 targets, 443 skipped, 0 masked, 0 errors./WARNING: No recipes in default available for:/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-bsp/u-boot/u-boot-aspeed-sdk%.bbappend/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-connectivity/dhcp/dhcp_%.bbappend/  /home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../common/recipes-utils/flashrom/flashrom_1.2.bbappend/WARNING: No bb files in default matched BBFILE_PATTERN_backports '^/home/ssinprem/OPENBMC/facebookexternal_wedge400/yocto/lf-master/../../meta-facebook/meta-backports/mickledore/(recipes|facebook)'/NOTE: Resolving any missing task queue dependencies/NOTE: Multiple providers are available for runtime u-boot-fw-utils (u-boot-fw-utils, libubootenv)/Consider defining a PREFERRED_RPROVIDER entry to match u-boot-fw-utils//Build Configuration:/BB_VERSION           = ""2.2.0""/BUILD_SYS            = ""x86_64-linux""/NATIVELSBSTRING      = ""ubuntu-20.04""/TARGET_SYS           = ""arm-fb-linux-gnueabi""/MACHINE              = ""montblanc""/DISTRO               = ""poky""/DISTRO_VERSION       = ""montblanc-de35dff4aa0-dirty""/TUNE_FEATURES        = ""arm armv7a vfp thumb callconvention-hard""/TARGET_FPU           = ""hard""/meta/meta-poky/meta-oe/meta-networking/meta-python/meta-perl            = ""HEAD:917fab29b9ead43b10b0ef6dc884c39817f17965""/..                   = ""HEAD:de35dff4aa05fa45ea2a0e40c902ecaf62f6fa93""/meta-security/meta-tpm             = ""HEAD:917fab29b9ead43b10b0ef6dc884c39817f17965""/meta-aspeed/meta-facebook/meta-montblanc/meta-fboss-lite/meta-python3/meta-backports       = ""HEAD:de35dff4aa05fa45ea2a0e40c902ecaf62f6fa93""//NOTE: Fetching uninative binary shim http://downloads.yoctoproject.org/releases/uninative/3.9/x86_64-nativesdk-libc-3.9.tar.xz;sha256sum=3dd82c3fbdb59e87bf091c3eef555a05fae528eeda3083828f76cd4deaceca8b (will check PREMIRRORS first)/Initialising tasks: 100% |##################################################################################################################################################################################################| Time: 0:00:09/Sstate summary: Wanted 1911 Local 1908 Mirrors 0 Missed 3 Current 0 (99% match, 0% complete)/NOTE: Executing Tasks/NOTE: Tasks Summary: Attempted 4614 tasks of which 4603 didn't need to be rerun and all succeeded.// There were 4 WARNING messages./ssinprem@cthgd050:~/OPENBMC/facebookexternal_wedge400/build_mb$/```//```/ssinprem@cthgd050:~/OPENBMC/facebookexternal/build_w400$ ./qemu-system-arm -machine montblanc-bmc -drive file=~/flash-montblanc,format=raw,if=mtd -nographic -netdev tap,id=netdev0,script=no,ifname=tap0 -net nic,netdev=netdev0,model=ftgmac100/qemu-system-arm: warning: nic ftgmac100.0 has no peer/qemu-system-arm: warning: nic ftgmac100.1 has no peer/qemu-system-arm: warning: nic ftgmac100.2 has no peer//U-Boot 2019.04 montblanc-02385650d3e (Feb 13 2023 - 10:05:18 +0000)//SOC: AST2600-A3/eSPI Mode: SIO:Enable : SuperIO-2e/Eth: MAC0: RMII/NCSI, MAC1: RMII/NCSI, MAC2: RMII/NCSI, MAC3: RMII/NCSI/Model: Aspeed BMC/DRAM:  1.8 GiB (capacity:2048 MiB, VGA:64 MiB, ECC:on, ECC size:1806 MiB)/MMC:   emmc_slot0@100: 0/Loading Environment from SPI Flash... SF: Detected mx66l1g45g with page size 256 Bytes, erase size 64 KiB, total 128 MiB/*** Warning - bad CRC, using default environment//....//[2m  OK  0m] Finished Remove the poweroff command./[  OK  ] Finished Set up Busybox crond./[  OK  0m] Reached target Preparation for Network./         Starting Network Configuration...//OpenBMC Release montblanc-02385650d3e//bmc login: [  144.493928] ftgmac100 1e690000.ftgmac eth0: Link is Up - 1Gbps/Full - flow control off/[  144.513295] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready/[  144.533264] IPv6: ADDRCONF(NETDEV_CHANGE): eth0.4088: link becomes ready//bmc login: root/Password:/root@bmc-obb:~#/```//X-link: https://github.com/facebookexternal/openbmc.celestica/pull/1477//Reviewed By: rootkeeper//Differential Revision: D44141171//Pulled By: binhuang00//fbshipit-source-id: bfaa9906aa16c17b5996d31487ae4e90eb833fe8",https://github.com/facebook/openbmc/commit/ef091a7390e9f9887187d2337bd295bc505e8b06,31917712,facebook/openbmc,False,False
11,362a8172b648514a5d1f66cb03d9ce9745507d37,"Unhack generator option handling//Summary:/`t_generation_context` consists of generator output options and a source manager with the manager added there only to avoid changing numerous generator ctors. Now that the latter is not a problem add source manager as a parameter to the generator ctor where it should be, move output options to `process_options` and remove `t_generation_context`. Apply the template method pattern to `process_options` to guarantee that some options are always handled by the base generator and processing of the rest can be overridden by subclasses.//Remove `thrift/compiler/test/t_mstch_generator_test.cc` which doesn't add a lot of value.//And finally rename (the inverse of) `is_out_path_absolute` to `add_gen_dir` because this option has nothing to do with absolute paths. It controls whether to add `gen-<name>` directory to the output directory.//Reviewed By: avalonalex//Differential Revision: D38812260//fbshipit-source-id: 07070a3b9122fd53a4b59408fa8f1aa5c4ebc6b5",https://github.com/facebook/fbthrift/commit/362a8172b648514a5d1f66cb03d9ce9745507d37,11131631,facebook/fbthrift,False,False
12,ce646a1673a1ea1bc2386fb44e6b252142345bd1,always_false//Summary:/This addresses a common shortcoming of how `static_assert` interacts with templated code. This pattern is used in Thrift (see `ServiceMetadata` for example). Currently that code uses `!sizeof(T)` which is makes use of the guarantee that `sizeof` is *almost* never 0 but that does not work with incomplete types (and the intent is less clear) .//[Here's a good blog post that explains in more detail](https://artificial-mind.net/blog/2020/10/03/always-false).//Reviewed By: iahs//Differential Revision: D34976834//fbshipit-source-id: 4ae97693d20b87879c8e503fc1c472cd6c523fc6,https://github.com/facebook/folly/commit/ce646a1673a1ea1bc2386fb44e6b252142345bd1,4524181,facebook/folly,False,False
13,8111513e95ee97bef7f155dbbeef29c40b509fba,"Bump eslint from 8.28.0 to 8.31.0 in /js/js-flipper (#4419)//Summary:/Bumps [eslint](https://github.com/eslint/eslint) from 8.28.0 to 8.31.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.31.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/52c7c73c052e1ec2528c6b4af78181bc30cf8cdd""><code>52c7c73</code></a> feat: check assignment patterns in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16693"">#16693</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b401cde47d44746ff91b8feced3fb3a4e32c0e12""><code>b401cde</code></a> feat: add options to check destructuring in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16006"">#16006</a>) (Morten Kaltoft)</li>/<li><a href=""https://github.com/eslint/eslint/commit/30d0daf55e85a412995f6d69f47cab3fb591f2c3""><code>30d0daf</code></a> feat: group properties with values in parentheses in <code>key-spacing</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16677"">#16677</a>) (Francesco Trotta)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e5ecfefa1c952195a3a8371f5953cc655d844079""><code>e5ecfef</code></a> docs: Add function call example for no-undefined (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16712"">#16712</a>) (Elliot Huffman)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a3262f0a6305d2a721fac137a60c62c019b26aa4""><code>a3262f0</code></a> docs: Add mastodon link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16638"">#16638</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a14ccf91af1122e419710f58ef494980fc4894b3""><code>a14ccf9</code></a> docs: clarify files property (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16709"">#16709</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3b29eb14e00182614c986d8498b483a9917976e7""><code>3b29eb1</code></a> docs: fix npm link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16710"">#16710</a>) (Abdullah Osama)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a638673ee6e94344c46d12dfc988adeb3783f817""><code>a638673</code></a> docs: fix search bar focus on <code>Esc</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16700"">#16700</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f62b722251858a5dfb157591910edbaaeb4a966f""><code>f62b722</code></a> docs: country flag missing in windows (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16698"">#16698</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d27ec6019847afabeebf592dddc014e9220057c""><code>4d27ec6</code></a> docs: display zh-hans in the docs language switcher (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16686"">#16686</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8bda20e8276c6ba17d31842fcdd63ba65476fbbd""><code>8bda20e</code></a> docs: remove manually maintained anchors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16685"">#16685</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b68440ff2b8322fc00373792701169205c94ed94""><code>b68440f</code></a> docs: User Guide Getting Started expansion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16596"">#16596</a>) (Ben Perlmutter)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4cd87cb3c52412277577ba00c4fbb1aec36acc8c""><code>4cd87cb</code></a> ci: bump actions/stale from 6 to 7 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16713"">#16713</a>) (dependabot[bot])</li>/<li><a href=""https://github.com/eslint/eslint/commit/fd20c75b1059c54d598c0abaf63e7d7a80f04f32""><code>fd20c75</code></a> chore: sort package.json scripts in alphabetical order (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16705"">#16705</a>) (Darius Dzien)</li>/<li><a href=""https://github.com/eslint/eslint/commit/10a5c7839370219c79f44d4206cbd7c28a72bad5""><code>10a5c78</code></a> chore: update ignore patterns in <code>eslint.config.js</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16678"">#16678</a>) (Milos Djermanovic)</li>/</ul>/<h2>v8.30.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50""><code>075ef2c</code></a> feat: add suggestion for no-return-await (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16637"">#16637</a>) (Daniel Bartholomae)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b""><code>7190d98</code></a> feat: update globals (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16654"">#16654</a>) (Sébastien Règne)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c""><code>1a327aa</code></a> fix: Ensure flat config unignores work consistently like eslintrc (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16579"">#16579</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975""><code>9b8bb72</code></a> fix: autofix recursive functions in no-var (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16611"">#16611</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405""><code>6a8cd94</code></a> docs: Clarify Discord info in issue template config (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16663"">#16663</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e""><code>ad44344</code></a> docs: CLI documentation standardization (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16563"">#16563</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022""><code>293573e</code></a> docs: fix broken line numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16606"">#16606</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a""><code>fa2c64b</code></a> docs: use relative links for internal links (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16631"">#16631</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b""><code>75276c9</code></a> docs: reorder options in no-unused-vars (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16625"">#16625</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42""><code>7276fe5</code></a> docs: Fix anchor in URL (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16628"">#16628</a>) (Karl Horky)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f""><code>6bef135</code></a> docs: don't apply layouts to html formatter example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16591"">#16591</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59""><code>dfc7ec1</code></a> docs: Formatters page updates (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16566"">#16566</a>) (Ben Perlmutter)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.31.0 - December 31, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/52c7c73c052e1ec2528c6b4af78181bc30cf8cdd""><code>52c7c73</code></a> feat: check assignment patterns in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16693"">#16693</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e5ecfefa1c952195a3a8371f5953cc655d844079""><code>e5ecfef</code></a> docs: Add function call example for no-undefined (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16712"">#16712</a>) (Elliot Huffman)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a3262f0a6305d2a721fac137a60c62c019b26aa4""><code>a3262f0</code></a> docs: Add mastodon link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16638"">#16638</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4cd87cb3c52412277577ba00c4fbb1aec36acc8c""><code>4cd87cb</code></a> ci: bump actions/stale from 6 to 7 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16713"">#16713</a>) (dependabot[bot])</li>/<li><a href=""https://github.com/eslint/eslint/commit/a14ccf91af1122e419710f58ef494980fc4894b3""><code>a14ccf9</code></a> docs: clarify files property (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16709"">#16709</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3b29eb14e00182614c986d8498b483a9917976e7""><code>3b29eb1</code></a> docs: fix npm link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16710"">#16710</a>) (Abdullah Osama)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fd20c75b1059c54d598c0abaf63e7d7a80f04f32""><code>fd20c75</code></a> chore: sort package.json scripts in alphabetical order (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16705"">#16705</a>) (Darius Dzien)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a638673ee6e94344c46d12dfc988adeb3783f817""><code>a638673</code></a> docs: fix search bar focus on <code>Esc</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16700"">#16700</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f62b722251858a5dfb157591910edbaaeb4a966f""><code>f62b722</code></a> docs: country flag missing in windows (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16698"">#16698</a>) (Shanmughapriyan S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d27ec6019847afabeebf592dddc014e9220057c""><code>4d27ec6</code></a> docs: display zh-hans in the docs language switcher (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16686"">#16686</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8bda20e8276c6ba17d31842fcdd63ba65476fbbd""><code>8bda20e</code></a> docs: remove manually maintained anchors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16685"">#16685</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b401cde47d44746ff91b8feced3fb3a4e32c0e12""><code>b401cde</code></a> feat: add options to check destructuring in no-underscore-dangle (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16006"">#16006</a>) (Morten Kaltoft)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b68440ff2b8322fc00373792701169205c94ed94""><code>b68440f</code></a> docs: User Guide Getting Started expansion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16596"">#16596</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/30d0daf55e85a412995f6d69f47cab3fb591f2c3""><code>30d0daf</code></a> feat: group properties with values in parentheses in <code>key-spacing</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16677"">#16677</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/10a5c7839370219c79f44d4206cbd7c28a72bad5""><code>10a5c78</code></a> chore: update ignore patterns in <code>eslint.config.js</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16678"">#16678</a>) (Milos Djermanovic)</li>/</ul>/<p>v8.30.0 - December 16, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/f2c47372420f050ad8f2300271345de1c1232635""><code>f2c4737</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.0 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16675"">#16675</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c""><code>1a327aa</code></a> fix: Ensure flat config unignores work consistently like eslintrc (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16579"">#16579</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50""><code>075ef2c</code></a> feat: add suggestion for no-return-await (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16637"">#16637</a>) (Daniel Bartholomae)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ba74253e8bd63e9e163bbee0540031be77e39253""><code>ba74253</code></a> chore: standardize npm script names per <a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/14827"">#14827</a> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16315"">#16315</a>) (Patrick McElhaney)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405""><code>6a8cd94</code></a> docs: Clarify Discord info in issue template config (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16663"">#16663</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/0d9af4c5674809be993439c766dcd9d7f65fcec9""><code>0d9af4c</code></a> ci: fix npm v9 problem with <code>file:</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16664"">#16664</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b""><code>7190d98</code></a> feat: update globals (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16654"">#16654</a>) (Sébastien Règne)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e""><code>ad44344</code></a> docs: CLI documentation standardization (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16563"">#16563</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/90c9219181e0aadcae7224602d2988186d457113""><code>90c9219</code></a> refactor: migrate off deprecated function-style rules in all tests (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16618"">#16618</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975""><code>9b8bb72</code></a> fix: autofix recursive functions in no-var (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16611"">#16611</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022""><code>293573e</code></a> docs: fix broken line numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16606"">#16606</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a""><code>fa2c64b</code></a> docs: use relative links for internal links (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16631"">#16631</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b""><code>75276c9</code></a> docs: reorder options in no-unused-vars (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16625"">#16625</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42""><code>7276fe5</code></a> docs: Fix anchor in URL (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16628"">#16628</a>) (Karl Horky)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f""><code>6bef135</code></a> docs: don't apply layouts to html formatter example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16591"">#16591</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59""><code>dfc7ec1</code></a> docs: Formatters page updates (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16566"">#16566</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8ba124cfd8aaf01d14ccbcb1654798624948fb0a""><code>8ba124c</code></a> docs: update the <code>prefer-const</code> example (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16607"">#16607</a>) (Pavel)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e6cb05aa35bafb9e88f161ad1fa6b01942a7c13c""><code>e6cb05a</code></a> docs: fix css leaking (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16603"">#16603</a>) (Sam Chen)</li>/</ul>/<p>v8.29.0 - December 2, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/0311d81834d675b8ae7cc92a460b37115edc4018""><code>0311d81</code></a> docs: Configuring Plugins page intro, page tweaks, and rename (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16534"">#16534</a>) (Ben Perlmutter)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/d9a39c7685496999b95b11486881d411089ab34e""><code>d9a39c7</code></a> 8.31.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/5d182ce7080adfd224b76c44e03ba9c2a2ac23bc""><code>5d182ce</code></a> Build: changelog update for 8.31.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/65d4e24c36367cd63f0eba7371820e0e81dae7aa""><code>65d4e24</code></a> chore: Upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/1""><code>@​1</code></a>.4.1 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16729"">#16729</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/35439f1572e1a8888f7feb6c5e51a15b5582495d""><code>35439f1</code></a> fix: correct syntax error in <code>prefer-arrow-callback</code> autofix (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16722"">#16722</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/87b247058ed520061fe1a146b7f0e7072a94990d""><code>87b2470</code></a> fix: new instance of FlatESLint should load latest config file version (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16608"">#16608</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8d93081a717f6e8b8cb60c3075cc1d7e4e655e6b""><code>8d93081</code></a> chore: fix CI failure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16721"">#16721</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4339dc462d78888fe2e10acdfacd6f57245ce6ae""><code>4339dc4</code></a> docs: Update README</li>/<li><a href=""https://github.com/eslint/eslint/commit/8f17247a93240ff8a08980d8e06352e4ff4e8fe3""><code>8f17247</code></a> chore: Set up automatic updating of README (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16717"">#16717</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4e4049c5fa355b2091afc8948690fcd7b1c1e6df""><code>4e4049c</code></a> docs: optimize code block structure (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16669"">#16669</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/54a7ade5d8e6f59554afeb9202ba6143f8afdf57""><code>54a7ade</code></a> docs: do not escape code blocks of formatters examples (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16719"">#16719</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.28.0...v8.31.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.28.0&new-version=8.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4419//Reviewed By: antonk52//Differential Revision: D42370532//Pulled By: passy//fbshipit-source-id: 4ece5752034b32bce0d217ebc86141c045d1dbfd",https://github.com/facebook/flipper/commit/8111513e95ee97bef7f155dbbeef29c40b509fba,129283183,facebook/flipper,False,False
14,b4f7355ba298c3c1d3ac32fbb121f48af27c83e1,Switch from -defs.h pattern//Summary: [Folly] Switch from `-defs.h` pattern to `-inl.h` pattern in `folly/stats/` since `extern template` doing shallow instantiation rather than deep instantiation makes this pattern difficult.//Reviewed By: chadaustin//Differential Revision: D16761319//fbshipit-source-id: 1760bf53b09791bebf996064c0d1fcc3babf43d2,https://github.com/facebook/openr/commit/b4f7355ba298c3c1d3ac32fbb121f48af27c83e1,108306129,facebook/openr,False,False
15,c1d178828202df9adb5eab18d6632aed0cc66248,"Bump eslint from 8.25.0 to 8.28.0 in /js/js-flipper (#4325)//Summary:/Bumps [eslint](https://github.com/eslint/eslint) from 8.25.0 to 8.28.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.28.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/63bce44e7b6326e1e94fc7f6283df8de7bbac273""><code>63bce44</code></a> feat: add <code>ignoreClassFieldInitialValues</code> option to no-magic-numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16539"">#16539</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8385ecdbbe342211e20aebe76fa7affe8ec04c33""><code>8385ecd</code></a> feat: multiline properties in rule <code>key-spacing</code> with option <code>align</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16532"">#16532</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a4e89dbe85589dab982885872dc206e090c27b3c""><code>a4e89db</code></a> feat: <code>no-obj-calls</code> support <code>Intl</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16543"">#16543</a>) (Sosuke Suzuki)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/c50ae4f840d1ee9dc7b80a46c887398c0ec0a67c""><code>c50ae4f</code></a> fix: Ensure that dot files are found with globs. (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16550"">#16550</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9432b67f76ddd7b8a73d37e8a041a9ff25822f0c""><code>9432b67</code></a> fix: throw error for first unmatched pattern (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16533"">#16533</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e76c3827727b48c16af8467c02c31160e5595d83""><code>e76c382</code></a> fix: allow <code>* 1</code> when followed by <code>/</code> in no-implicit-coercion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16522"">#16522</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/34c05a779ada3142995392ae12978461900088df""><code>34c05a7</code></a> docs: Language Options page intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16511"">#16511</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3e663873c97773ab1ecdff54aaa122075d5bb389""><code>3e66387</code></a> docs: add intro and edit ignoring files page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16510"">#16510</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/436f712843360f98b2bd63256bf0c4f77013b54c""><code>436f712</code></a> docs: fix Header UI inconsistency (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16464"">#16464</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f74381696703d8eed0e175d42f96904a3d1cb4cb""><code>f743816</code></a> docs: switch to wrench emoji for auto-fixable rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16545"">#16545</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bc0547eb149a1e04211826662d2d798fb331983d""><code>bc0547e</code></a> docs: improve styles for versions and languages page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16553"">#16553</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6070f58d802d77c6c781c6bc1f554eef8b3d8f68""><code>6070f58</code></a> docs: clarify esquery issue workaround (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16556"">#16556</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b48e4f89c59bd1c5408e3db492a0e95a402820bd""><code>b48e4f8</code></a> docs: Command Line Interface intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16535"">#16535</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b92b30f93db64314827305b552cbb832c63fa949""><code>b92b30f</code></a> docs: Add Rules page intro and content tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16523"">#16523</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1769b423392512db4adf1eff75896c1ac0c3606b""><code>1769b42</code></a> docs: Integrations page introduction (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16548"">#16548</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a8d0a57cbc29a917258df41d3254ecd29bcf61ab""><code>a8d0a57</code></a> docs: make table of contents sticky on desktop (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16506"">#16506</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a01315a7d8f3a70468b7a644fde01d6983778c6b""><code>a01315a</code></a> docs: fix route of japanese translation site (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16542"">#16542</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/05156285396eba9ce3d3a0990a8c89d5bc229636""><code>0515628</code></a> docs: use emoji instead of svg for deprecated rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16536"">#16536</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/68f12882fbaeda8ffb26425d42d261346ff5af51""><code>68f1288</code></a> docs: set default layouts (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16484"">#16484</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/776827a1748da88a25e7903bd794f5439de922b5""><code>776827a</code></a> docs: init config about specifying shared configs (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16483"">#16483</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/5c39425fc55ecc0b97bbd07ac22654c0eb4f789c""><code>5c39425</code></a> docs: fix broken link to plugins (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16520"">#16520</a>) (Ádám T. Nagy)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c97c7897686ac4dc2828537d6a017f3c99f7d905""><code>c97c789</code></a> docs: Add missing no-new-native-nonconstructor docs code fence (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16503"">#16503</a>) (Brandon Mills)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/e94a4a95ee301b0344d3292c37a0b29d8e18ab30""><code>e94a4a9</code></a> chore: Add tests to verify <a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16038"">#16038</a> is fixed (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16538"">#16538</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e13f194f89f591730aa955f7b62192c7e8296069""><code>e13f194</code></a> chore: stricter validation of <code>meta.docs.description</code> in core rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16529"">#16529</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/72dbfbc0c45d2b9d19b21c6a5a6b4ca71403ffbf""><code>72dbfbc</code></a> chore: use <code>pkg</code> parameter in <code>getNpmPackageVersion</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16525"">#16525</a>) (webxmsj)</li>/</ul>/<h2>v8.27.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/f14587c42bb0fe6ec89529aede045a488083d6ee""><code>f14587c</code></a> feat: new <code>no-new-native-nonconstructor</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16368"">#16368</a>) (Sosuke Suzuki)</li>/<li><a href=""https://github.com/eslint/eslint/commit/978799bd5c76fecf4ce8f17d89ad6c9f436c3228""><code>978799b</code></a> feat: add new rule <code>no-empty-static-block</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16325"">#16325</a>) (Sosuke Suzuki)</li>/<li><a href=""https://github.com/eslint/eslint/commit/69216ee69c7172e847b64e0e934b5121a34d0ea3""><code>69216ee</code></a> feat: no-empty suggest to add comment in empty BlockStatement (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16470"">#16470</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/319f0a5491598825bbd528c6d1fc12771056a74c""><code>319f0a5</code></a> feat: use <code>context.languageOptions.ecmaVersion</code> in core rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16458"">#16458</a>) (Milos Djermanovic)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/c3ce5212f672d95dde3465d7d3c4bf99ff665f8b""><code>c3ce521</code></a> fix: Ensure unmatched glob patterns throw an error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16462"">#16462</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/886a0386897f96d2da95eba8c52bd893fcbf7e86""><code>886a038</code></a> fix: handle files with unspecified path in <code>getRulesMetaForResults</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16437"">#16437</a>) (Francesco Trotta)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/ce93b429bf917640473dd7e26b49bba993c68ce4""><code>ce93b42</code></a> docs: Stylelint property-no-unknown (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16497"">#16497</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/d2cecb4ad2a6d33444cf0288a863c43acb3b468a""><code>d2cecb4</code></a> docs: Stylelint declaration-block-no-shorthand-property-overrides (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16498"">#16498</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/0a92805d7713118866e519b0ff2a61c5d6238ad9""><code>0a92805</code></a> docs: stylelint color-hex-case (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16496"">#16496</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/74a5af487ac7296a46a8078e585f00df72b63d83""><code>74a5af4</code></a> docs: fix stylelint error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16491"">#16491</a>) (Milos Djermanovic)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.28.0 - November 18, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/34c05a779ada3142995392ae12978461900088df""><code>34c05a7</code></a> docs: Language Options page intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16511"">#16511</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3e663873c97773ab1ecdff54aaa122075d5bb389""><code>3e66387</code></a> docs: add intro and edit ignoring files page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16510"">#16510</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/436f712843360f98b2bd63256bf0c4f77013b54c""><code>436f712</code></a> docs: fix Header UI inconsistency (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16464"">#16464</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f74381696703d8eed0e175d42f96904a3d1cb4cb""><code>f743816</code></a> docs: switch to wrench emoji for auto-fixable rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16545"">#16545</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bc0547eb149a1e04211826662d2d798fb331983d""><code>bc0547e</code></a> docs: improve styles for versions and languages page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16553"">#16553</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6070f58d802d77c6c781c6bc1f554eef8b3d8f68""><code>6070f58</code></a> docs: clarify esquery issue workaround (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16556"">#16556</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b48e4f89c59bd1c5408e3db492a0e95a402820bd""><code>b48e4f8</code></a> docs: Command Line Interface intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16535"">#16535</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b92b30f93db64314827305b552cbb832c63fa949""><code>b92b30f</code></a> docs: Add Rules page intro and content tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16523"">#16523</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1769b423392512db4adf1eff75896c1ac0c3606b""><code>1769b42</code></a> docs: Integrations page introduction (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16548"">#16548</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/63bce44e7b6326e1e94fc7f6283df8de7bbac273""><code>63bce44</code></a> feat: add <code>ignoreClassFieldInitialValues</code> option to no-magic-numbers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16539"">#16539</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c50ae4f840d1ee9dc7b80a46c887398c0ec0a67c""><code>c50ae4f</code></a> fix: Ensure that dot files are found with globs. (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16550"">#16550</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a8d0a57cbc29a917258df41d3254ecd29bcf61ab""><code>a8d0a57</code></a> docs: make table of contents sticky on desktop (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16506"">#16506</a>) (Sam Chen)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9432b67f76ddd7b8a73d37e8a041a9ff25822f0c""><code>9432b67</code></a> fix: throw error for first unmatched pattern (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16533"">#16533</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8385ecdbbe342211e20aebe76fa7affe8ec04c33""><code>8385ecd</code></a> feat: multiline properties in rule <code>key-spacing</code> with option <code>align</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16532"">#16532</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a4e89dbe85589dab982885872dc206e090c27b3c""><code>a4e89db</code></a> feat: <code>no-obj-calls</code> support <code>Intl</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16543"">#16543</a>) (Sosuke Suzuki)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a01315a7d8f3a70468b7a644fde01d6983778c6b""><code>a01315a</code></a> docs: fix route of japanese translation site (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16542"">#16542</a>) (Tanuj Kanti)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e94a4a95ee301b0344d3292c37a0b29d8e18ab30""><code>e94a4a9</code></a> chore: Add tests to verify <a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16038"">#16038</a> is fixed (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16538"">#16538</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/05156285396eba9ce3d3a0990a8c89d5bc229636""><code>0515628</code></a> docs: use emoji instead of svg for deprecated rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16536"">#16536</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e76c3827727b48c16af8467c02c31160e5595d83""><code>e76c382</code></a> fix: allow <code>* 1</code> when followed by <code>/</code> in no-implicit-coercion (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16522"">#16522</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/68f12882fbaeda8ffb26425d42d261346ff5af51""><code>68f1288</code></a> docs: set default layouts (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16484"">#16484</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e13f194f89f591730aa955f7b62192c7e8296069""><code>e13f194</code></a> chore: stricter validation of <code>meta.docs.description</code> in core rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16529"">#16529</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/776827a1748da88a25e7903bd794f5439de922b5""><code>776827a</code></a> docs: init config about specifying shared configs (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16483"">#16483</a>) (Percy Ma)</li>/<li><a href=""https://github.com/eslint/eslint/commit/72dbfbc0c45d2b9d19b21c6a5a6b4ca71403ffbf""><code>72dbfbc</code></a> chore: use <code>pkg</code> parameter in <code>getNpmPackageVersion</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16525"">#16525</a>) (webxmsj)</li>/<li><a href=""https://github.com/eslint/eslint/commit/5c39425fc55ecc0b97bbd07ac22654c0eb4f789c""><code>5c39425</code></a> docs: fix broken link to plugins (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16520"">#16520</a>) (Ádám T. Nagy)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c97c7897686ac4dc2828537d6a017f3c99f7d905""><code>c97c789</code></a> docs: Add missing no-new-native-nonconstructor docs code fence (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16503"">#16503</a>) (Brandon Mills)</li>/</ul>/<p>v8.27.0 - November 6, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/f14587c42bb0fe6ec89529aede045a488083d6ee""><code>f14587c</code></a> feat: new <code>no-new-native-nonconstructor</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16368"">#16368</a>) (Sosuke Suzuki)</li>/<li><a href=""https://github.com/eslint/eslint/commit/978799bd5c76fecf4ce8f17d89ad6c9f436c3228""><code>978799b</code></a> feat: add new rule <code>no-empty-static-block</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16325"">#16325</a>) (Sosuke Suzuki)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ce93b429bf917640473dd7e26b49bba993c68ce4""><code>ce93b42</code></a> docs: Stylelint property-no-unknown (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16497"">#16497</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/d2cecb4ad2a6d33444cf0288a863c43acb3b468a""><code>d2cecb4</code></a> docs: Stylelint declaration-block-no-shorthand-property-overrides (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16498"">#16498</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/0a92805d7713118866e519b0ff2a61c5d6238ad9""><code>0a92805</code></a> docs: stylelint color-hex-case (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16496"">#16496</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c3ce5212f672d95dde3465d7d3c4bf99ff665f8b""><code>c3ce521</code></a> fix: Ensure unmatched glob patterns throw an error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16462"">#16462</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/74a5af487ac7296a46a8078e585f00df72b63d83""><code>74a5af4</code></a> docs: fix stylelint error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16491"">#16491</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/69216ee69c7172e847b64e0e934b5121a34d0ea3""><code>69216ee</code></a> feat: no-empty suggest to add comment in empty BlockStatement (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16470"">#16470</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/324db1a11e43ba9d954dc522763faea19129ce6a""><code>324db1a</code></a> docs: explicit stylelint color related rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16465"">#16465</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/94dc4f19ba49fe2358f8bcc2fc3555d222766755""><code>94dc4f1</code></a> docs: use Stylelint for HTML files (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16468"">#16468</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/cc6128db4f489c3ab80fff2f9dbeea313e72208d""><code>cc6128d</code></a> docs: enable stylelint declaration-block-no-duplicate-properties (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16466"">#16466</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/d03a8bf8978bd330aeb951f18cc92bf1ad24eeec""><code>d03a8bf</code></a> docs: Add heading to justification explanation (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16430"">#16430</a>) (Maritaria)</li>/<li><a href=""https://github.com/eslint/eslint/commit/886a0386897f96d2da95eba8c52bd893fcbf7e86""><code>886a038</code></a> fix: handle files with unspecified path in <code>getRulesMetaForResults</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16437"">#16437</a>) (Francesco Trotta)</li>/<li><a href=""https://github.com/eslint/eslint/commit/319f0a5491598825bbd528c6d1fc12771056a74c""><code>319f0a5</code></a> feat: use <code>context.languageOptions.ecmaVersion</code> in core rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16458"">#16458</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8a159686f9d497262d573dd601855ce28362199b""><code>8a15968</code></a> docs: add Stylelint configuration and cleanup (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16379"">#16379</a>) (Nick Schonning)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9b0a469d1e4650c1d9da26239357e715b11b2d97""><code>9b0a469</code></a> docs: note commit messages don't support scope (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16435"">#16435</a>) (Andy Edwards)</li>/<li><a href=""https://github.com/eslint/eslint/commit/15814057fd69319b3744bdea5db2455f85d2e74f""><code>1581405</code></a> docs: improve context.getScope() docs (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16417"">#16417</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b7971496e9b44add405ca0360294f5c3be85b540""><code>b797149</code></a> docs: update formatters template (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16454"">#16454</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/5ac4de911f712cb3a5a16eb7a4063eee09dfc97c""><code>5ac4de9</code></a> docs: fix link to formatters on the Core Concepts page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16455"">#16455</a>) (Vladislav)</li>/<li><a href=""https://github.com/eslint/eslint/commit/33313ef56258a6a96b00a3e70025b94bd2f2fe9f""><code>33313ef</code></a> docs: core-concepts: fix link to semi rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16453"">#16453</a>) (coderaiser)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/b8769f192be940fea3aa5e6477b148efcaae2277""><code>b8769f1</code></a> 8.28.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/d2b072313df355f57e84b68b707b08a77e92c273""><code>d2b0723</code></a> Build: changelog update for 8.28.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/34c05a779ada3142995392ae12978461900088df""><code>34c05a7</code></a> docs: Language Options page intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16511"">#16511</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3e663873c97773ab1ecdff54aaa122075d5bb389""><code>3e66387</code></a> docs: add intro and edit ignoring files page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16510"">#16510</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/436f712843360f98b2bd63256bf0c4f77013b54c""><code>436f712</code></a> docs: fix Header UI inconsistency (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16464"">#16464</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f74381696703d8eed0e175d42f96904a3d1cb4cb""><code>f743816</code></a> docs: switch to wrench emoji for auto-fixable rules (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16545"">#16545</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bc0547eb149a1e04211826662d2d798fb331983d""><code>bc0547e</code></a> docs: improve styles for versions and languages page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16553"">#16553</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6070f58d802d77c6c781c6bc1f554eef8b3d8f68""><code>6070f58</code></a> docs: clarify esquery issue workaround (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16556"">#16556</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b48e4f89c59bd1c5408e3db492a0e95a402820bd""><code>b48e4f8</code></a> docs: Command Line Interface intro and tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16535"">#16535</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b92b30f93db64314827305b552cbb832c63fa949""><code>b92b30f</code></a> docs: Add Rules page intro and content tweaks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16523"">#16523</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.25.0...v8.28.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.25.0&new-version=8.28.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4325//Reviewed By: antonk52//Differential Revision: D41578623//Pulled By: mweststrate//fbshipit-source-id: 7d5ee653760203fdea484093bd61e15e705a25a9",https://github.com/facebook/flipper/commit/c1d178828202df9adb5eab18d6632aed0cc66248,129283183,facebook/flipper,False,False
16,e0347bf068000f6c73415041c06ef297791f5bda,"Remove needless usage of enable_if//Summary:/Abstractly:/ - std::enable_if<true/false>                     -> defined/undefined/ - folly::is_detected<defined/undefined> -> true/false//We were needlessly converting from defined/undefined -> true/false -> defined/undefined. This pattern is especially problematic, when the type passed to is_detected, is the same type as should be returned by enable_if (i.e. the return type for the specialized function).//Fortunately, in this problematic case, there is also no need to use either is_detected or enable_if at all, Just using the return type directly will already disable the function correctly. No extra template metaprogramming is actually needed.//However, we do need to explicitly disable the fallback function, as it could also be valid.//Reviewed By: thedavekwon//Differential Revision: D34197096//fbshipit-source-id: b891df51fdcb61a47f26b9d68081eb39eeb13ac7",https://github.com/facebook/fbthrift/commit/e0347bf068000f6c73415041c06ef297791f5bda,11131631,facebook/fbthrift,False,False
17,47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,"New Props parsing infrastructure for perf improvements: visitor pattern vs random-map-access pattern (ViewProps, minus YogaLayoutableShadowNode)//Summary:/Perf numbers for this stack are given in terms of before-stack and after-stack, but the changes are split up for ease of review, and also to show that this migration CAN happen per-component and is 100% opt-in. Most existing C++ components do not /need/ to change at all.//# Problem Statement//During certain renders (select critical scenarios in specific products), UIManagerBinding::createNode time takes over 50% of JS thread CPU time. This could be higher or lower depending on the specific product and interaction, but overall createNode takes a lot of CPU time. The question is: can we improve this? What is the minimal overhead needed?//The vast, vast majority of time is taken up by prop parsing (specifically, converting JS values across the JSI into concrete values on the C++ props structs). Other methods like appendChild, etc, do not take up a significant amount of time; so we conclude that createNode is special, and the JSI itself, or calling into C++, is not the problem. Props parsing is the perf problem.//Can we improve it? (Spoiler: yes)//# How does props parsing work today?//Today, props parsing works as follows://1. The ConcreteComponentDescriptor will construct a RawPropsParser (one per component /type/, per application: so one for View, one for Image, one for Text... etc)/2. Once per component type per application, ConcreteComponentDescriptor will call ""prepare"" on the RawPropsParser with an empty, default-constructed ConcreteProps struct. This ConcreteProps struct will cause RawProps.at(field) for every single field./3. Based on the RawProps::at calls in part 2, RawPropsParser constructs a Map from props string names (width, height, position, etc) to a position within a ""value index"" array./4. The above is what happens before any actual props are parsed; and the RawPropsParser is now ready to parse actual Props./5. When props are actually being parsed from a JSI dictionary, we now have two phases:/  1. The RawPropsParser `preparse`s the RawProps, by iterating over the JSI map and filling in two additional data structures: a linear list of RawValues, and a mapping from the ValueIndex array (`keyIndexToValueIndex_`; see step 3) to a value's position in the values list (`value_` in RawPropsParser/RawProps);/  2. The ConcretePropT constructor is called, which is the same as in step 2/3, which calls `fieldValue = rawProps.at(""fieldName"")` repeatedly./  3. For each `at` call, the RawProps will look up a prop name in the Map constructed in step 3, and either return an empty value, or map the key name to the `keyIndexToValueIndex_` array, which maps to a value in `values_`, which is then returned and further parsed.//So, a few things that become clear with the current architecture://1. Complexity is a property of the number of /possible/ props that /can/ be parsed, not what is actually used in product code. This violates the ""only pay for what you use"" principal. If you have `<View opacity={0.5} />`, the ViewProps constructor will request ~170 properties, not 1!/2. There's a lot of pre-parsing which isn't free/3. The levels of indirection aren't free, and make cache misses more likely and pipelining is more challenging/4. The levels of indirection also require more memory - minor, but not free//# How can we improve it?//The goal is to improve props parsing with minimal or zero impact on backwards-compability. We should be able to migrate over components when it's clear there's a performance issue, without requiring everything gets migrated over at once. This both (1) helps us prove out the new architecture, (2) derisks the project, (3) gives us time, internally and externally, to perfect the APIs and gradually migrate everything over before deleting the old infrastructure code entirely.//Thus, the goal is to do something that introduces a zero-cost abstraction. This isn't entirely possible in practice, and in fact this method slightly regresses components that do not use the new architecture /at all/, while dramatically improving migrated components and causing the impact of the /old/ architecture to be minimal.//# Solution//1. We still keep the existing system in place entirely./2. After Props are constructed (see ConcreteComponentDescriptor changes) we iterate over all the /values/ set from JS, and call PropsT::setProp. Incidentally, this allows us to easily reuse the same prop for multiple values for ""free"", which was expensive in the old system./3. It's worth noting that this makes a Props struct ""less immutable"" than it was before, and essentially now we have a ""builder pattern"" for Props. (If we really wanted to, we could still require a single constructor for Props, and then actually use an intermediate PropsBuilder to accumulate values - but I don't think this overhead would be worth for the conceptual ""immutability"" win, and instead a ""Construct/Set/Seal"" model works fine, and we still have all the same guarantees of immutability after the parsing phase)//# Implementation Details/# How to properly construct a single Prop value//Minor detail: parsing a single prop is a 3-step process. We imagine two scenarios: (1) Creating a new ShadowNode/Props A from nothing/void, so the previous Props value is just the default constructor. (2) Cloning a ShadowNode A->B and therefore Props A must be copied to Props B before parsing.//We will denote this as a clone from A->B, where A may or may not be a previous node or a default-constructed Props node; and imagine in particular that we're setting the ""opacity"" value for PropsB.//We must first (1) copy a value over from the previous version of the Props struct, so B.opacity = A.opacity; (2) Determine if opacity has been set from JS. If so, and there is a value, B.opacity = parse(JSValue). (3) If JS has passed in a value for the prop, BUT the value is `null`, it means that JS is resetting or deleting the prop, so we must set it BACK to the default. In this case we set PropsB.opacity = DefaultConstructedProps.opacity.//We must take care in general to ensure that the correct behavior is achieved here, which should help to explain some of the code below.//## String comparisons vs hash comparisons//In the previous system, a RawPropsKey is three `const char*` strings, concatenated together repeatedly /at runtime/. In practice, the ONLY reason we have the prefix, name, suffix Key structure is for the templated prop parsing in ViewProps and YogaStyableProps - that's it. It's not used anywhere else. Further, the key {""margin"", ""Left"", ""Width""} is identical to the key {""marginLeftWidth"", null, null} and we don't do anything fancy with matching prefixes before comparing the whole string, or similar. Before comparison, keys are concatenated into a single string and then we use `strcmp`. The performance of this isn't terrible, but it's nonzero overhead.//I think we can do better and it's sufficient to compare hashed string values; even better, we can construct most of these /at compile time/ using constexpr, and using `switch` statements guarantee no hash collisions within a single Props struct (it's possible there's a collision between Props.cpp and ViewProps.cpp, for example, since they're different switch statements). We may eventually want to be more robust against has collisions; I personally don't find the risk to be too great, hash collisions with these keys are exceedingly unlikely (or maybe I just like to live dangerously). Thus, at runtime, each setProp requires computing a single hash for the value coming from JS, and then int comparisons with a bunch of pre-compiled values.//If we want to be really paranoid, we could be robust to hash collisions by doing `switch COMPILED_HASH(""opacity""): if (strcmp(strFromJs, ""opacity"") == 0)`. I'm happy to do this if there's enough concern.//## Macros//Yuck! I'm using lots of C preprocessor macros. In general I found this way, way easier in reducing code and (essentially) doing codegen for me vs templated code for the switch cases and hashing prop names at compile-time. Maybe there's a better way.//Changelog: [Added][Fabric] New API for efficient props construction//Reviewed By: javache//Differential Revision: D37050215//fbshipit-source-id: d2dcd351a93b9715cfeb5197eb0d6f9194ec6eb9",https://github.com/facebook/react-native/commit/47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,29028775,facebook/react-native,False,False
18,142e06cddec32bde40a2b9636f17718fee661f9f,"Bump eslint from 8.17.0 to 8.21.0 in /js/js-flipper (#3958)//Summary:/Bumps [eslint](https://github.com/eslint/eslint) from 8.17.0 to 8.21.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.21.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/7b43ea14a8af5fc3dbac38fa9d5bc71741328c16""><code>7b43ea1</code></a> feat: Implement FlatESLint (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16149"">#16149</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92bf49a4b39dde728fbc6d348e62c7009e21cf7d""><code>92bf49a</code></a> feat: improve the key width calculation in <code>key-spacing</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16154"">#16154</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c4615421cb4825e2ad22e275ec9439756d56299c""><code>c461542</code></a> feat: add new <code>allowLineSeparatedGroups</code> option to the <code>sort-keys</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16138"">#16138</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1cdcbca8a961a057a9db40df412f249545befe2b""><code>1cdcbca</code></a> feat: add deprecation warnings for legacy API in <code>RuleTester</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16063"">#16063</a>) (Nitin Kumar)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/03967755270ae28eec651281c50b6990d3983f48""><code>0396775</code></a> fix: lines-around-comment apply <code>allowBlockStart</code> for switch statements (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16153"">#16153</a>) (Nitin Kumar)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/2aadc93272f1ab7f40246c6b18c4056660f2b3a2""><code>2aadc93</code></a> docs: add anchors to headings inside docs content (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16134"">#16134</a>) (Strek)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/889251194867b1f394c571a5982249329fa44cfd""><code>8892511</code></a> chore: Upgrade to Espree 9.3.3 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16173"">#16173</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1233beea3938fc4234c8f75917776832226fc3c8""><code>1233bee</code></a> chore: switch to eslint-plugin-node's maintained fork (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16150"">#16150</a>) (唯然)</li>/<li><a href=""https://github.com/eslint/eslint/commit/97b95c068d5b35fae68ca919257b61430271ac76""><code>97b95c0</code></a> chore: upgrade puppeteer v13 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16151"">#16151</a>) (唯然)</li>/</ul>/<h2>v8.20.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/ca83178b18cd5d649bd52a20aef8f8b3f48d3085""><code>ca83178</code></a> feat: catch preprocess errors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16105"">#16105</a>) (JounQin)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/30be0ed4d84dd436e6c2e345e264c10b2bd37308""><code>30be0ed</code></a> fix: no-warning-comments rule escapes special RegEx characters in terms (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16090"">#16090</a>) (Lachlan Hunt)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bfe5e884098874bb512609bcd94a5e5ed797839d""><code>bfe5e88</code></a> fix: ignore spacing before <code>]</code> and <code>}</code> in comma-spacing (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16113"">#16113</a>) (Milos Djermanovic)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/845c4f40274ccb3727c624db44c7a23aafa71318""><code>845c4f4</code></a> docs: Add website team details (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16115"">#16115</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/5a0dfdb9938ffdcea52047466bac11ea983f4b29""><code>5a0dfdb</code></a> docs: Link to blog post in no-constant-binary-expression (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16112"">#16112</a>) (Jordan Eldredge)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bc692a9bf5c664c646ce386eff44eb706c231127""><code>bc692a9</code></a> docs: remove install command (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16084"">#16084</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/49ca3f090425e06fdf6e66bcf2415508c46671e1""><code>49ca3f0</code></a> docs: don't show toc when content not found (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16095"">#16095</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ba19e3f80a32ceae82e0ed6c0acf16061d8370da""><code>ba19e3f</code></a> docs: enhance 404 page UI (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16097"">#16097</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a75d3b47b84f59c080c0c8301ae859fa64aa0f0f""><code>a75d3b4</code></a> docs: remove unused meta.docs.category field in working-with-rules page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16109"">#16109</a>) (Brandon Scott)</li>/<li><a href=""https://github.com/eslint/eslint/commit/cdc020639022dd931863460273de61f4ed4ce0f8""><code>cdc0206</code></a> docs: add formatters page edit link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16094"">#16094</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d1ed22dede531108c8a7899d513f64f0662c135""><code>4d1ed22</code></a> docs: preselect default theme (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16098"">#16098</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4b79612f0bdf860142401033f32fe9a5b8cd7d03""><code>4b79612</code></a> docs: add missing correct/incorrect containers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16087"">#16087</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/09f6acbf2136e3084a3174607ab29a48d5d519b0""><code>09f6acb</code></a> docs: fix UI bug on rules index and details pages (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16082"">#16082</a>) (Deepshika S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5db264931fd6259e064b5cf24b4233f5aaa4c7d""><code>f5db264</code></a> docs: remove remaining duplicate rule descriptions (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16093"">#16093</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/32a6b2a5caae8fa3734dfbdb9640bb4963fc5f4f""><code>32a6b2a</code></a> docs: Add scroll behaviour smooth (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16056"">#16056</a>) (Amaresh  S M)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/bbf8df41c901d41753ca4f3f0baf021944782597""><code>bbf8df4</code></a> chore: Mark autogenerated release blog post as draft (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16130"">#16130</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/eee43067f635c0ec3b61e416f47849029d12268d""><code>eee4306</code></a> chore: update internal lint dependencies (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16088"">#16088</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9615a42c9f065188024423a28b603cb93dad18d4""><code>9615a42</code></a> chore: update formatter examples template to avoid markdown lint error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16085"">#16085</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/62541edf5843ff8e01f14f870701d5df0b2c1cb5""><code>62541ed</code></a> chore: fix markdown linting error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16083"">#16083</a>) (唯然)</li>/</ul>/<h2>v8.19.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/7023628eb3af1bcc0151afab2bf617217fae51b1""><code>7023628</code></a> feat: add importNames support for patterns in no-restricted-imports (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16059"">#16059</a>) (Brandon Scott)</li>/<li><a href=""https://github.com/eslint/eslint/commit/472c3681364833f697d726abc3c33fbe2663eeb7""><code>472c368</code></a> feat: fix handling of blockless <code>with</code> statements in indent rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16068"">#16068</a>) (Milos Djermanovic)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.21.0 - August 1, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/7b43ea14a8af5fc3dbac38fa9d5bc71741328c16""><code>7b43ea1</code></a> feat: Implement FlatESLint (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16149"">#16149</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/889251194867b1f394c571a5982249329fa44cfd""><code>8892511</code></a> chore: Upgrade to Espree 9.3.3 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16173"">#16173</a>) (Brandon Mills)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92bf49a4b39dde728fbc6d348e62c7009e21cf7d""><code>92bf49a</code></a> feat: improve the key width calculation in <code>key-spacing</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16154"">#16154</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c4615421cb4825e2ad22e275ec9439756d56299c""><code>c461542</code></a> feat: add new <code>allowLineSeparatedGroups</code> option to the <code>sort-keys</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16138"">#16138</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1cdcbca8a961a057a9db40df412f249545befe2b""><code>1cdcbca</code></a> feat: add deprecation warnings for legacy API in <code>RuleTester</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16063"">#16063</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/03967755270ae28eec651281c50b6990d3983f48""><code>0396775</code></a> fix: lines-around-comment apply <code>allowBlockStart</code> for switch statements (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16153"">#16153</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/2aadc93272f1ab7f40246c6b18c4056660f2b3a2""><code>2aadc93</code></a> docs: add anchors to headings inside docs content (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16134"">#16134</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1233beea3938fc4234c8f75917776832226fc3c8""><code>1233bee</code></a> chore: switch to eslint-plugin-node's maintained fork (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16150"">#16150</a>) (唯然)</li>/<li><a href=""https://github.com/eslint/eslint/commit/97b95c068d5b35fae68ca919257b61430271ac76""><code>97b95c0</code></a> chore: upgrade puppeteer v13 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16151"">#16151</a>) (唯然)</li>/</ul>/<p>v8.20.0 - July 16, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/bbf8df41c901d41753ca4f3f0baf021944782597""><code>bbf8df4</code></a> chore: Mark autogenerated release blog post as draft (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16130"">#16130</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/845c4f40274ccb3727c624db44c7a23aafa71318""><code>845c4f4</code></a> docs: Add website team details (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16115"">#16115</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/5a0dfdb9938ffdcea52047466bac11ea983f4b29""><code>5a0dfdb</code></a> docs: Link to blog post in no-constant-binary-expression (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16112"">#16112</a>) (Jordan Eldredge)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bc692a9bf5c664c646ce386eff44eb706c231127""><code>bc692a9</code></a> docs: remove install command (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16084"">#16084</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/30be0ed4d84dd436e6c2e345e264c10b2bd37308""><code>30be0ed</code></a> fix: no-warning-comments rule escapes special RegEx characters in terms (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16090"">#16090</a>) (Lachlan Hunt)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ca83178b18cd5d649bd52a20aef8f8b3f48d3085""><code>ca83178</code></a> feat: catch preprocess errors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16105"">#16105</a>) (JounQin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/49ca3f090425e06fdf6e66bcf2415508c46671e1""><code>49ca3f0</code></a> docs: don't show toc when content not found (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16095"">#16095</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ba19e3f80a32ceae82e0ed6c0acf16061d8370da""><code>ba19e3f</code></a> docs: enhance 404 page UI (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16097"">#16097</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/bfe5e884098874bb512609bcd94a5e5ed797839d""><code>bfe5e88</code></a> fix: ignore spacing before <code>]</code> and <code>}</code> in comma-spacing (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16113"">#16113</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/a75d3b47b84f59c080c0c8301ae859fa64aa0f0f""><code>a75d3b4</code></a> docs: remove unused meta.docs.category field in working-with-rules page (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16109"">#16109</a>) (Brandon Scott)</li>/<li><a href=""https://github.com/eslint/eslint/commit/cdc020639022dd931863460273de61f4ed4ce0f8""><code>cdc0206</code></a> docs: add formatters page edit link (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16094"">#16094</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4d1ed22dede531108c8a7899d513f64f0662c135""><code>4d1ed22</code></a> docs: preselect default theme (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16098"">#16098</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4b79612f0bdf860142401033f32fe9a5b8cd7d03""><code>4b79612</code></a> docs: add missing correct/incorrect containers (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16087"">#16087</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/09f6acbf2136e3084a3174607ab29a48d5d519b0""><code>09f6acb</code></a> docs: fix UI bug on rules index and details pages (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16082"">#16082</a>) (Deepshika S)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5db264931fd6259e064b5cf24b4233f5aaa4c7d""><code>f5db264</code></a> docs: remove remaining duplicate rule descriptions (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16093"">#16093</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/32a6b2a5caae8fa3734dfbdb9640bb4963fc5f4f""><code>32a6b2a</code></a> docs: Add scroll behaviour smooth (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16056"">#16056</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/eee43067f635c0ec3b61e416f47849029d12268d""><code>eee4306</code></a> chore: update internal lint dependencies (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16088"">#16088</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/9615a42c9f065188024423a28b603cb93dad18d4""><code>9615a42</code></a> chore: update formatter examples template to avoid markdown lint error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16085"">#16085</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/62541edf5843ff8e01f14f870701d5df0b2c1cb5""><code>62541ed</code></a> chore: fix markdown linting error (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16083"">#16083</a>) (唯然)</li>/</ul>/<p>v8.19.0 - July 1, 2022</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/7023628eb3af1bcc0151afab2bf617217fae51b1""><code>7023628</code></a> feat: add importNames support for patterns in no-restricted-imports (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16059"">#16059</a>) (Brandon Scott)</li>/<li><a href=""https://github.com/eslint/eslint/commit/472c3681364833f697d726abc3c33fbe2663eeb7""><code>472c368</code></a> feat: fix handling of blockless <code>with</code> statements in indent rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16068"">#16068</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/fc81848238ee0f6ff93615875ea4b8e95dc09249""><code>fc81848</code></a> fix: throw helpful exception when rule has wrong return type (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16075"">#16075</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/e88493395b3be2b08e14e9b84d20d2733f78582c""><code>e884933</code></a> chore: use <code>github-slugger</code> for markdown anchors (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16067"">#16067</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/02e9cb01e7663af3a3fd16725afc7d71e73b9eed""><code>02e9cb0</code></a> chore: revamp carbon ad style (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16078"">#16078</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3ae0574fc78c4a2b406625e4792cb2859cb9bcb1""><code>3ae0574</code></a> docs: Remove duplicate rule descriptions (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16052"">#16052</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b6aee9591ecc2e2f5738ab8bef20faac1e05b5c3""><code>b6aee95</code></a> chore: remove unwanted comments from rules markdown (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16054"">#16054</a>) (Strek)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f50cf436aaa5dff1273f4753dd3fc6782f95a045""><code>f50cf43</code></a> docs: Add base href to each page to fix relative URLs (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16046"">#16046</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/6840940a766d671831d5cee0e3c0e2f4e642632a""><code>6840940</code></a> chore: correctly use .markdownlintignore in Makefile (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16060"">#16060</a>) (Bryan Mishkin)</li>/<li><a href=""https://github.com/eslint/eslint/commit/ae4b449719d496fd611903d596341ec4c1d81c16""><code>ae4b449</code></a> docs: make logo link clickable on small width screens (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16058"">#16058</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/280f898bff9b809327e4c94cea3632ba95af4485""><code>280f898</code></a> docs: use only fenced code blocks (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16044"">#16044</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5d63b9e15d9f325ef4953b683cb67133b05e9ea""><code>f5d63b9</code></a> docs: add listener only if element exists (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16045"">#16045</a>) (Amaresh  S M)</li>/<li><a href=""https://github.com/eslint/eslint/commit/8b639ccb2fb0f0a7d7aaee1f1fc2881a237de95d""><code>8b639cc</code></a> docs: add missing migrating-to-8.0.0 in the user guide (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16048"">#16048</a>) (唯然)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b8e68c1f7e2b8fa5c108216f74dcd3100aa33b0f""><code>b8e68c1</code></a> docs: Update release process (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16036"">#16036</a>) (Nicholas C. Zakas)</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/9c53ed40255f7913cfb68cec32cba38d11fbc5b2""><code>9c53ed4</code></a> 8.21.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/fd404a5cb35cdee2e809082c3be0837746aa4110""><code>fd404a5</code></a> Build: changelog update for 8.21.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/7b43ea14a8af5fc3dbac38fa9d5bc71741328c16""><code>7b43ea1</code></a> feat: Implement FlatESLint (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16149"">#16149</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/889251194867b1f394c571a5982249329fa44cfd""><code>8892511</code></a> chore: Upgrade to Espree 9.3.3 (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16173"">#16173</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92bf49a4b39dde728fbc6d348e62c7009e21cf7d""><code>92bf49a</code></a> feat: improve the key width calculation in <code>key-spacing</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16154"">#16154</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c4615421cb4825e2ad22e275ec9439756d56299c""><code>c461542</code></a> feat: add new <code>allowLineSeparatedGroups</code> option to the <code>sort-keys</code> rule (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16138"">#16138</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1cdcbca8a961a057a9db40df412f249545befe2b""><code>1cdcbca</code></a> feat: add deprecation warnings for legacy API in <code>RuleTester</code> (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16063"">#16063</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/03967755270ae28eec651281c50b6990d3983f48""><code>0396775</code></a> fix: lines-around-comment apply <code>allowBlockStart</code> for switch statements (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16153"">#16153</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/2aadc93272f1ab7f40246c6b18c4056660f2b3a2""><code>2aadc93</code></a> docs: add anchors to headings inside docs content (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16134"">#16134</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/1233beea3938fc4234c8f75917776832226fc3c8""><code>1233bee</code></a> chore: switch to eslint-plugin-node's maintained fork (<a href=""https://github-redirect.dependabot.com/eslint/eslint/issues/16150"">#16150</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.17.0...v8.21.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.17.0&new-version=8.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/3958//Reviewed By: lblasa//Differential Revision: D38315183//Pulled By: LukeDefeo//fbshipit-source-id: 5903cc91d8de04c956c3bf4e0fdf8c99807fb452",https://github.com/facebook/flipper/commit/142e06cddec32bde40a2b9636f17718fee661f9f,129283183,facebook/flipper,False,False
19,b5a41132d15e2ec1e4e500b52c8ad92645063aa6,"Adds pysa models for boto3 batch 2/inf (#535)//Summary:/Adds pysa models for boto3 application insights client.//Pull Request resolved: https://github.com/facebook/pyre-check/pull/535//Test Plan:/- run `pyre analyze --no-verify` against the following code/```python3/import flask/import boto3/from flask import Flask, render_template/from mypy_boto3_application_insights.client import ApplicationInsightsClient//app = Flask(__name__)//aparrapo.route(""/vuls/<string:payload>"")/def definite_vuls(payload: str) -> None:/    client: ApplicationInsightsClient = boto3.client(""application-insights"")/    response1 = client.list_log_pattern_sets(/        ResourceGroupName='string',/        MaxResults=123,/        NextToken='string'/    )/    response2 = client.list_log_patterns(/        ResourceGroupName='string',/        PatternSetName='string',/        MaxResults=123,/        NextToken='string'/    )/    response3 = client.list_problems(/        ResourceGroupName='string',/        MaxResults=123,/        NextToken='string',/    )/    response4 = client.list_configuration_history(/        ResourceGroupName='string',/        EventStatus='ERROR',/        MaxResults=123,/        NextToken='string'/    )/    reveal_taint(response1)/    reveal_taint(response2)/    reveal_taint(response3)/    reveal_taint(response4)/```/and `.pyre_configuration`:/```json/{/  ""source_directories"": [/    "".""/  ],/  ""taint_models_path"": ""../../stubs"",/  ""search_path"": [/    ""."",/    {""site-package"": ""boto3"" },/    {""site-package"": ""mypy_boto3_application_insights""}/  ]/}/```//Screenshots://<img width=""1440"" alt=""Screenshot 2021-11-12 at 7 52 51 PM"" src=""https://user-images.githubusercontent.com/8947010/141486862-237833e8-ed4f-4609-a571-edc66761b47d.png"">//Fixes part of: https://github.com/MLH-Fellowship/pyre-check/issues/58/Signed-off-by: Abishek V Ashok <abishekvashok@gmail.com>//Reviewed By: dkgi//Differential Revision: D32394556//Pulled By: 0xedward//fbshipit-source-id: 2b09893729969ff4a1d80e5d22f80d8bad113cb7",https://github.com/facebook/pyre-check/commit/b5a41132d15e2ec1e4e500b52c8ad92645063aa6,110274488,facebook/pyre-check,False,False
20,e9dd65bffabdfbc7bd1883cca4c61a676cdf7499,"FPushCuf: Optimize the case where callable is an (obj, staticstr)//The pattern call_user_func(array($obj, ""staticString""), ...)/is pretty common, and it's basically the same as FPushObjMethodD/except it warns instead of fataling when the method is not defined./Catch this pattern and turn it into a similar IR sequence, and add a/template flag to methodCacheSlowPath to warn instead of fataling.//Reviewed By: @swtaarrs//Differential Revision: D1042143",https://github.com/facebook/hhvm/commit/e9dd65bffabdfbc7bd1883cca4c61a676cdf7499,455600,facebook/hhvm,False,False
21,1d7d4279d779b001519228af068c2817cc68f8b5,"[parser] use Token | Continue in regexp and template modes//Summary: other modes return `Token` or `Continue`, and have a helper that loops until it gets a `Token`. this diff applies that pattern to `regexp` as well, since having it consistent will be useful in a followup.//Reviewed By: gabelevi//Differential Revision: D8841584//fbshipit-source-id: 0f5accf40962dcd148b000ff04ee0b0ee21e1104",https://github.com/facebook/flow/commit/1d7d4279d779b001519228af068c2817cc68f8b5,25880891,facebook/flow,False,False
22,5c3f929971d044a8c61d4b1905153af2c3e7a293,"Convert remaining handwritten scan code to type_scan::Scanner//Summary:/This finishes the transition from the legacy scan pattern/of calling back to the mark template function, to the/type_scan style of queueing up pointers & conservative-scan/regions.//Reviewed By: ricklavoie//Differential Revision: D4205165//fbshipit-source-id: af37420d6c8fcd699b85bcd4c01d58debbf0c9e2",https://github.com/facebook/hhvm/commit/5c3f929971d044a8c61d4b1905153af2c3e7a293,455600,facebook/hhvm,False,False
23,72d5e30c884eef224c9a12c4c5e591abe19c4488,"Support for S-expressions//Summary:/S-expressions are a compact, efficient and readable format for serializing complex data structures (abstract semantics, program invariants, internal representations, etc.). This library provides support for S-expressions, including a parser and pattern-matching functionalities.//This is a header-only library, because it's good practice (Boost is header-only for the most part) and it also allows us to define templates.//Reviewed By: int3//Differential Revision: D5710042//fbshipit-source-id: 93a10774a6a1053c032400fcbbd1d008f2a8087d",https://github.com/facebook/redex/commit/72d5e30c884eef224c9a12c4c5e591abe19c4488,54664770,facebook/redex,False,False
24,9605df8365da598488b38151b9252606dfce934c,"Bump eslint-plugin-import from 2.24.2 to 2.25.4 in /js/js-flipper (#3269)//Summary:/Bumps [eslint-plugin-import](https://github.com/import-js/eslint-plugin-import) from 2.24.2 to 2.25.4./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/import-js/eslint-plugin-import/releases"">eslint-plugin-import's releases</a>.</em></p>/<blockquote>/<h2>v2.25.2</h2>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.25.1...v2.25.2"">https://github.com/import-js/eslint-plugin-import/compare/v2.25.1...v2.25.2</a></p>/<h2>v2.25.1</h2>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.25.0...v2.25.1"">https://github.com/import-js/eslint-plugin-import/compare/v2.25.0...v2.25.1</a></p>/<h2>v2.25.0</h2>/<h2>What's Changed</h2>/<ul>/<li>[Tests] use ESLint class in <code>cli</code> test by <a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2208"">import-js/eslint-plugin-import#2208</a></li>/<li>[New] <code>no-unused-modules</code>: add eslint v8 support by <a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2194"">import-js/eslint-plugin-import#2194</a></li>/<li><code>no-restricted-paths</code> support glob patterns by <a href=""https://github.com/stropho""><code>@​stropho</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2219"">import-js/eslint-plugin-import#2219</a></li>/<li>[New] <code>no-unresolved</code>: add <code>caseSensitiveStrict</code> option by <a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1262"">import-js/eslint-plugin-import#1262</a></li>/<li>[New] no-unused-modules: support dynamic imports [2] by <a href=""https://github.com/Hypnosphi""><code>@​Hypnosphi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2212"">import-js/eslint-plugin-import#2212</a></li>/<li>[New] <code>no-unused-modules</code>: support dynamic imports  by <a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1660"">import-js/eslint-plugin-import#1660</a></li>/<li>[Refactor] switch to an internal replacement for <code>pkg-up</code> and <code>read-pkg-up</code> by <a href=""https://github.com/mgwalker""><code>@​mgwalker</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2047"">import-js/eslint-plugin-import#2047</a></li>/<li>[Fix] no-unresolved: ignore type-only imports by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2220"">import-js/eslint-plugin-import#2220</a></li>/<li>[Fix] <code>order</code>: Fix import ordering in TypeScript module declarations by <a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2226"">import-js/eslint-plugin-import#2226</a></li>/<li>[Tests] fix skip usage by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2232"">import-js/eslint-plugin-import#2232</a></li>/<li>[Refactor] <code>no-unresolved</code>, <code>no-extraneous-dependencies</code>: moduleVisitor usage by <a href=""https://github.com/jablko""><code>@​jablko</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2233"">import-js/eslint-plugin-import#2233</a></li>/<li>Resolve extended TypeScript configuration files by <a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2240"">import-js/eslint-plugin-import#2240</a></li>/<li>[New] Support for ESLint v8 by <a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2191"">import-js/eslint-plugin-import#2191</a></li>/<li>Release 2.25.0 by <a href=""https://github.com/ljharb""><code>@​ljharb</code></a> in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2253"">import-js/eslint-plugin-import#2253</a></li>/</ul>/<h2>New Contributors</h2>/<ul>/<li><a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2194"">import-js/eslint-plugin-import#2194</a></li>/<li><a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1262"">import-js/eslint-plugin-import#1262</a></li>/<li><a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/1660"">import-js/eslint-plugin-import#1660</a></li>/<li><a href=""https://github.com/mgwalker""><code>@​mgwalker</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2047"">import-js/eslint-plugin-import#2047</a></li>/<li><a href=""https://github.com/jablko""><code>@​jablko</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2220"">import-js/eslint-plugin-import#2220</a></li>/<li><a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2226"">import-js/eslint-plugin-import#2226</a></li>/<li><a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/pull/2240"">import-js/eslint-plugin-import#2240</a></li>/</ul>/<p><strong>Full Changelog</strong>: <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.0"">https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.0</a></p>/</blockquote>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/import-js/eslint-plugin-import/blob/main/CHANGELOG.md"">eslint-plugin-import's changelog</a>.</em></p>/<blockquote>/<h2>[2.25.4] - 2022-01-02</h2>/<h3>Fixed</h3>/<ul>/<li><code>importType</code>: avoid crashing on a non-string' (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2305"">https://github.com/facebook/flipper/issues/2305</a>, thanks [<a href=""https://github.com/ljharb""><code>@​ljharb</code></a>])</li>/<li>[<code>first</code>]: prevent crash when parsing angular templates (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2210"">https://github.com/facebook/flipper/issues/2210</a>, thanks [<a href=""https://github.com/ljharb""><code>@​ljharb</code></a>])</li>/<li><code>importType</code>: properly resolve <code>@/*</code>-aliased imports as internal (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2334"">https://github.com/facebook/flipper/issues/2334</a>, thanks [<a href=""https://github.com/ombene""><code>@​ombene</code></a>])</li>/<li>[<code>named</code>]/<code>ExportMap</code>: handle named imports from CJS modules that use dynamic import (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2341"">https://github.com/facebook/flipper/issues/2341</a>, thanks [<a href=""https://github.com/ludofischer""><code>@​ludofischer</code></a>])</li>/</ul>/<h3>Changed</h3>/<ul>/<li>[<code>no-default-import</code>]: report on the token &quot;default&quot; instead of the entire node (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2299"">https://github.com/facebook/flipper/issues/2299</a>, thanks [<a href=""https://github.com/pmcelhaney""><code>@​pmcelhaney</code></a>])</li>/<li>[Docs] [<code>order</code>]: Remove duplicate mention of default (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2280"">https://github.com/facebook/flipper/issues/2280</a>, thanks [<a href=""https://github.com/johnthagen""><code>@​johnthagen</code></a>])</li>/<li>[Deps] update <code>eslint-module-utils</code></li>/</ul>/<h2>[2.25.3] - 2021-11-09</h2>/<h3>Fixed</h3>/<ul>/<li>[<code>extensions</code>]: ignore unresolveable type-only imports (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2270"">https://github.com/facebook/flipper/issues/2270</a>, <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2271"">https://github.com/facebook/flipper/issues/2271</a>, thanks [<a href=""https://github.com/jablko""><code>@​jablko</code></a>])</li>/<li><code>importType</code>: fix <code>isExternalModule</code> calculation (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2282"">https://github.com/facebook/flipper/issues/2282</a>, thanks [<a href=""https://github.com/mx-bernhard""><code>@​mx-bernhard</code></a>])</li>/<li>[<code>no-import-module-exports</code>]: avoid false positives with a shadowed <code>module</code> or <code>exports</code> (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2297"">https://github.com/facebook/flipper/issues/2297</a>, thanks [<a href=""https://github.com/ljharb""><code>@​ljharb</code></a>])</li>/</ul>/<h3>Changed</h3>/<ul>/<li>[Docs] [<code>order</code>]: add type to the default groups (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2272"">https://github.com/facebook/flipper/issues/2272</a>, thanks [<a href=""https://github.com/charpeni""><code>@​charpeni</code></a>])</li>/<li>[readme] Add note to TypeScript docs to install appropriate resolver (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2279"">https://github.com/facebook/flipper/issues/2279</a>, thanks [<a href=""https://github.com/johnthagen""><code>@​johnthagen</code></a>])</li>/<li>[Refactor] <code>importType</code>: combine redundant <code>isScoped</code> and <code>isScopedModule</code> (thanks [<a href=""https://github.com/ljharb""><code>@​ljharb</code></a>])</li>/<li>[Docs] HTTP =&gt; HTTPS (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2287"">https://github.com/facebook/flipper/issues/2287</a>, thanks [<a href=""https://github.com/Schweinepriester""><code>@​Schweinepriester</code></a>])</li>/</ul>/<h2>[2.25.2] - 2021-10-12</h2>/<h3>Fixed</h3>/<ul>/<li>[Deps] update <code>eslint-module-utils</code> for real this time (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2255"">https://github.com/facebook/flipper/issues/2255</a>, thanks [<a href=""https://github.com/ljharb""><code>@​ljharb</code></a>])</li>/</ul>/<h2>[2.25.1] - 2021-10-11</h2>/<h3>Fixed</h3>/<ul>/<li>[Deps] update <code>eslint-module-utils</code></li>/</ul>/<h2>[2.25.0] - 2021-10-11</h2>/<h3>Added</h3>/<ul>/<li>Support <code>eslint</code> v8 (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2191"">https://github.com/facebook/flipper/issues/2191</a>, thanks [<a href=""https://github.com/ota-meshi""><code>@​ota-meshi</code></a>])</li>/<li>[<code>no-unresolved</code>]: add <code>caseSensitiveStrict</code> option (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/1262"">https://github.com/facebook/flipper/issues/1262</a>, thanks [<a href=""https://github.com/sergei-startsev""><code>@​sergei-startsev</code></a>])</li>/<li>[<code>no-unused-modules</code>]: add eslint v8 support (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2194"">https://github.com/facebook/flipper/issues/2194</a>, thanks [<a href=""https://github.com/coderaiser""><code>@​coderaiser</code></a>])</li>/<li>[<code>no-restricted-paths</code>]: add/restore glob pattern support (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2219"">https://github.com/facebook/flipper/issues/2219</a>, thanks [<a href=""https://github.com/stropho""><code>@​stropho</code></a>])</li>/<li>[<code>no-unused-modules</code>]: support dynamic imports (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/1660"">https://github.com/facebook/flipper/issues/1660</a>, <a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2212"">https://github.com/facebook/flipper/issues/2212</a>, thanks [<a href=""https://github.com/maxkomarychev""><code>@​maxkomarychev</code></a>], [<a href=""https://github.com/aladdin-add""><code>@​aladdin-add</code></a>], [<a href=""https://github.com/Hypnosphi""><code>@​Hypnosphi</code></a>])</li>/</ul>/<h3>Fixed</h3>/<ul>/<li>[<code>no-unresolved</code>]: ignore type-only imports (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2220"">https://github.com/facebook/flipper/issues/2220</a>, thanks [<a href=""https://github.com/jablko""><code>@​jablko</code></a>])</li>/<li>[<code>order</code>]: fix sorting imports inside TypeScript module declarations (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2226"">https://github.com/facebook/flipper/issues/2226</a>, thanks [<a href=""https://github.com/remcohaszing""><code>@​remcohaszing</code></a>])</li>/<li>[<code>default</code>], <code>ExportMap</code>: Resolve extended TypeScript configuration files (<a href=""https://github-redirect.dependabot.com/import-js/eslint-plugin-import/issues/2240"">https://github.com/facebook/flipper/issues/2240</a>, thanks [<a href=""https://github.com/mrmckeb""><code>@​mrmckeb</code></a>])</li>/</ul>//</blockquote>/<p>... (truncated)</p>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/68cea3e6b6fe5fd61e5cf2e2c7c0be9e8dc597cb""><code>68cea3e</code></a> Bump to v2.25.4</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/dbf668e99026c211ced6125297f47f38e0e866c7""><code>dbf668e</code></a> [Dev Deps] update <code>safe-publish-latest</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/ef9368150b2ecab02acd6642181ec3e0ba852261""><code>ef93681</code></a> [Deps] update <code>eslint-module-utils</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/de8873973a3185b8d4a5c4bbbf6f2f22c4abc288""><code>de88739</code></a> utils: v2.7.2</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/9e06effc700b1c1bd5ada3bff42fefa668d99b6d""><code>9e06eff</code></a> [utils] [Refactor] inline <code>pkgDir</code> implementation; remove <code>pkg-dir</code></li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/210e40a11815bf8ae573324c2449933dcc1df5b9""><code>210e40a</code></a> [utils] [patch] Fix <code>babel/eslint-parser</code> 8 compatibility</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/e3ca68edaf7b34ee17afe13f2117fed87c200007""><code>e3ca68e</code></a> [Fix] <code>named</code>/<code>ExportMap</code>: handle named imports from CJS modules that use dyn...</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/ef980d4b116cc5473990a633ef5214b6e37468b0""><code>ef980d4</code></a> [Fix] <code>importType</code>: properly resolve <code>@/*</code>-aliased imports as internal</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/e15631696440396f39dad6daf99d48f56f7defce""><code>e156316</code></a> [Docs] <code>prefer-default-export</code>: fix typo</li>/<li><a href=""https://github.com/import-js/eslint-plugin-import/commit/e8d79b5abe295eb956401b06d7dfb87b29ad5635""><code>e8d79b5</code></a> [Tests] fix OSX tests</li>/<li>Additional commits viewable in <a href=""https://github.com/import-js/eslint-plugin-import/compare/v2.24.2...v2.25.4"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint-plugin-import&package-manager=npm_and_yarn&previous-version=2.24.2&new-version=2.25.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/3269//Reviewed By: aigoncharov//Differential Revision: D33565478//Pulled By: passy//fbshipit-source-id: 085d103561ce73491335d5f0ea1ff019ad59d187",https://github.com/facebook/flipper/commit/9605df8365da598488b38151b9252606dfce934c,129283183,facebook/flipper,False,False
25,a43967c4270bef136b9175933ceabf2c8295ae11,"Factor isObj hacks into minstr-helpers.h (closer to jit helper apis)//Summary:/The various member instruction helpers in member-operations.h take/an isObj template parameter. When set, the TypedValue* base argument/is cast to ObjectData*. This hack is only used from JIT-helper/callers, as part of the table-dispatch pattern in minstr-helpers.h.//This diff factors the isObj template parameter out of member-/operations.h since it's not necessary except in the JIT. Once/this is done, it's relatively straightforward to split the/tables in minstr-helpers.h, to remove the isObj (and hacky cast)/completely. This diff only tackles the first part.//Reviewed By: swtaarrs//Differential Revision: D4032162//fbshipit-source-id: 6feca445ab6b5270041a716649d86a3e525ef1d6",https://github.com/facebook/hhvm/commit/a43967c4270bef136b9175933ceabf2c8295ae11,455600,facebook/hhvm,False,False
26,08d712a7a3bb416c8360f11bde66a774e6b5b83e,"Change insert implementation to template that takes iterators//Summary:/While manipulating IR using the awesome editable CFG, I am finding myself using the following pattern a lot:/```/std::vector<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert);/```/Vector insertion on average is `O(log(n))`, while worse being `O(n)`. It would be nice if we can use either `std::deque` (whose insertion or removal of elements at the end or beginning take constant time) or any kind of data structure we currently use to hold IR (I am guessing like `IRList`?)//Because in C++ we frequently pass iterators to achieve this level of polymorphism. So I would prefer to have an API like this://```//* any type of containers that holds IRInstruction* *//std::deque<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert.begin(), to_insert.end());/```/This diff is the first step to make the actual insert implementation a template.//Reviewed By: justinjhendrick//Differential Revision: D15139367//fbshipit-source-id: cc1bc926d963a6171c3ed8f3415e487909820b20",https://github.com/facebook/redex/commit/08d712a7a3bb416c8360f11bde66a774e6b5b83e,54664770,facebook/redex,False,False
27,50f161dc13e057a4eff8f2d5e246ce66779881c8,"Bump electron-builder from 22.10.5 to 22.11.1 in /desktop (#2297)//Summary:/Bumps [electron-builder](https://github.com/electron-userland/electron-builder) from 22.10.5 to 22.11.1./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/electron-userland/electron-builder/releases"">electron-builder's releases</a>.</em></p>/<blockquote>/<h2>22.11.1</h2>/<h3>Bug Fixes</h3>/<ul>/<li>check if icons subdir exists in build resources, otherwise don't prepend it to fallback sources (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5686"">#5686</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8df250b4645924942883ba6ad1418da994116521"">8df250b</a>)</li>/<li>DMG assembly on Apple Silicon (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4606"">#4606</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5724"">#5724</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/469b85fa2a2660eaba1eafbbd528abec2b1f50d9"">469b85f</a>)</li>/<li>Escape version in NSIS Updater during replace (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5655"">#5655</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/77c215d1b1913982a7c9a62b1b5098d95a37272d"">77c215d</a>)</li>/<li>extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4"">9305fef</a>), closes <a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4676"">#4676</a></li>/<li>fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73"">d57453c</a>)</li>/<li>test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4"">6237e67</a>)</li>/<li>typo in <code>fileMatcher</code>'s default patterns (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5705"">#5705</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/c0ae89c004ea546ae6e0a73ec0f04e038169197c"">c0ae89c</a>)</li>/<li>update repo in CONTRIBUTING.md (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5726"">#5726</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/da85087143d2c6a63faab4c44c28dc625326e9ee"">da85087</a>)</li>/<li><strong>electron-updater:</strong> do not install on quit when autoInstallOnAppQuit is set to false (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5681"">#5681</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8f845916d1f44e347fa36cfd95bc1fa1fe14c455"">8f84591</a>)</li>/<li>windows async signing (<a href=""https://github.com/electron-userland/electron-builder/commit/91627116fdffd5d5faec23e149392283b9979a22"">9162711</a>)</li>/<li><strong>nsis:</strong> keep injected logger state (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5596"">#5596</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/be4a1fb05b6734800aa97652e856de1308e4a2f2"">be4a1fb</a>)</li>/</ul>/<h3>Features</h3>/<ul>/<li>add custom macro for checking uninstallation results (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5712"">#5712</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/e4250206e936dbcad7ddd19f32e7688afce1239e"">e425020</a>)</li>/<li>add Electron branding options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5727"">#5727</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/0de5f1f7d4496462726d1305ad0aeec43d337c30"">0de5f1f</a>)</li>/<li>add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1"">dcf570f</a>)</li>/<li>Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87"">4e2909c</a>)</li>/<li>build additional arch-specific nsis installers when ${arch} template is provided (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5718"">#5718</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/7194c388f64cf9074e7ae14e74a7783da76ea284"">7194c38</a>)</li>/<li><strong>linux:</strong> Package name can be specified using packageName option (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5530"">#5530</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5588"">#5588</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/622aaefd1537f0bfdcf15fc6204b3eea97dc64ce"">622aaef</a>)</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4""><code>9305fef</code></a> fix: extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87""><code>4e2909c</code></a> feat: Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4""><code>6237e67</code></a> fix: test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1""><code>dcf570f</code></a> feat: add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/79c9f6b6b539e5923dc1211b9715c4f7411a12f4""><code>79c9f6b</code></a> docs: CONTRIBUTING.md -&gt; limit line length, refactoring and snippets for Wind...</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73""><code>d57453c</code></a> fix: fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/28cb86bdcb6dd0b10e75a69ccd34ece6cca1d204""><code>28cb86b</code></a> fix/windows-tests (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5806"">#5806</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/66f01bba33523544813418332a5643f8b09f5421""><code>66f01bb</code></a> chore: default linux target + ci config (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5787"">#5787</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6b1be73e4510ac099d9e35f6339d398eb4a03f1a""><code>6b1be73</code></a> Add support for building Flatpak bundles (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5711"">#5711</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/0f3b46c3ae05440b37f0464898ea86107edac341""><code>0f3b46c</code></a> [Electron Builder] Fix for Signing error on docker with WSL 2 engine … (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5722"">#5722</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/electron-userland/electron-builder/compare/v22.10.5...v22.11.1"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=electron-builder&package-manager=npm_and_yarn&previous-version=22.10.5&new-version=22.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/2297//Test Plan:/Smoke test with/```/env FLIPPERVERSIONV2=0.88.290384275 RUST_LOG=flipper_launcher=info /Applications/Flipper.app/Contents/MacOS/Flipper/```//Everything seems to work fine//Reviewed By: passy//Differential Revision: D28323866//Pulled By: cekkaewnumchai//fbshipit-source-id: 8ced137e7c46a8b2cfd044b8f77b65efed639cbf",https://github.com/facebook/flipper/commit/50f161dc13e057a4eff8f2d5e246ce66779881c8,129283183,facebook/flipper,False,False
28,ab7096f0329ba61d0f9ac01c4ebd1f2b7caa42d0,"Bump app-builder-lib from 22.10.5 to 22.11.1 in /desktop (#2260)//Summary:/allow-large-files//Bumps [app-builder-lib](https://github.com/electron-userland/electron-builder) from 22.10.5 to 22.11.1./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/electron-userland/electron-builder/releases"">app-builder-lib's releases</a>.</em></p>/<blockquote>/<h2>22.11.1</h2>/<h3>Bug Fixes</h3>/<ul>/<li>check if icons subdir exists in build resources, otherwise don't prepend it to fallback sources (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5686"">#5686</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8df250b4645924942883ba6ad1418da994116521"">8df250b</a>)</li>/<li>DMG assembly on Apple Silicon (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4606"">#4606</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5724"">#5724</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/469b85fa2a2660eaba1eafbbd528abec2b1f50d9"">469b85f</a>)</li>/<li>Escape version in NSIS Updater during replace (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5655"">#5655</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/77c215d1b1913982a7c9a62b1b5098d95a37272d"">77c215d</a>)</li>/<li>extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4"">9305fef</a>), closes <a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/4676"">#4676</a></li>/<li>fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73"">d57453c</a>)</li>/<li>test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4"">6237e67</a>)</li>/<li>typo in <code>fileMatcher</code>'s default patterns (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5705"">#5705</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/c0ae89c004ea546ae6e0a73ec0f04e038169197c"">c0ae89c</a>)</li>/<li>update repo in CONTRIBUTING.md (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5726"">#5726</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/da85087143d2c6a63faab4c44c28dc625326e9ee"">da85087</a>)</li>/<li><strong>electron-updater:</strong> do not install on quit when autoInstallOnAppQuit is set to false (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5681"">#5681</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/8f845916d1f44e347fa36cfd95bc1fa1fe14c455"">8f84591</a>)</li>/<li>windows async signing (<a href=""https://github.com/electron-userland/electron-builder/commit/91627116fdffd5d5faec23e149392283b9979a22"">9162711</a>)</li>/<li><strong>nsis:</strong> keep injected logger state (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5596"">#5596</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/be4a1fb05b6734800aa97652e856de1308e4a2f2"">be4a1fb</a>)</li>/</ul>/<h3>Features</h3>/<ul>/<li>add custom macro for checking uninstallation results (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5712"">#5712</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/e4250206e936dbcad7ddd19f32e7688afce1239e"">e425020</a>)</li>/<li>add Electron branding options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5727"">#5727</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/0de5f1f7d4496462726d1305ad0aeec43d337c30"">0de5f1f</a>)</li>/<li>add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1"">dcf570f</a>)</li>/<li>Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87"">4e2909c</a>)</li>/<li>build additional arch-specific nsis installers when ${arch} template is provided (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5718"">#5718</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/7194c388f64cf9074e7ae14e74a7783da76ea284"">7194c38</a>)</li>/<li><strong>linux:</strong> Package name can be specified using packageName option (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5530"">#5530</a>) (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5588"">#5588</a>) (<a href=""https://github.com/electron-userland/electron-builder/commit/622aaefd1537f0bfdcf15fc6204b3eea97dc64ce"">622aaef</a>)</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/9305fefa1265ec1a244b0003bd4489731d5f15a4""><code>9305fef</code></a> fix: extend http file limit (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5843"">#5843</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/4e2909cdf56aabd11330dc55f57993efadf55d87""><code>4e2909c</code></a> feat: Allow specifying additional WiX compiler options (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5813"">#5813</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6237e670a8ddd99ec8c076db86361c06c04eedd4""><code>6237e67</code></a> fix: test snap update for abi_registry.json (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5823"">#5823</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/dcf570f5fedbd26e33fa58d8926609918b43b9a1""><code>dcf570f</code></a> feat: add option removePackageKeywords (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5814"">#5814</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/79c9f6b6b539e5923dc1211b9715c4f7411a12f4""><code>79c9f6b</code></a> docs: CONTRIBUTING.md -&gt; limit line length, refactoring and snippets for Wind...</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/d57453cffc8e502fb1c95a9287dee2dd5cdd4b73""><code>d57453c</code></a> fix: fixing downloadPromise not resolving on Mac. (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5802"">#5802</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/28cb86bdcb6dd0b10e75a69ccd34ece6cca1d204""><code>28cb86b</code></a> fix/windows-tests (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5806"">#5806</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/66f01bba33523544813418332a5643f8b09f5421""><code>66f01bb</code></a> chore: default linux target + ci config (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5787"">#5787</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/6b1be73e4510ac099d9e35f6339d398eb4a03f1a""><code>6b1be73</code></a> Add support for building Flatpak bundles (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5711"">#5711</a>)</li>/<li><a href=""https://github.com/electron-userland/electron-builder/commit/0f3b46c3ae05440b37f0464898ea86107edac341""><code>0f3b46c</code></a> [Electron Builder] Fix for Signing error on docker with WSL 2 engine … (<a href=""https://github-redirect.dependabot.com/electron-userland/electron-builder/issues/5722"">#5722</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/electron-userland/electron-builder/compare/v22.10.5...v22.11.1"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=app-builder-lib&package-manager=npm_and_yarn&previous-version=22.10.5&new-version=22.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/2260//Reviewed By: mweststrate//Differential Revision: D28181919//Pulled By: passy//fbshipit-source-id: ba8f57c46e08f282315391f5bbdbe37d87c271c5",https://github.com/facebook/flipper/commit/ab7096f0329ba61d0f9ac01c4ebd1f2b7caa42d0,129283183,facebook/flipper,False,False
29,f91b772dfb65151f35ecb253e1536a418b21db2e,"duplicate type_trait for SaiAttribute//Summary:/The _extract functions in SaiAttribute suffer from a major flaw, which is that/they cannot handle type aliases from within the sai_attribute_t.value union./For example, sai_ip4_t and sai_uint32_t are both uint32_t, and sai_object_id_t/and sai_uint64_t are both uint64_t. Since we allow for a wrapper type in/SaiAttribute (ValueType) we were able to use that to differentiate for IP/address. However, for object_id_t, an _actual_ wrapper feels quite clumsy, and/doesn't work with std_is_same choosing which class template instantiation/doesn't have errors.//For this reason, I added a dummy SaiObjectIdT wrapper. Rather than implement/transparent filling, which would burden the end user with actually handling/SaiObjectIdTs (even if I can make it pretty easy), I added a type trait for/totally duplicate types and made SaiAttribute respect it. Now, we can use/SFINAE on the ValueType in _extract to only compile one extract with the same/signature, while still just passing around uint64_ts.//At the extreme ""caller"" end, the user will have to use the familiar/""ValueType in SaiAttribute"" pattern. I have not found that to be too difficult.//Reviewed By: tfangit//Differential Revision: D10163626//fbshipit-source-id: 39e8332b27bb642ba775575e634e6387b0334994",https://github.com/facebook/fboss/commit/f91b772dfb65151f35ecb253e1536a418b21db2e,31927407,facebook/fboss,False,False

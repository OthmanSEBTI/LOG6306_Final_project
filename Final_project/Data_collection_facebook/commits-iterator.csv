sha,message,html_url,repository_id,repository_full_name,repository_private,repository_fork
598c99b4f3bf77405bc0411b9b2c7ea2fd943fc6,Speed up loops//Converted all of the `for...of` loops to traditional `for` loops. This/should avoid costly iterator patterns in code generators and make them/run faster.,https://github.com/facebook/hyperion/commit/598c99b4f3bf77405bc0411b9b2c7ea2fd943fc6,384374915,facebook/hyperion,False,False
e41d90a002cc38c57195546e52926a5be07ec0ab,"Use instruction sources small buffer optimization//Summary:/Redex instructions use a small buffer optimization to store their parameters./We should avoid multiple patterns to use it the most effectively:/* We should avoid `srcs()[i]` and just use `src(i)` (this is also more idiomatic)/* We should avoid `srcs().size()` and use `srcs_size()` which is more optimized/* We should avoid `srcs_vec()` when we can and use `srcs()`/* We should avoid calling `instruction->srcs_size()` in a for condition, since that while be executed at each loop iteration. It's usually better to save the result in a local variable.//Reviewed By: sinancepel//Differential Revision: D43340215//fbshipit-source-id: 9c9147c47479b136d197c5fc659d5f0f22976a48",https://github.com/facebook/mariana-trench/commit/e41d90a002cc38c57195546e52926a5be07ec0ab,317710554,facebook/mariana-trench,False,False
798c9e8217baa29573e9b6c44991fd20ab241091,"Collection matchers (#350)//Summary:/**What:**//Add Collection matchers, as requested in https://github.com/facebook/TestSlide/issues/346//- ``AnyContaining(element)``: A container that contains ``element``/- ``AnyContainingAll(element_list)``: A container that contains every element of ``element_list``/- ``AnyIterable()``: Any iterable/- ``IterableWithElements(element_list)``: an iterable containing all the elements in ``element_list`` in the same order""/- ``AnyNotEmpty()``: An object where ``len()`` does not evaluate to zero""/- ``AnyEmpty()``: An object where ``len()`` evaluates to zero""//**Why:**//Currently, the official matchers support Lists and Dicts, but not much in the way of abstract collections.  This PR enables patterns like://```/actual = deque([1, 2, 3], maxlen=100)/self.assertEqual(actual, IterableWithElements([1, 2, 3]))/```//**How:**//I added these matchers to matchers.py alongside their List/Dict counterparts.  I added unittests to matchers_unittest.py. Finally, I added documentation in patching/argument_matchers/.//**Risks:**//No risk of breaking existing code, since these are largely standalone, however there are some edge cases for these matchers that may or may not be intuitive to the user.//- `AnyEmpty`/`AnyNotEmpty` rely on `len()`, so they will throw on `AnyEmpty() == iter([1, 2, 3])`, for example./- `AnyContaining()`/`AnyContainingAll()` rely on `in`, so will try to match anything that implements `__contains__`/    - They may also exhaust iterators leading to unexpected results.//**Checklist**://<!--/Have you done all of these things?/To check an item, place an ""x"" in the box like so: ""- [x] Tests""/Add ""N/A"" to the end of each line that's irrelevant to your changes/-->//- [x] Added tests, if you've added code that should be tested/- [x] Updated the documentation, if you've changed APIs/- [x] Ensured the test suite passes/- [x] Made sure your code lints/- [x] Completed the Contributor License Agreement (""CLA"")//Pull Request resolved: https://github.com/facebook/TestSlide/pull/350//Reviewed By: bpjatfb//Differential Revision: D44458038//Pulled By: deathowl//fbshipit-source-id: 9951b226fd354090d54b982a290831c524e2a2c6",https://github.com/facebook/TestSlide/commit/798c9e8217baa29573e9b6c44991fd20ab241091,143481189,facebook/TestSlide,False,False
d747a7aa772237b891d9f7426b7e3ef07f61c756,[unnecessary copy] Refactor some common patterns//Summary:/This diff introduced://* `try_eval` that returns an optional value only when it is satisfiable;/* `continue_fold` and `continue_fold_map` that iterates `ContinueProgram` disjuncts only.//Reviewed By: ezgicicek//Differential Revision: D39356000//fbshipit-source-id: 5723b822584ca5b1d2bf6805e6295acc696e9b3c,https://github.com/facebook/infer/commit/d747a7aa772237b891d9f7426b7e3ef07f61c756,29857799,facebook/infer,False,False
41ace35007f65783c76d762ec09aac5e325695ba,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/relay/commit/41ace35007f65783c76d762ec09aac5e325695ba,40508605,facebook/relay,False,False
d136c088ae375ceeb60940689e3ca0556ad5ba32,"React Native sync for revisions fccf3a9...3554c88//Summary:/This sync includes the following changes:/- **[3554c8852](https://github.com/facebook/react/commit/3554c8852 )**: Clean interface for public instances between React and React Native ([#26416](https://github.com/facebook/react/pull/26416)) //<Rubén Norte>///- **[db281b3d9](https://github.com/facebook/react/commit/db281b3d9 )**: Feature: Suspend commit without blocking render ([#26398](https://github.com/facebook/react/pull/26398)) //<Andrew Clark>///- **[55308554e](https://github.com/facebook/react/commit/55308554e )**: [www] enable enableFilterEmptyStringAttributesDOM flag ([#26410](https://github.com/facebook/react/pull/26410)) //<Jan Kassens>///- **[163d86e19](https://github.com/facebook/react/commit/163d86e19 )**: Updated comment message ([#26158](https://github.com/facebook/react/pull/26158)) //<Ibrahim Amin>///- **[108aed083](https://github.com/facebook/react/commit/108aed083 )**: Fix use of stale props in Fabric events ([#26408](https://github.com/facebook/react/pull/26408)) //<Rubén Norte>///- **[8fa41ffa2](https://github.com/facebook/react/commit/8fa41ffa2 )**: Don't ""fix up"" mismatched text content with suppressedHydrationWarning ([#26391](https://github.com/facebook/react/pull/26391)) //<Sebastian Markbåge>///- **[05777ffb0](https://github.com/facebook/react/commit/05777ffb0 )**: Setting transition pending flag shouldn't be part of a surrounding transition ([#26243](https://github.com/facebook/react/pull/26243)) //<Sophie Alpert>///- **[99aa082be](https://github.com/facebook/react/commit/99aa082be )**: Remove unstable_flushControlled ([#26397](https://github.com/facebook/react/pull/26397)) //<Jan Kassens>///- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...3554c88//jest_e2e[run_all_tests]/bypass-github-export-checks//@public//Fixes tests for current React version.//Reviewed By: sammy-SC//Differential Revision: D44216371//fbshipit-source-id: a569c9aeaf2d96d150219e148f06dcde9ba6f7cd",https://github.com/facebook/react-native/commit/d136c088ae375ceeb60940689e3ca0556ad5ba32,29028775,facebook/react-native,False,False
6c208c24d5946a598ccc9b089174a05db532c64d,"React Native sync for revisions fccf3a9...47cf4e5//Summary:/This sync includes the following changes:/- **[47cf4e578](https://github.com/facebook/react/commit/47cf4e578 )**: Restore some guards in ReactFabricGlobalResponderHandler after refactor ([#26394](https://github.com/facebook/react/pull/26394)) //<Rubén Norte>///- **[cfc1274e3](https://github.com/facebook/react/commit/cfc1274e3 )**: Disable IE innerHTML workaround behind a flag ([#26390](https://github.com/facebook/react/pull/26390)) //<Sebastian Markbåge>///- **[a57f40d83](https://github.com/facebook/react/commit/a57f40d83 )**: Undo dependency injection of batching ([#26389](https://github.com/facebook/react/pull/26389)) //<Sebastian Markbåge>///- **[d310d654a](https://github.com/facebook/react/commit/d310d654a )**: Avoid meta programming to initialize functions in module scope  ([#26388](https://github.com/facebook/react/pull/26388)) //<Sebastian Markbåge>///- **[21aee59e4](https://github.com/facebook/react/commit/21aee59e4 )**: Delete unused DOM files ([#26387](https://github.com/facebook/react/pull/26387)) //<Sebastian Markbåge>///- **[6bd53a5bd](https://github.com/facebook/react/commit/6bd53a5bd )**: Remove FeatureFlags fork for `react-dom/unstable_testing` ([#26383](https://github.com/facebook/react/pull/26383)) //<Sebastian Markbåge>///- **[2788d0d8d](https://github.com/facebook/react/commit/2788d0d8d )**: Allow empty string to be passed to formAction ([#26379](https://github.com/facebook/react/pull/26379)) //<Sebastian Markbåge>///- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...47cf4e5//jest_e2e[run_all_tests]//Reviewed By: sammy-SC//Differential Revision: D44090004//fbshipit-source-id: 6ac2d1d22a078d07ce011481063e78843bded28e",https://github.com/facebook/react-native/commit/6c208c24d5946a598ccc9b089174a05db532c64d,29028775,facebook/react-native,False,False
ea57c923b4f7bf6b207de015affddf906c7c7bdc,"React Native sync for revisions fccf3a9...f828bad//Summary:/This sync includes the following changes:/- **[f828bad38](https://github.com/facebook/react/commit/f828bad38 )**: Extracted definition and access to public instances to a separate module in Fabric ([#26321](https://github.com/facebook/react/pull/26321)) //<Rubén Norte>///- **[131768166](https://github.com/facebook/react/commit/131768166 )**: Support Context as renderable node ([#25641](https://github.com/facebook/react/pull/25641)) //<Andrew Clark>///- **[d4f58c3b8](https://github.com/facebook/react/commit/d4f58c3b8 )**: Support Promise as a renderable node  ([#25634](https://github.com/facebook/react/pull/25634)) //<Andrew Clark>///- **[633461486](https://github.com/facebook/react/commit/633461486 )**: Add disableLegacyContext test gates where needed ([#26371](https://github.com/facebook/react/pull/26371)) //<Andrew Clark>///- **[432ffc9d0](https://github.com/facebook/react/commit/432ffc9d0 )**: Convert more Scheduler.unstable_flushAll in tests to new test utils ([#26369](https://github.com/facebook/react/pull/26369)) //<Tianyu Yao>///- **[69fd78fe3](https://github.com/facebook/react/commit/69fd78fe3 )**: Update Float tests to check for specific errors ([#26367](https://github.com/facebook/react/pull/26367)) //<Andrew Clark>///- **[93c10dfa6](https://github.com/facebook/react/commit/93c10dfa6 )**: flushSync: Exhaust queue even if something throws ([#26366](https://github.com/facebook/react/pull/26366)) //<Andrew Clark>///- **[be353d251](https://github.com/facebook/react/commit/be353d251 )**: [Flight Reply] Add undefined and Iterable Support ([#26365](https://github.com/facebook/react/pull/26365)) //<Sebastian Markbåge>///- **[ef8bdbecb](https://github.com/facebook/react/commit/ef8bdbecb )**: [Flight Reply] Add Reply Encoding ([#26360](https://github.com/facebook/react/pull/26360)) //<Sebastian Markbåge>///- **[a8875eab7](https://github.com/facebook/react/commit/a8875eab7 )**: Update more tests to not rely on sync queuing ([#26358](https://github.com/facebook/react/pull/26358)) //<Andrew Clark>///- **[d1ad984db](https://github.com/facebook/react/commit/d1ad984db )**: [Flight] Add support for returning `undefined` from render ([#26349](https://github.com/facebook/react/pull/26349)) //<Sebastian Silbermann>///- **[39d4b9365](https://github.com/facebook/react/commit/39d4b9365 )**: [Internal tests] Close MessageChannel port to prevent leak ([#26357](https://github.com/facebook/react/pull/26357)) //<Andrew Clark>///- **[3706edb81](https://github.com/facebook/react/commit/3706edb81 )**: [Float][Fizz]: Don't preload nomodule scripts ([#26353](https://github.com/facebook/react/pull/26353)) //<Josh Story>///- **[2b003a5cc](https://github.com/facebook/react/commit/2b003a5cc )**: Split out ServerReferenceMetadata into Id and Bound Arguments ([#26351](https://github.com/facebook/react/pull/26351)) //<Sebastian Markbåge>///- **[62cd5af08](https://github.com/facebook/react/commit/62cd5af08 )**: Codemod redundant async act scopes ([#26350](https://github.com/facebook/react/pull/26350)) //<Andrew Clark>///- **[037378202](https://github.com/facebook/react/commit/037378202 )**: Internal `act`: Call scope function after an async gap ([#26347](https://github.com/facebook/react/pull/26347)) //<Andrew Clark>///- **[d8e49f2af](https://github.com/facebook/react/commit/d8e49f2af )**: Use setTimeout to schedule work on the server in Edge environments ([#26348](https://github.com/facebook/react/pull/26348)) //<Sebastian Markbåge>///- **[83643778b](https://github.com/facebook/react/commit/83643778b )**: Internal test helpers: Use Node's MessageChannel to queue task ([#26345](https://github.com/facebook/react/pull/26345)) //<Andrew Clark>///- **[44d380794](https://github.com/facebook/react/commit/44d380794 )**: Move internalAct to internal-test-utils package ([#26344](https://github.com/facebook/react/pull/26344)) //<Andrew Clark>///- **[d81447304](https://github.com/facebook/react/commit/d81447304 )**: [Internal API only] Delete non-awaited form of act ([#26339](https://github.com/facebook/react/pull/26339)) //<Andrew Clark>///- **[702fc984e](https://github.com/facebook/react/commit/702fc984e )**: Codemod act -> await act (4/?) ([#26338](https://github.com/facebook/react/pull/26338)) //<Andrew Clark>///- **[9fb2469a6](https://github.com/facebook/react/commit/9fb2469a6 )**: Restore definition of NativeMethods as an object for React Native ([#26341](https://github.com/facebook/react/pull/26341)) //<Rubén Norte>///- **[161f6ae42](https://github.com/facebook/react/commit/161f6ae42 )**: Codemod act -> await act (3/?) ([#26336](https://github.com/facebook/react/pull/26336)) //<Andrew Clark>///- **[58605f798](https://github.com/facebook/react/commit/58605f798 )**: Codemod act -> await act (2/?) ([#26335](https://github.com/facebook/react/pull/26335)) //<Andrew Clark>///- **[703c67560](https://github.com/facebook/react/commit/703c67560 )**: Codemod act -> await act (1/?) ([#26334](https://github.com/facebook/react/pull/26334)) //<Andrew Clark>///- **[b380c2485](https://github.com/facebook/react/commit/b380c2485 )**: Convert class equivlance tests to flushSync ([#26333](https://github.com/facebook/react/pull/26333)) //<Andrew Clark>///- **[8f812e75d](https://github.com/facebook/react/commit/8f812e75d )**: Refactor ReactFabricHostComponent ([#26323](https://github.com/facebook/react/pull/26323)) //<Rubén Norte>///- **[978fae4b4](https://github.com/facebook/react/commit/978fae4b4 )**: [Float][Fiber] implement a faster hydration match for hoistable elements ([#26154](https://github.com/facebook/react/pull/26154)) //<Josh Story>///- **[8a9f82ed5](https://github.com/facebook/react/commit/8a9f82ed5 )**: [Float][Fizz][Fiber] - Do not hoist elements with `itemProp` & hydrate more tolerantly in hoist contexts ([#26256](https://github.com/facebook/react/pull/26256)) //<Josh Story>///- **[3cad3a54e](https://github.com/facebook/react/commit/3cad3a54e )**: Use content hash for facebook-www builds ([#26331](https://github.com/facebook/react/pull/26331)) //<Jan Kassens>///- **[ba353a50a](https://github.com/facebook/react/commit/ba353a50a )**: Build: make version in build artifacts match ([#26329](https://github.com/facebook/react/pull/26329)) //<Jan Kassens>///- **[6e1756a5a](https://github.com/facebook/react/commit/6e1756a5a )**: Move suspended render logic to ensureRootIsScheduled ([#26328](https://github.com/facebook/react/pull/26328)) //<Andrew Clark>///- **[1528c5ccd](https://github.com/facebook/react/commit/1528c5ccd )**: SchedulerMock.unstable_yieldValue -> SchedulerMock.log ([#26312](https://github.com/facebook/react/pull/26312)) //<Andrew Clark>///- **[4bbac04cd](https://github.com/facebook/react/commit/4bbac04cd )**: Upgrade Flow to 0.201 ([#26326](https://github.com/facebook/react/pull/26326)) //<Jan Kassens>///- **[eb616a12f](https://github.com/facebook/react/commit/eb616a12f )**: Extract duplicated methods in Fabric and the legacy renderer to a shared module ([#26319](https://github.com/facebook/react/pull/26319)) //<Rubén Norte>///- **[49f741046](https://github.com/facebook/react/commit/49f741046 )**: Fix: Infinite act loop caused by wrong shouldYield ([#26317](https://github.com/facebook/react/pull/26317)) //<Andrew Clark>///- **[106ea1c58](https://github.com/facebook/react/commit/106ea1c58 )**: Support Iterables in Flight ([#26313](https://github.com/facebook/react/pull/26313)) //<Sebastian Markbåge>///- **[f905da227](https://github.com/facebook/react/commit/f905da227 )**: [Flight] Send server reference error chunks to the client ([#26293](https://github.com/facebook/react/pull/26293)) //<Hendrik Liebau>///- **[e0241b660](https://github.com/facebook/react/commit/e0241b660 )**: Simplify Webpack References by encoding file path + export name as single id ([#26300](https://github.com/facebook/react/pull/26300)) //<Sebastian Markbåge>///- **[25685d8a9](https://github.com/facebook/react/commit/25685d8a9 )**: Codemod tests to waitFor pattern (9/?) ([#26309](https://github.com/facebook/react/pull/26309)) //<Andrew Clark>///- **[64dde7082](https://github.com/facebook/react/commit/64dde7082 )**: Codemod tests to waitFor pattern (8/?) ([#26308](https://github.com/facebook/react/pull/26308)) //<Andrew Clark>///- **[3cb5afb82](https://github.com/facebook/react/commit/3cb5afb82 )**: Codemod tests to waitFor pattern (7/?) ([#26307](https://github.com/facebook/react/pull/26307)) //<Andrew Clark>///- **[e98695db9](https://github.com/facebook/react/commit/e98695db9 )**: Codemod tests to waitFor pattern (6/?) ([#26305](https://github.com/facebook/react/pull/26305)) //<Andrew Clark>///- **[9a52cc8bc](https://github.com/facebook/react/commit/9a52cc8bc )**: Convert ReactLazy-test to waitFor pattern ([#26304](https://github.com/facebook/react/pull/26304)) //<Andrew Clark>///- **[03462cfc7](https://github.com/facebook/react/commit/03462cfc7 )**: [Fizz] External runtime: fix bug in processing existing elements ([#26303](https://github.com/facebook/react/pull/26303)) //<mofeiZ>///- **[faacefb4d](https://github.com/facebook/react/commit/faacefb4d )**: Codemod tests to waitFor pattern (4/?) ([#26302](https://github.com/facebook/react/pull/26302)) //<Andrew Clark>///- **[06460b6fb](https://github.com/facebook/react/commit/06460b6fb )**: Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler ([#26290](https://github.com/facebook/react/pull/26290)) //<Rubén Norte>///- **[ce8a72fd4](https://github.com/facebook/react/commit/ce8a72fd4 )**: Codemod tests to waitFor pattern (2/?) ([#26296](https://github.com/facebook/react/pull/26296)) //<Andrew Clark>///- **[1f1f8eb55](https://github.com/facebook/react/commit/1f1f8eb55 )**: [Float][Fizz][Fiber]: Refactor <style> Resource implementation to group on flush ([#26280](https://github.com/facebook/react/pull/26280)) //<Josh Story>///- **[5c633a48f](https://github.com/facebook/react/commit/5c633a48f )**: Add back accidentally deleted test comments ([#26294](https://github.com/facebook/react/pull/26294)) //<Andrew Clark>///- **[b72ed698f](https://github.com/facebook/react/commit/b72ed698f )**: Fixed incorrect value returned as public instance from reconciler ([#26283](https://github.com/facebook/react/pull/26283)) //<Rubén Norte>///- **[25a8b9735](https://github.com/facebook/react/commit/25a8b9735 )**: Codemod tests to waitFor pattern (1/?) ([#26288](https://github.com/facebook/react/pull/26288)) //<Andrew Clark>///- **[e52446733](https://github.com/facebook/react/commit/e52446733 )**: New internal testing helpers: waitFor, waitForAll, waitForPaint ([#26285](https://github.com/facebook/react/pull/26285)) //<Andrew Clark>///- **[d49e0e0be](https://github.com/facebook/react/commit/d49e0e0be )**: Removed unused imperative events implementation from React Native renderer ([#26282](https://github.com/facebook/react/pull/26282)) //<Rubén Norte>///- **[41110021f](https://github.com/facebook/react/commit/41110021f )**: Fix: Selective hydration causing incorrect thenable type passed to DevTools ([#26275](https://github.com/facebook/react/pull/26275)) //<Andrew Clark>///- **[67a61d5bd](https://github.com/facebook/react/commit/67a61d5bd )**: [Flight Fixture] Show SSR Support with CSS ([#26263](https://github.com/facebook/react/pull/26263)) //<Sebastian Markbåge>///- **[40755c01a](https://github.com/facebook/react/commit/40755c01a )**: [Flight Fixture] Proxy requests through the global server instead of directly ([#26257](https://github.com/facebook/react/pull/26257)) //<Sebastian Markbåge>///- **[b2ae9ddb3](https://github.com/facebook/react/commit/b2ae9ddb3 )**: Cleanup enableSyncDefaultUpdate flag ([#26236](https://github.com/facebook/react/pull/26236)) //<Jan Kassens>///- **[6ff1733e6](https://github.com/facebook/react/commit/6ff1733e6 )**: [Float][Fizz][Fiber] support type for ReactDOM.preload() options ([#26239](https://github.com/facebook/react/pull/26239)) //<Josh Story>///- **[1173a17e6](https://github.com/facebook/react/commit/1173a17e6 )**: [Float][Fizz][Fiber] implement preconnect and prefetchDNS float methods ([#26237](https://github.com/facebook/react/pull/26237)) //<Josh Story>///- **[a8f971b7a](https://github.com/facebook/react/commit/a8f971b7a )**: Switch to mount dispatcher after use() when needed ([#26232](https://github.com/facebook/react/pull/26232)) //<Sophie Alpert>///- **[96cdeaf89](https://github.com/facebook/react/commit/96cdeaf89 )**: [Fizz Node] Fix null bytes written at text chunk boundaries ([#26228](https://github.com/facebook/react/pull/26228)) //<Sophie Alpert>///- **[c04b18070](https://github.com/facebook/react/commit/c04b18070 )**: Remove eventTime field from class Update type ([#26219](https://github.com/facebook/react/pull/26219)) //<Andrew Clark>///- **[60144a04d](https://github.com/facebook/react/commit/60144a04d )**: Split out Edge and Node implementations of the Flight Client ([#26187](https://github.com/facebook/react/pull/26187)) //<Sebastian Markbåge>///- **[70b0bbda7](https://github.com/facebook/react/commit/70b0bbda7 )**: [fizz][external-runtime] Fix: process mutation records before disconnecting ([#26169](https://github.com/facebook/react/pull/26169)) //<mofeiZ>///- **[c7967b194](https://github.com/facebook/react/commit/c7967b194 )**: Distribute bundles more evenly into CI shards ([#26208](https://github.com/facebook/react/pull/26208)) //<Sebastian Silbermann>///- **[bb1e3d0e1](https://github.com/facebook/react/commit/bb1e3d0e1 )**: Fail yarn build if any bundle fails to build ([#26207](https://github.com/facebook/react/pull/26207)) //<Sebastian Silbermann>///- **[62e6c4612](https://github.com/facebook/react/commit/62e6c4612 )**: Move Mutation/Persistence fork inline into the functions ([#26206](https://github.com/facebook/react/pull/26206)) //<Sebastian Markbåge>///- **[80cf4a099](https://github.com/facebook/react/commit/80cf4a099 )**: Update Closure Compiler ([#26205](https://github.com/facebook/react/pull/26205)) //<Sebastian Markbåge>///- **[6b6d0617e](https://github.com/facebook/react/commit/6b6d0617e )**: Update Rollup and related plugins to their most recent versions ([#24916](https://github.com/facebook/react/pull/24916)) //<Glenn 'devalias' Grant>///- **[bc38a3dfa](https://github.com/facebook/react/commit/bc38a3dfa )**: Update rollup config to use moduleSideEffects ([#26199](https://github.com/facebook/react/pull/26199)) //<Ming Ye>///- **[c9d9f524d](https://github.com/facebook/react/commit/c9d9f524d )**: Make enableCustomElementPropertySupport a dynamic flag in www build ([#26194](https://github.com/facebook/react/pull/26194)) //<Andrew Clark>///- **[189f70e17](https://github.com/facebook/react/commit/189f70e17 )**: Create a bunch of custom webpack vs unbundled node bundles ([#26172](https://github.com/facebook/react/pull/26172)) //<Sebastian Markbåge>///- **[fbf3bc315](https://github.com/facebook/react/commit/fbf3bc315 )**: Add `scale` as a unitless property ([#25601](https://github.com/facebook/react/pull/25601)) //<Jonny Burger>////Changelog:/[General][Changed] - React Native sync for revisions fccf3a9...f828bad//jest_e2e[run_all_tests]//Reviewed By: robhogan, rshest//Differential Revision: D44024996//fbshipit-source-id: 8ac9754c5ffe12bd5d9c3499515c0925bd411f70",https://github.com/facebook/react-native/commit/ea57c923b4f7bf6b207de015affddf906c7c7bdc,29028775,facebook/react-native,False,False
a710503a786505f47d6b70803b378b9c3830af7d,"Bump eslint from 8.35.0 to 8.36.0 in /js/js-flipper (#4596)//Summary:/skip-frl-buck-targeting//Bumps [eslint](https://github.com/eslint/eslint) from 8.35.0 to 8.36.0./<details>/<summary>Release notes</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/releases"">eslint's releases</a>.</em></p>/<blockquote>/<h2>v8.36.0</h2>/<h2>Features</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/</ul>/<h2>Bug Fixes</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/</ul>/<h2>Documentation</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/</ul>/<h2>Chores</h2>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/eslint/eslint/blob/main/CHANGELOG.md"">eslint's changelog</a>.</em></p>/<blockquote>/<p>v8.36.0 - March 10, 2023</p>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release (ESLint Jenkins)</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>) (Laurent Cozic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>) (Nicholas C. Zakas)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/75acdd21c5ce7024252e9d41ed77d2f30587caac""><code>75acdd2</code></a> chore: lint more js files in docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16964"">#16964</a>) (Milos Djermanovic)</li>/<li><a href=""https://github.com/eslint/eslint/commit/3398431574b903757bc78b08c8ed36b7b9fce8eb""><code>3398431</code></a> docs: Custom Parsers cleanup/expansion (<a href=""https://redirect.github.com/eslint/eslint/issues/16887"">#16887</a>) (Ben Perlmutter)</li>/<li><a href=""https://github.com/eslint/eslint/commit/19d3531d9b54e1004318d28f9a6e18305c5bcc18""><code>19d3531</code></a> docs: Update README (GitHub Actions Bot)</li>/<li><a href=""https://github.com/eslint/eslint/commit/4799297ea582c81fd1e5623d32a7ddf7a7f3a126""><code>4799297</code></a> feat: use <a href=""https://github.com/eslint-community""><code>@​eslint-community</code></a> dependencies (<a href=""https://redirect.github.com/eslint/eslint/issues/16784"">#16784</a>) (Michaël De Boey)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b09a512107249a4eb19ef5a37b0bd672266eafdb""><code>b09a512</code></a> docs: detect and fix broken links (<a href=""https://redirect.github.com/eslint/eslint/issues/16837"">#16837</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/92c1943ba73ea01e87086236e8736539b0eed558""><code>92c1943</code></a> fix: correctly iterate files matched by glob patterns (<a href=""https://redirect.github.com/eslint/eslint/issues/16831"">#16831</a>) (Nitin Kumar)</li>/<li><a href=""https://github.com/eslint/eslint/commit/89d9844b3151f09b5b21b6eeeda671009ec301e9""><code>89d9844</code></a> ci: bump actions/add-to-project from 0.4.0 to 0.4.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16943"">#16943</a>) (dependabot[bot])</li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li><a href=""https://github.com/eslint/eslint/commit/75df535681d15d7d685468d637945a200301f9ee""><code>75df535</code></a> 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/a0c856a82266107c8c93a695700b1f69a238316e""><code>a0c856a</code></a> Build: changelog update for 8.36.0</li>/<li><a href=""https://github.com/eslint/eslint/commit/602b11121910a97ab2bc4a95a46dd0ccd0a89309""><code>602b111</code></a> chore: upgrade <code>@​eslint/js</code><a href=""https://github.com/8""><code>@​8</code></a>.36.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16978"">#16978</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/43c2345c27024aeab6127e6bbfd55c8b70bd317e""><code>43c2345</code></a> chore: package.json update for <code>@​eslint/js</code> release</li>/<li><a href=""https://github.com/eslint/eslint/commit/00afb84e5039874c8745a45c953fceaf0c71c454""><code>00afb84</code></a> chore: upgrade <code>@​eslint/eslintrc</code><a href=""https://github.com/2""><code>@​2</code></a>.0.1 (<a href=""https://redirect.github.com/eslint/eslint/issues/16977"">#16977</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/698c5aad50e628ff00281dbc786e42de79834035""><code>698c5aa</code></a> chore: upgrade espree@9.5.0 (<a href=""https://redirect.github.com/eslint/eslint/issues/16976"">#16976</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/b98fdd413a3b07b262bfce6f704c1c1bb8582770""><code>b98fdd4</code></a> docs: Update README</li>/<li><a href=""https://github.com/eslint/eslint/commit/c89a485c49450532ee3db74f2638429f1f37d0dd""><code>c89a485</code></a> feat: Add <code>checkJSDoc</code> option to multiline-comment-style (<a href=""https://redirect.github.com/eslint/eslint/issues/16807"">#16807</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/f5f5e11bd5fd3daab9ccae41e270739c836c305e""><code>f5f5e11</code></a> feat: Serialize parsers/processors in flat config (<a href=""https://redirect.github.com/eslint/eslint/issues/16944"">#16944</a>)</li>/<li><a href=""https://github.com/eslint/eslint/commit/caf08ce0cc74917f7c0eec92d25fd784dc33ac4d""><code>caf08ce</code></a> docs: fix estree link in custom formatters docs (<a href=""https://redirect.github.com/eslint/eslint/issues/16967"">#16967</a>)</li>/<li>Additional commits viewable in <a href=""https://github.com/eslint/eslint/compare/v8.35.0...v8.36.0"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=8.35.0&new-version=8.36.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/4596//Reviewed By: ivanmisuno//Differential Revision: D44215117//Pulled By: mweststrate//fbshipit-source-id: 26c8803b29b6e2176ad0e9e7c35142edbb9baef5",https://github.com/facebook/flipper/commit/a710503a786505f47d6b70803b378b9c3830af7d,129283183,facebook/flipper,False,False
b9d189890941da2a93e892f53a0884de842baa30,"Refactor Label iteration//Summary:/A number of different bytecode instructions have one or more Labels to represent branch targets./The hackc emitter needs to visit all Labels for various reasons; the `Instruct ADT` has them scattered/around in different places making it verbose and error prone to visit them correctly.//This diff introduces an idiom we used in the hacknative IR for operands and branch targets/that is fast and encapsulated. We provide accessors that return slices, either `&[Label]` or/`&mut [Label]`, which only have to do the careful pattern match in one place./Now client code can work with slices (fast), and pattern matching is simplified.//Iterating over a slice is easy (a for loop or iterator chain). If the visitor is a lambda, it is only/called or instantiated in one place, which simplifies code. Transposing/SSwitch's `Vec<Pair(Str,Label)>` to { Vec<Str>, Vec<Label> }, avoids the need for a/transient Vec<Label> in label_rewriter.//Clarify naming a little bit: a Label operand to a conditional branch instruction is a *target*,/not to be confused with a `ILabel(Label)` instruction which marks the location conditional/branches jump to.//Reviewed By: aorenste//Differential Revision: D34112173//fbshipit-source-id: 8ae82e96a855659f083fbcbffcf1b152b9f46ea0",https://github.com/facebook/hhvm/commit/b9d189890941da2a93e892f53a0884de842baa30,455600,facebook/hhvm,False,False
1f6828a24f533f74f625c112def8ee1c248e0c2a,"Further change fill pattern definitions to allow iterating over ""rules""",https://github.com/facebook/Rapid/commit/1f6828a24f533f74f625c112def8ee1c248e0c2a,161120445,facebook/Rapid,False,False
d0aed7e552e5df145b34feed2fecd02a584eeea0,"LanguageServer features in cli: decouple the availability types//Summary:/As noted in my previous diff, the big benefit of using an enum/rather than boolean flags to control feature availability in an IDE/is that it allows us to experiment with functionality without breaking/the interface on the cli.//This is the only way we can move fast in a world where the vscode plugin/is deployed independently of pyre itself - breaking changes are vastly/slower to rollout, and nearly guaranteed to break at least some users.//The same problem is much less serious in python because we don't currently/consider the python API to be stable, but nontheless: we'd also like the/ability to rapidly iterate on a specific feature making only local changes/where they are needed.//The direct use of `Availability` and `AvailabilityWithShadow` is/failing us here: if we add an extra experimental setting to any given feature,/we globally have to change the type of the enum. This is exactly what I'm/trying to avoid in the cli, and it makes sense to avoid it in the python type/signatures as well.//So, instead lets define the two concrete enums as private classes, and then/use type aliases so that each feature is decoupled from the others. This allows/us to add new enums on-the-fly as needed to experiment (e.g. with a prettified/hover, which is almost certainly something we'll need if we want to be competitive/with jedi down the road).//Note that type coverage was *already* an availability flag with a divergent enum/type, and we can now clearly see how this pattern plays out: by renaming the coverage/""level"" to coverage ""availability"" it now becomes much more parsimonious with the other/ide features.//Reviewed By: grievejia//Differential Revision: D39281298//fbshipit-source-id: e65e7a55bbd21fc30488a9d3d32da4d3638f63ef",https://github.com/facebook/pyre-check/commit/d0aed7e552e5df145b34feed2fecd02a584eeea0,110274488,facebook/pyre-check,False,False
0a7907b3ec7e222c6003700b3046cbe55aa31f75,"Remove brittle pattern matching in OptimizeEnums//Summary:/d8 generates slightly different code. This diff replaces a strict opcode match with a generic analysis.//```/// Pattern we are trying to match:///  SGET_OBJECT <LookupTable>;.table///  MOVE_RESULT_PSEUDO <v_field>///  ...///  INVOKE_VIRTUAL <v_enum> <Enum>;.ordinal:()///  MOVE_RESULT <v_ordinal>///  ...///  AGET <v_field>, <v_ordinal>///  MOVE_RESULT_PSEUDO <v_dest>///  ...///  *_SWITCH <v_dest>////// But we want to find cases that have interleaved unrelated instructions or/// block boundaries between them, so we use the sparta analysis framework.////// We track information about which instructions wrote to a given register in/// the `info` struct. If we reach a switch statement with all the fields filled,/// then we've matched the pattern.////// The iterator is used in two phases. First, `iterator.run()` does the analysis/// and `collect()` finds all the sequences that match the pattern/```//Reviewed By: emma0303//Differential Revision: D12990044//fbshipit-source-id: 9e7e768b8986e5def862b915adf48b2fbc4279aa",https://github.com/facebook/redex/commit/0a7907b3ec7e222c6003700b3046cbe55aa31f75,54664770,facebook/redex,False,False
55143a857a3cf1c69841df1ce04a3055c7f3c944,"IterateV, IterateKV: provide override for the most common usage pattern//Summary:/The most common usage is to iterate the input container for reading, where you/don't need to use any of these other lambdas.//The least common usage is using all the lambdas except the last one.//So, kill the least commonly used override, adding false explicitly to the call/sites using it. And add an override for the most commonly used pattern,/simplifying all the call sites.//Makes it possible to iterate containers without filling whole terminal screen/with lambdas.//Reviewed By: alexeyt//Differential Revision: D20130502//fbshipit-source-id: 22a9fcf6585d5d9b5b45d65e7e1845d848b50435",https://github.com/facebook/hhvm/commit/55143a857a3cf1c69841df1ce04a3055c7f3c944,455600,facebook/hhvm,False,False
666cba7b1cb6cfeadb9f44964ceb956c7f33dce8,Follow up on code review./Fixed tables:/- EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME/- EVENTS_STATEMENTS_SuMMARY_BY_THREAD_BY_EVENT_NAME/to follow the iteration pattern changed previously for table/- EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME.//Iteration per thread is in the outer most loop.,https://github.com/facebook/mysql-5.6/commit/666cba7b1cb6cfeadb9f44964ceb956c7f33dce8,9454675,facebook/mysql-5.6,False,False
f29298d91cba86c5181a449719a03712da539fec,"A code review comment for Bug#52289.//Encapsulate the deadlock detection functionality into /a visitor class, and separate it from the wait-for graph/traversal code.//Use ""Internal iterator"" and ""Visitor"" patterns to /achieve the desired separation of responsibilities.//Add comments.",https://github.com/facebook/mysql-5.6/commit/f29298d91cba86c5181a449719a03712da539fec,9454675,facebook/mysql-5.6,False,False
47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,"New Props parsing infrastructure for perf improvements: visitor pattern vs random-map-access pattern (ViewProps, minus YogaLayoutableShadowNode)//Summary:/Perf numbers for this stack are given in terms of before-stack and after-stack, but the changes are split up for ease of review, and also to show that this migration CAN happen per-component and is 100% opt-in. Most existing C++ components do not /need/ to change at all.//# Problem Statement//During certain renders (select critical scenarios in specific products), UIManagerBinding::createNode time takes over 50% of JS thread CPU time. This could be higher or lower depending on the specific product and interaction, but overall createNode takes a lot of CPU time. The question is: can we improve this? What is the minimal overhead needed?//The vast, vast majority of time is taken up by prop parsing (specifically, converting JS values across the JSI into concrete values on the C++ props structs). Other methods like appendChild, etc, do not take up a significant amount of time; so we conclude that createNode is special, and the JSI itself, or calling into C++, is not the problem. Props parsing is the perf problem.//Can we improve it? (Spoiler: yes)//# How does props parsing work today?//Today, props parsing works as follows://1. The ConcreteComponentDescriptor will construct a RawPropsParser (one per component /type/, per application: so one for View, one for Image, one for Text... etc)/2. Once per component type per application, ConcreteComponentDescriptor will call ""prepare"" on the RawPropsParser with an empty, default-constructed ConcreteProps struct. This ConcreteProps struct will cause RawProps.at(field) for every single field./3. Based on the RawProps::at calls in part 2, RawPropsParser constructs a Map from props string names (width, height, position, etc) to a position within a ""value index"" array./4. The above is what happens before any actual props are parsed; and the RawPropsParser is now ready to parse actual Props./5. When props are actually being parsed from a JSI dictionary, we now have two phases:/  1. The RawPropsParser `preparse`s the RawProps, by iterating over the JSI map and filling in two additional data structures: a linear list of RawValues, and a mapping from the ValueIndex array (`keyIndexToValueIndex_`; see step 3) to a value's position in the values list (`value_` in RawPropsParser/RawProps);/  2. The ConcretePropT constructor is called, which is the same as in step 2/3, which calls `fieldValue = rawProps.at(""fieldName"")` repeatedly./  3. For each `at` call, the RawProps will look up a prop name in the Map constructed in step 3, and either return an empty value, or map the key name to the `keyIndexToValueIndex_` array, which maps to a value in `values_`, which is then returned and further parsed.//So, a few things that become clear with the current architecture://1. Complexity is a property of the number of /possible/ props that /can/ be parsed, not what is actually used in product code. This violates the ""only pay for what you use"" principal. If you have `<View opacity={0.5} />`, the ViewProps constructor will request ~170 properties, not 1!/2. There's a lot of pre-parsing which isn't free/3. The levels of indirection aren't free, and make cache misses more likely and pipelining is more challenging/4. The levels of indirection also require more memory - minor, but not free//# How can we improve it?//The goal is to improve props parsing with minimal or zero impact on backwards-compability. We should be able to migrate over components when it's clear there's a performance issue, without requiring everything gets migrated over at once. This both (1) helps us prove out the new architecture, (2) derisks the project, (3) gives us time, internally and externally, to perfect the APIs and gradually migrate everything over before deleting the old infrastructure code entirely.//Thus, the goal is to do something that introduces a zero-cost abstraction. This isn't entirely possible in practice, and in fact this method slightly regresses components that do not use the new architecture /at all/, while dramatically improving migrated components and causing the impact of the /old/ architecture to be minimal.//# Solution//1. We still keep the existing system in place entirely./2. After Props are constructed (see ConcreteComponentDescriptor changes) we iterate over all the /values/ set from JS, and call PropsT::setProp. Incidentally, this allows us to easily reuse the same prop for multiple values for ""free"", which was expensive in the old system./3. It's worth noting that this makes a Props struct ""less immutable"" than it was before, and essentially now we have a ""builder pattern"" for Props. (If we really wanted to, we could still require a single constructor for Props, and then actually use an intermediate PropsBuilder to accumulate values - but I don't think this overhead would be worth for the conceptual ""immutability"" win, and instead a ""Construct/Set/Seal"" model works fine, and we still have all the same guarantees of immutability after the parsing phase)//# Implementation Details/# How to properly construct a single Prop value//Minor detail: parsing a single prop is a 3-step process. We imagine two scenarios: (1) Creating a new ShadowNode/Props A from nothing/void, so the previous Props value is just the default constructor. (2) Cloning a ShadowNode A->B and therefore Props A must be copied to Props B before parsing.//We will denote this as a clone from A->B, where A may or may not be a previous node or a default-constructed Props node; and imagine in particular that we're setting the ""opacity"" value for PropsB.//We must first (1) copy a value over from the previous version of the Props struct, so B.opacity = A.opacity; (2) Determine if opacity has been set from JS. If so, and there is a value, B.opacity = parse(JSValue). (3) If JS has passed in a value for the prop, BUT the value is `null`, it means that JS is resetting or deleting the prop, so we must set it BACK to the default. In this case we set PropsB.opacity = DefaultConstructedProps.opacity.//We must take care in general to ensure that the correct behavior is achieved here, which should help to explain some of the code below.//## String comparisons vs hash comparisons//In the previous system, a RawPropsKey is three `const char*` strings, concatenated together repeatedly /at runtime/. In practice, the ONLY reason we have the prefix, name, suffix Key structure is for the templated prop parsing in ViewProps and YogaStyableProps - that's it. It's not used anywhere else. Further, the key {""margin"", ""Left"", ""Width""} is identical to the key {""marginLeftWidth"", null, null} and we don't do anything fancy with matching prefixes before comparing the whole string, or similar. Before comparison, keys are concatenated into a single string and then we use `strcmp`. The performance of this isn't terrible, but it's nonzero overhead.//I think we can do better and it's sufficient to compare hashed string values; even better, we can construct most of these /at compile time/ using constexpr, and using `switch` statements guarantee no hash collisions within a single Props struct (it's possible there's a collision between Props.cpp and ViewProps.cpp, for example, since they're different switch statements). We may eventually want to be more robust against has collisions; I personally don't find the risk to be too great, hash collisions with these keys are exceedingly unlikely (or maybe I just like to live dangerously). Thus, at runtime, each setProp requires computing a single hash for the value coming from JS, and then int comparisons with a bunch of pre-compiled values.//If we want to be really paranoid, we could be robust to hash collisions by doing `switch COMPILED_HASH(""opacity""): if (strcmp(strFromJs, ""opacity"") == 0)`. I'm happy to do this if there's enough concern.//## Macros//Yuck! I'm using lots of C preprocessor macros. In general I found this way, way easier in reducing code and (essentially) doing codegen for me vs templated code for the switch cases and hashing prop names at compile-time. Maybe there's a better way.//Changelog: [Added][Fabric] New API for efficient props construction//Reviewed By: javache//Differential Revision: D37050215//fbshipit-source-id: d2dcd351a93b9715cfeb5197eb0d6f9194ec6eb9",https://github.com/facebook/react-native/commit/47280de85e62f33f0b97bc1ed7c83bc6ca0dc7d4,29028775,facebook/react-native,False,False
a950634424cddf31c0adb6c9799adf1cc5f83bf0,"fix: compare the LogBoxData ignorePatterns with the right code (#31977)//Summary:/the `LogBoxData.addIgnorePatterns` function shows the wrong code to get a item in `Set`. because every item in `set.entries` looks like `[value, value]`, but not `value`.//while the `addIgnorePatterns` function evalutes two itertaions that is not necessary. So I refacted this function.//## Changelog//<!-- Help reviewers and the release process by writing your own changelog entry. For an example, see:/https://github.com/facebook/react-native/wiki/Changelog/-->//[General] [Fixed] - for LogBox checking existingPattern in a wrong way./[General] [Changed] - addIgnorePatterns runs in one iteration./[General] [Added] - add a function `getIgnorePatterns` in `LogBoxData.js` for tests or other usecases.//Pull Request resolved: https://github.com/facebook/react-native/pull/31977//Test Plan:/test codes in `LogBoxData-test.js`:/````js/it('adding same pattern multiple times', () => {/    expect(LogBoxData.getIgnorePatterns().length).toBe(0);/    LogBoxData.addIgnorePatterns(['abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(1);/    LogBoxData.addIgnorePatterns([/abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/    LogBoxData.addIgnorePatterns(['abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/    LogBoxData.addIgnorePatterns([/abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(2);/  });//  it('adding duplicated patterns', () => {/    expect(LogBoxData.getIgnorePatterns().length).toBe(0);/    LogBoxData.addIgnorePatterns(['abc', /ab/, /abc/, /abc/, 'abc']);/    expect(LogBoxData.getIgnorePatterns().length).toBe(3);/    LogBoxData.addIgnorePatterns([/ab/, /abc/]);/    expect(LogBoxData.getIgnorePatterns().length).toBe(3);/  });/````//and they have passed//Reviewed By: rickhanlonii//Differential Revision: D30675522//Pulled By: yungsters//fbshipit-source-id: 4a05e0f04a41d06cac416219f1e8e540bf0eea02",https://github.com/facebook/react-native/commit/a950634424cddf31c0adb6c9799adf1cc5f83bf0,29028775,facebook/react-native,False,False
5ae8012a6445deac001c286c6a7e46983acb8a02,"vget _n pattern for iterators//Summary:/Adds special patterns to cope with VGetL on unnamed locals in the context of compiling unnatural foreach statements in PHP. In cases/like foreach ($array as $key => &$$v) we do take a reference to an unnamed local, but it does not escape and the local is unset within a couple/of instructions, so it is safe to treat this as a read and then an unset of the local. This diff adds rather specific and hacky special case/rules to cope with the associated patterns of code.//Reviewed By: hubyrod//Differential Revision: D5337863//fbshipit-source-id: 829bb3c6e467ebfeb2d4fdde770e9b60c130e440",https://github.com/facebook/hhvm/commit/5ae8012a6445deac001c286c6a7e46983acb8a02,455600,facebook/hhvm,False,False
854d062ec83af91aab71ac24e70ecadeab5a2658,A few small optimizations in ComponentHostUtils//Summary:/Saw a few small opportunities while investigating a crashing bug ...//Three pattern changes here:/1) avoiding iterator allocations when looping over Lists/2) calling size() once on these Lists to remove some virtual method call overhead/3) passing desired capacity to ArrayList constructor when it's definitively known ahead-of-time//Reviewed By: bthood//Differential Revision: D5041553//fbshipit-source-id: 59562aa98b1eebc1304f37648501bd855bef6c5b,https://github.com/facebook/litho/commit/854d062ec83af91aab71ac24e70ecadeab5a2658,80179724,facebook/litho,False,False
cab46685781621bd35659505acb3b38f11f82cc8,"Bump rayon from 1.5.1 to 1.5.2 in /packer (#3636)//Summary:/Bumps [rayon](https://github.com/rayon-rs/rayon) from 1.5.1 to 1.5.2./<details>/<summary>Changelog</summary>/<p><em>Sourced from <a href=""https://github.com/rayon-rs/rayon/blob/master/RELEASES.md"">rayon's changelog</a>.</em></p>/<blockquote>/<h1>Release rayon 1.5.2 / rayon-core 1.9.2 (2022-04-13)</h1>/<ul>/<li>The new <code>ParallelSlice::par_rchunks()</code> and <code>par_rchunks_exact()</code> iterate/slice chunks in reverse, aligned the against the end of the slice if the/length is not a perfect multiple of the chunk size. The new/<code>ParallelSliceMut::par_rchunks_mut()</code> and <code>par_rchunks_exact_mut()</code> are the/same for mutable slices.</li>/<li>The <code>ParallelIterator::try_*</code> methods now support <code>std::ops::ControlFlow</code> and/<code>std::task::Poll</code> items, mirroring the unstable <code>Try</code> implementations in the/standard library.</li>/<li>The <code>ParallelString</code> pattern-based methods now support <code>&amp;[char]</code> patterns,/which match when any character in that slice is found in the string.</li>/<li>A soft limit is now enforced on the number of threads allowed in a single/thread pool, respecting internal bit limits that already existed. The current/maximum is publicly available from the new function <code>max_num_threads()</code>.</li>/<li>Fixed several Stacked Borrow and provenance issues found by <code>cargo miri</code>.</li>/</ul>/<h2>Contributors</h2>/<p>Thanks to all of the contributors for this release!</p>/<ul>/<li><a href=""https://github.com/atouchet""><code>@​atouchet</code></a></li>/<li><a href=""https://github.com/bluss""><code>@​bluss</code></a></li>/<li><a href=""https://github.com/cuviper""><code>@​cuviper</code></a></li>/<li><a href=""https://github.com/fzyzcjy""><code>@​fzyzcjy</code></a></li>/<li><a href=""https://github.com/nyanzebra""><code>@​nyanzebra</code></a></li>/<li><a href=""https://github.com/paolobarbolini""><code>@​paolobarbolini</code></a></li>/<li><a href=""https://github.com/RReverser""><code>@​RReverser</code></a></li>/<li><a href=""https://github.com/saethlin""><code>@​saethlin</code></a></li>/</ul>/</blockquote>/</details>/<details>/<summary>Commits</summary>/<ul>/<li>See full diff in <a href=""https://github.com/rayon-rs/rayon/commits"">compare view</a></li>/</ul>/</details>/<br />//[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rayon&package-manager=cargo&previous-version=1.5.1&new-version=1.5.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)//Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.//[//]: # (dependabot-automerge-start)/[//]: # (dependabot-automerge-end)// ---//<details>/<summary>Dependabot commands and options</summary>/<br />//You can trigger Dependabot actions by commenting on this PR:/- `dependabot rebase` will rebase this PR/- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it/- `dependabot merge` will merge this PR after your CI passes on it/- `dependabot squash and merge` will squash and merge this PR after your CI passes on it/- `dependabot cancel merge` will cancel a previously requested merge and block automerging/- `dependabot reopen` will reopen this PR if it is closed/- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually/- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)/- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)//</details>//Pull Request resolved: https://github.com/facebook/flipper/pull/3636//Reviewed By: antonk52//Differential Revision: D35893257//Pulled By: lblasa//fbshipit-source-id: ad1df71d2f0c5bf09dda1e6927b147a13eac5f81",https://github.com/facebook/flipper/commit/cab46685781621bd35659505acb3b38f11f82cc8,129283183,facebook/flipper,False,False
9d0cae71042be55a5429aa2e2ddc4be330995965,"Eliminate unnecessary (slow) block cache Ref()ing in MultiGet (#9899)//Summary:/When MultiGet() determines that multiple query keys can be/served by examining the same data block in block cache (one Lookup()),/each PinnableSlice referring to data in that data block needs to hold/on to the block in cache so that they can be released at arbitrary/times by the API user. Historically this is accomplished with extra/calls to Ref() on the Handle from Lookup(), with each PinnableSlice/cleanup calling Release() on the Handle, but this creates extra/contention on the block cache for the extra Ref()s and Release()es,/especially because they hit the same cache shard repeatedly.//In the case of merge operands (possibly more cases?), the problem was/compounded by doing an extra Ref()+eventual Release() for each merge/operand for a key reusing a block (which could be the same key!), rather/than one Ref() per key. (Note: the non-shared case with `biter` was/already one per key.)//This change optimizes MultiGet not to rely on these extra, contentious/Ref()+Release() calls by instead, in the shared block case, wrapping/the cache Release() cleanup in a refcounted object referenced by the/PinnableSlices, such that after the last wrapped reference is released,/the cache entry is Release()ed. Relaxed atomic refcounts should be/much faster than mutex-guarded Ref() and Release(), and much less prone/to a performance cliff when MultiGet() does a lot of block sharing.//Note that I did not use std::shared_ptr, because that would require an/extra indirection object (shared_ptr itself new/delete) in order to/associate a ref increment/decrement with a Cleanable cleanup entry. (If/I assumed it was the size of two pointers, I could do some hackery to/make it work without the extra indirection, but that's too fragile.)//Some details:/* Fixed (removed) extra block cache tracing entries in cases of cache/entry reuse in MultiGet, but it's likely that in some other cases traces/are missing (XXX comment inserted)/* Moved existing implementations for cleanable.h from iterator.cc to/new cleanable.cc/* Improved API comments on Cleanable/* Added a public SharedCleanablePtr class to cleanable.h in case others/could benefit from the same pattern (potentially many Cleanables and/or/smart pointers referencing a shared Cleanable)/* Add a typedef for MultiGetContext::Mask/* Some variable renaming for clarity//Pull Request resolved: https://github.com/facebook/rocksdb/pull/9899//Test Plan:/Added unit tests for SharedCleanablePtr.//Greatly enhanced ability of existing tests to detect cache use-after-free./* Release PinnableSlices from MultiGet as they are read rather than in/bulk (in db_test_util wrapper)./* In ASAN build, default to using a trivially small LRUCache for block_cache/so that entries are immediately erased when unreferenced. (Updated two/tests that depend on caching.) New ASAN testsuite running time seems/OK to me.//If I introduce a bug into my implementation where we skip the shared/cleanups on block reuse, ASAN detects the bug in/`db_basic_test *MultiGet*`. If I remove either of the above testing/enhancements, the bug is not detected.//Consider for follow-up work: manipulate or randomize ordering of/PinnableSlice use and release from MultiGet db_test_util wrapper. But in/typical cases, natural ordering gives pretty good functional coverage.//Performance test:/In the extreme (but possible) case of MultiGetting the same or adjacent keys/in a batch, throughput can improve by an order of magnitude./`./db_bench -benchmarks=multireadrandom -db=/dev/shm/testdb -readonly -num=5 -duration=10 -threads=20 -multiread_batched -batch_size=200`/Before ops/sec, num=5: 1,384,394/Before ops/sec, num=500: 6,423,720/After ops/sec, num=500: 10,658,794/After ops/sec, num=5: 16,027,257//Also note that previously, with high parallelism, having query keys/concentrated in a single block was worse than spreading them out a bit. Now/concentrated in a single block is faster than spread out, which is hopefully/consistent with natural expectation.//Random query performance: with num=1000000, over 999 x 10s runs running before & after simultaneously (each -threads=12):/Before: multireadrandom [AVG    999 runs] : 1088699 (± 7344) ops/sec;  120.4 (± 0.8 ) MB/sec/After: multireadrandom [AVG    999 runs] : 1090402 (± 7230) ops/sec;  120.6 (± 0.8 ) MB/sec/Possibly better, possibly in the noise.//Reviewed By: anand1976//Differential Revision: D35907003//Pulled By: pdillinger//fbshipit-source-id: bbd244d703649a8ca12d476f2d03853ed9d1a17e",https://github.com/facebook/rocksdb/commit/9d0cae71042be55a5429aa2e2ddc4be330995965,6934395,facebook/rocksdb,False,False
3d9d0e7766d4195bbe40dbac8d85abcfe343beb0,"BUG#11757250: REPLACE(...) INSIDE A STORED PROCEDURE.//Analysis:/--------//REPLACE operation provides incorrect output when/user variable is supplied as an argument and there/are multiple rows on which the operation is performed.//Consider the example below://SET @var='(( 00000000 ++ 00000000 ))';/SELECT REPLACE(@var, '00000000', table_name) AS a FROM/INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='mysql';//Invalid output:/  +---------------------------------------+/  | REPLACE(@var, '00000000', TABLE_NAME) |/  +---------------------------------------+/  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/      ....../      ....../  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/  | (( columns_priv ++ columns_priv ))    |/  +---------------------------------------+//The user argument supplied as the string to REPLACE/operation is overwritten after the first iteration/to '(( columns_priv ++ columns_priv ))'./The overwritten string after the first iteration/is used for the subsequent REPLACE iteration. Since/the pattern string is not found, it returns invalid/output as mentioned above.//Fix:/---/If the Alloced_length is zero, realloc() and create a/copy of the string which is then used for the REPLACE/operation for every iteration.",https://github.com/facebook/mysql-5.6/commit/3d9d0e7766d4195bbe40dbac8d85abcfe343beb0,9454675,facebook/mysql-5.6,False,False
36bff65cf6e15a53df65156212076eed188ee0e9,"Add test case for mutating collections while iterating//In a previous version of D1012992 I broke Vector by/accidentally disallowing the following pattern//  $v = Vector {1, 2, 3};/  foreach ($v as $e) {/    $v[0] = 42;/  }//i.e. we should be able to mutate elements of Vector (and Map, and StableMap)/while iterating over the collection at the same time.//The bug was caught by a flib unit test, but it seems there wasn't an/hphp unit test that tested the behaviour.//So I'm adding it.//Reviewed By: @paroski//Differential Revision: D1056037",https://github.com/facebook/hhvm/commit/36bff65cf6e15a53df65156212076eed188ee0e9,455600,facebook/hhvm,False,False
9f5d69bf1faf6252f9c18a3869013e93644f98c9,"Fix how the HardReturnTypehints optimization deals with interfaces//Summary: As HHBBC does iterative analysis, it aims to uphold an invariant that return/types will only be refined and never be widened. When HardReturnTypehints is/enabled, there are certain code patterns that make it possible to violate/this invariant when an interface return typehint is involved.//This tweaks the HardReturnTypehints optimization to be more conservative/with interface return typehints to avoid the problem.//Reviewed By: @jdelong//Differential Revision: D1805456",https://github.com/facebook/hhvm/commit/9f5d69bf1faf6252f9c18a3869013e93644f98c9,455600,facebook/hhvm,False,False
a46fba5dd366144d76a56a6e780c5183a14d18cb,"use DynamicFromObject to avoid maps//Summary:/Changes our property access pattern to iterate through props once and pass the Object value directly rather than looking the value up in the map with the key.//Note some ViewManagers methods (especially yoga related ones on shadow nodes) expect a `Dyanamic`, so this diff also creates Dynamic's only when needed by the hand-written code, and introduces a new `DynamicWithObject` to create them that simply wraps the underlying object (as opposed to `DynamicWithMap` which wraps the map and does a lookup any time the `Dynamic` is accessed.//Reviewed By: mdvacca//Differential Revision: D14453300//fbshipit-source-id: df98567b6eff1e6b7c611f179eb11e413fb94e5d",https://github.com/facebook/react-native/commit/a46fba5dd366144d76a56a6e780c5183a14d18cb,29028775,facebook/react-native,False,False
3434b3180d114995305e5fe66775f78c4c794f0d,"Run again after IntraDexInliner//Summary:/I have observed that the instruction sequence outliner actually hits the `kMaxMethodRefs` limit occasionally (in some dexes), and yet, at the very end, we still have some method refs to spare. The reason is the IntraDexInline pass that runs after the outliner: it removes a good number of methods. So, let's run the outliner once more after the inliner. This way.../- we can outline more beneficial candidates that hit the kMaxMethodRefs boundary earlier, and/- we might find more beneficial candidates after the changes in code patterns due to another inlining round, and the earlier outlining itself.//To this end, we adjust the naming scheme of the generated classes / methods to make sure that different outliner iterations don't stomp on each other.//Before, an outlined class / method would have a name like.../````/com.redex.Outlined$0$0.$outlined$7091297849863854496/````/and now it becomes/```/com.redex.Outlined$X$0$0.$outlined$X$7091297849863854496/```/where `X` is the outliner iteration.//Reviewed By: newobj//Differential Revision: D21631245//fbshipit-source-id: 169f1cd8a7dc9a68a4ec507ab722e852a6615f47",https://github.com/facebook/redex/commit/3434b3180d114995305e5fe66775f78c4c794f0d,54664770,facebook/redex,False,False
3f6f448c918b25cd1250b0a8db8054d2191c3b6d,"Simplest builder case//Summary:/First pass through builders and optimizing the most trivial ones./For this case, I chose only the builders that:/* don't escape the stack/* they don't pass ""this"" in the constructor/* build method can be inlined/* all fields are initialized/After inlining the build method, if it succeeds, it tries to remove the builder completely. For the moment, the solution doesn't allocate extra registers. If possible, it removes the fields and reuse the registers.//Given that in fb4a there are none that follow this pattern, didn't add the pass. Following iterations will do that.//Reviewed By: int3//Differential Revision: D4674949//fbshipit-source-id: 532d77151b124a59d4ae23013d95b220292d331b",https://github.com/facebook/redex/commit/3f6f448c918b25cd1250b0a8db8054d2191c3b6d,54664770,facebook/redex,False,False
08d712a7a3bb416c8360f11bde66a774e6b5b83e,"Change insert implementation to template that takes iterators//Summary:/While manipulating IR using the awesome editable CFG, I am finding myself using the following pattern a lot:/```/std::vector<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert);/```/Vector insertion on average is `O(log(n))`, while worse being `O(n)`. It would be nice if we can use either `std::deque` (whose insertion or removal of elements at the end or beginning take constant time) or any kind of data structure we currently use to hold IR (I am guessing like `IRList`?)//Because in C++ we frequently pass iterators to achieve this level of polymorphism. So I would prefer to have an API like this://```//* any type of containers that holds IRInstruction* *//std::deque<IRInstruction*> to_insert;/// populate to_insert/cfg.insert_before(insn_it, to_insert.begin(), to_insert.end());/```/This diff is the first step to make the actual insert implementation a template.//Reviewed By: justinjhendrick//Differential Revision: D15139367//fbshipit-source-id: cc1bc926d963a6171c3ed8f3415e487909820b20",https://github.com/facebook/redex/commit/08d712a7a3bb416c8360f11bde66a774e6b5b83e,54664770,facebook/redex,False,False
9d307f3b318662b9854fe753f9a1d3654551563b,"Implement a Stateful NAST Check//Summary:/Currently, the nast_check visitor is a bit unwieldy to use for stateful/context based error checks. Each method of a nast check visitor is context free but there are many error checks that require some context/state to correctly report errors. Currently, many of these checks do one of the following to gain context/stateful capabilities.//1. Add context/state to the global nast check env/2. Retain context/state locally in the visitor via a stateful reference/3. Implement another stateful visitor and call into that//There are a couple of problems with each:/1. The code to do this is a non obvious pattern. It also pollutes the global environment with state that is only needed in one particular visitor/2. Updating a reference statefully is difficult to reason about within the visitor framework/3. This breaks out assumption that we will only make one pass over the ast for all checks, instead of one per check.//This diff creates a framework for a stateful nast check visitor where each visitor is able to retain its own state when iterating over the AST.//Reviewed By: Wilfred//Differential Revision: D21292538//fbshipit-source-id: 9fe6929435fed28a177c7cc2fe82c896a90c97a9",https://github.com/facebook/hhvm/commit/9d307f3b318662b9854fe753f9a1d3654551563b,455600,facebook/hhvm,False,False
